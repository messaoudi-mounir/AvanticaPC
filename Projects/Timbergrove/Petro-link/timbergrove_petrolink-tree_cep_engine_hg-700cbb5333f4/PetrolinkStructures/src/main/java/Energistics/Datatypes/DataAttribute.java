/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataAttribute extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataAttribute\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"attributeId\",\"type\":\"int\"},{\"name\":\"attributeValue\",\"type\":{\"type\":\"record\",\"name\":\"DataValue\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]},\"boolean\",\"bytes\"]}],\"fullName\":\"Energistics.Datatypes.DataValue\",\"depends\":[\"Energistics.Datatypes.ArrayOfDouble\"]}}],\"fullName\":\"Energistics.Datatypes.DataAttribute\",\"depends\":[\"Energistics.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int attributeId;
  @Deprecated public Energistics.Datatypes.DataValue attributeValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataAttribute() {}

  /**
   * All-args constructor.
   */
  public DataAttribute(java.lang.Integer attributeId, Energistics.Datatypes.DataValue attributeValue) {
    this.attributeId = attributeId;
    this.attributeValue = attributeValue;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return attributeId;
    case 1: return attributeValue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: attributeId = (java.lang.Integer)value$; break;
    case 1: attributeValue = (Energistics.Datatypes.DataValue)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'attributeId' field.
   */
  public java.lang.Integer getAttributeId() {
    return attributeId;
  }

  /**
   * Sets the value of the 'attributeId' field.
   * @param value the value to set.
   */
  public void setAttributeId(java.lang.Integer value) {
    this.attributeId = value;
  }

  /**
   * Gets the value of the 'attributeValue' field.
   */
  public Energistics.Datatypes.DataValue getAttributeValue() {
    return attributeValue;
  }

  /**
   * Sets the value of the 'attributeValue' field.
   * @param value the value to set.
   */
  public void setAttributeValue(Energistics.Datatypes.DataValue value) {
    this.attributeValue = value;
  }

  /** Creates a new DataAttribute RecordBuilder */
  public static Energistics.Datatypes.DataAttribute.Builder newBuilder() {
    return new Energistics.Datatypes.DataAttribute.Builder();
  }
  
  /** Creates a new DataAttribute RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.DataAttribute.Builder newBuilder(Energistics.Datatypes.DataAttribute.Builder other) {
    return new Energistics.Datatypes.DataAttribute.Builder(other);
  }
  
  /** Creates a new DataAttribute RecordBuilder by copying an existing DataAttribute instance */
  public static Energistics.Datatypes.DataAttribute.Builder newBuilder(Energistics.Datatypes.DataAttribute other) {
    return new Energistics.Datatypes.DataAttribute.Builder(other);
  }
  
  /**
   * RecordBuilder for DataAttribute instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataAttribute>
    implements org.apache.avro.data.RecordBuilder<DataAttribute> {

    private int attributeId;
    private Energistics.Datatypes.DataValue attributeValue;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.DataAttribute.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.DataAttribute.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.attributeId)) {
        this.attributeId = data().deepCopy(fields()[0].schema(), other.attributeId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributeValue)) {
        this.attributeValue = data().deepCopy(fields()[1].schema(), other.attributeValue);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataAttribute instance */
    private Builder(Energistics.Datatypes.DataAttribute other) {
            super(Energistics.Datatypes.DataAttribute.SCHEMA$);
      if (isValidValue(fields()[0], other.attributeId)) {
        this.attributeId = data().deepCopy(fields()[0].schema(), other.attributeId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributeValue)) {
        this.attributeValue = data().deepCopy(fields()[1].schema(), other.attributeValue);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'attributeId' field */
    public java.lang.Integer getAttributeId() {
      return attributeId;
    }
    
    /** Sets the value of the 'attributeId' field */
    public Energistics.Datatypes.DataAttribute.Builder setAttributeId(int value) {
      validate(fields()[0], value);
      this.attributeId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'attributeId' field has been set */
    public boolean hasAttributeId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'attributeId' field */
    public Energistics.Datatypes.DataAttribute.Builder clearAttributeId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'attributeValue' field */
    public Energistics.Datatypes.DataValue getAttributeValue() {
      return attributeValue;
    }
    
    /** Sets the value of the 'attributeValue' field */
    public Energistics.Datatypes.DataAttribute.Builder setAttributeValue(Energistics.Datatypes.DataValue value) {
      validate(fields()[1], value);
      this.attributeValue = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'attributeValue' field has been set */
    public boolean hasAttributeValue() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'attributeValue' field */
    public Energistics.Datatypes.DataAttribute.Builder clearAttributeValue() {
      attributeValue = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DataAttribute build() {
      try {
        DataAttribute record = new DataAttribute();
        record.attributeId = fieldSetFlags()[0] ? this.attributeId : (java.lang.Integer) defaultValue(fields()[0]);
        record.attributeValue = fieldSetFlags()[1] ? this.attributeValue : (Energistics.Datatypes.DataValue) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
