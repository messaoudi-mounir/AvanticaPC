/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Protocol.ChannelStreaming;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ChannelDelete extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChannelDelete\",\"namespace\":\"Energistics.Protocol.ChannelStreaming\",\"fields\":[{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"deleteReason\",\"type\":[\"null\",\"string\"]}],\"messageType\":\"8\",\"protocol\":\"1\",\"senderRole\":\"producer\",\"protocolRoles\":\"producer,consumer\",\"fullName\":\"Energistics.Protocol.ChannelStreaming.ChannelDelete\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long channelId;
  @Deprecated public java.lang.CharSequence deleteReason;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChannelDelete() {}

  /**
   * All-args constructor.
   */
  public ChannelDelete(java.lang.Long channelId, java.lang.CharSequence deleteReason) {
    this.channelId = channelId;
    this.deleteReason = deleteReason;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return deleteReason;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channelId = (java.lang.Long)value$; break;
    case 1: deleteReason = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   */
  public java.lang.Long getChannelId() {
    return channelId;
  }

  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(java.lang.Long value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'deleteReason' field.
   */
  public java.lang.CharSequence getDeleteReason() {
    return deleteReason;
  }

  /**
   * Sets the value of the 'deleteReason' field.
   * @param value the value to set.
   */
  public void setDeleteReason(java.lang.CharSequence value) {
    this.deleteReason = value;
  }

  /** Creates a new ChannelDelete RecordBuilder */
  public static Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder newBuilder() {
    return new Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder();
  }
  
  /** Creates a new ChannelDelete RecordBuilder by copying an existing Builder */
  public static Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder newBuilder(Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder other) {
    return new Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder(other);
  }
  
  /** Creates a new ChannelDelete RecordBuilder by copying an existing ChannelDelete instance */
  public static Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder newBuilder(Energistics.Protocol.ChannelStreaming.ChannelDelete other) {
    return new Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder(other);
  }
  
  /**
   * RecordBuilder for ChannelDelete instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChannelDelete>
    implements org.apache.avro.data.RecordBuilder<ChannelDelete> {

    private long channelId;
    private java.lang.CharSequence deleteReason;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Protocol.ChannelStreaming.ChannelDelete.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deleteReason)) {
        this.deleteReason = data().deepCopy(fields()[1].schema(), other.deleteReason);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChannelDelete instance */
    private Builder(Energistics.Protocol.ChannelStreaming.ChannelDelete other) {
            super(Energistics.Protocol.ChannelStreaming.ChannelDelete.SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deleteReason)) {
        this.deleteReason = data().deepCopy(fields()[1].schema(), other.deleteReason);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'channelId' field */
    public java.lang.Long getChannelId() {
      return channelId;
    }
    
    /** Sets the value of the 'channelId' field */
    public Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder setChannelId(long value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'channelId' field has been set */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'channelId' field */
    public Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder clearChannelId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'deleteReason' field */
    public java.lang.CharSequence getDeleteReason() {
      return deleteReason;
    }
    
    /** Sets the value of the 'deleteReason' field */
    public Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder setDeleteReason(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.deleteReason = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'deleteReason' field has been set */
    public boolean hasDeleteReason() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'deleteReason' field */
    public Energistics.Protocol.ChannelStreaming.ChannelDelete.Builder clearDeleteReason() {
      deleteReason = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ChannelDelete build() {
      try {
        ChannelDelete record = new ChannelDelete();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (java.lang.Long) defaultValue(fields()[0]);
        record.deleteReason = fieldSetFlags()[1] ? this.deleteReason : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
