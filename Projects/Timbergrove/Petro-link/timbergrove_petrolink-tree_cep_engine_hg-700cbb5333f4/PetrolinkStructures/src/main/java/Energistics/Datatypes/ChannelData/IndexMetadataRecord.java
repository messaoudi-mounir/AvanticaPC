/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes.ChannelData;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class IndexMetadataRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IndexMetadataRecord\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"indexType\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelIndexTypes\",\"symbols\":[\"Time\",\"Depth\"],\"fullName\":\"Energistics.Datatypes.ChannelData.ChannelIndexTypes\",\"depends\":[]}},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":[\"null\",\"string\"]},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"IndexDirections\",\"symbols\":[\"Increasing\",\"Decreasing\"],\"fullName\":\"Energistics.Datatypes.ChannelData.IndexDirections\",\"depends\":[]}},{\"name\":\"mnemonic\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"uri\",\"type\":[\"null\",\"string\"]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]},\"boolean\",\"bytes\"]}],\"fullName\":\"Energistics.Datatypes.DataValue\",\"depends\":[\"Energistics.Datatypes.ArrayOfDouble\"]}}},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"timeDatum\",\"type\":[\"null\",\"string\"]}],\"fullName\":\"Energistics.Datatypes.ChannelData.IndexMetadataRecord\",\"depends\":[\"Energistics.Datatypes.ChannelData.ChannelIndexTypes\",\"Energistics.Datatypes.ChannelData.IndexDirections\",\"Energistics.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Energistics.Datatypes.ChannelData.ChannelIndexTypes indexType;
  @Deprecated public java.lang.CharSequence uom;
  @Deprecated public java.lang.CharSequence depthDatum;
  @Deprecated public Energistics.Datatypes.ChannelData.IndexDirections direction;
  @Deprecated public java.lang.CharSequence mnemonic;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence uri;
  @Deprecated public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> customData;
  @Deprecated public int scale;
  @Deprecated public java.lang.CharSequence timeDatum;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public IndexMetadataRecord() {}

  /**
   * All-args constructor.
   */
  public IndexMetadataRecord(Energistics.Datatypes.ChannelData.ChannelIndexTypes indexType, java.lang.CharSequence uom, java.lang.CharSequence depthDatum, Energistics.Datatypes.ChannelData.IndexDirections direction, java.lang.CharSequence mnemonic, java.lang.CharSequence description, java.lang.CharSequence uri, java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> customData, java.lang.Integer scale, java.lang.CharSequence timeDatum) {
    this.indexType = indexType;
    this.uom = uom;
    this.depthDatum = depthDatum;
    this.direction = direction;
    this.mnemonic = mnemonic;
    this.description = description;
    this.uri = uri;
    this.customData = customData;
    this.scale = scale;
    this.timeDatum = timeDatum;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return indexType;
    case 1: return uom;
    case 2: return depthDatum;
    case 3: return direction;
    case 4: return mnemonic;
    case 5: return description;
    case 6: return uri;
    case 7: return customData;
    case 8: return scale;
    case 9: return timeDatum;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: indexType = (Energistics.Datatypes.ChannelData.ChannelIndexTypes)value$; break;
    case 1: uom = (java.lang.CharSequence)value$; break;
    case 2: depthDatum = (java.lang.CharSequence)value$; break;
    case 3: direction = (Energistics.Datatypes.ChannelData.IndexDirections)value$; break;
    case 4: mnemonic = (java.lang.CharSequence)value$; break;
    case 5: description = (java.lang.CharSequence)value$; break;
    case 6: uri = (java.lang.CharSequence)value$; break;
    case 7: customData = (java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue>)value$; break;
    case 8: scale = (java.lang.Integer)value$; break;
    case 9: timeDatum = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'indexType' field.
   */
  public Energistics.Datatypes.ChannelData.ChannelIndexTypes getIndexType() {
    return indexType;
  }

  /**
   * Sets the value of the 'indexType' field.
   * @param value the value to set.
   */
  public void setIndexType(Energistics.Datatypes.ChannelData.ChannelIndexTypes value) {
    this.indexType = value;
  }

  /**
   * Gets the value of the 'uom' field.
   */
  public java.lang.CharSequence getUom() {
    return uom;
  }

  /**
   * Sets the value of the 'uom' field.
   * @param value the value to set.
   */
  public void setUom(java.lang.CharSequence value) {
    this.uom = value;
  }

  /**
   * Gets the value of the 'depthDatum' field.
   */
  public java.lang.CharSequence getDepthDatum() {
    return depthDatum;
  }

  /**
   * Sets the value of the 'depthDatum' field.
   * @param value the value to set.
   */
  public void setDepthDatum(java.lang.CharSequence value) {
    this.depthDatum = value;
  }

  /**
   * Gets the value of the 'direction' field.
   */
  public Energistics.Datatypes.ChannelData.IndexDirections getDirection() {
    return direction;
  }

  /**
   * Sets the value of the 'direction' field.
   * @param value the value to set.
   */
  public void setDirection(Energistics.Datatypes.ChannelData.IndexDirections value) {
    this.direction = value;
  }

  /**
   * Gets the value of the 'mnemonic' field.
   */
  public java.lang.CharSequence getMnemonic() {
    return mnemonic;
  }

  /**
   * Sets the value of the 'mnemonic' field.
   * @param value the value to set.
   */
  public void setMnemonic(java.lang.CharSequence value) {
    this.mnemonic = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }

  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'customData' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> getCustomData() {
    return customData;
  }

  /**
   * Sets the value of the 'customData' field.
   * @param value the value to set.
   */
  public void setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> value) {
    this.customData = value;
  }

  /**
   * Gets the value of the 'scale' field.
   */
  public java.lang.Integer getScale() {
    return scale;
  }

  /**
   * Sets the value of the 'scale' field.
   * @param value the value to set.
   */
  public void setScale(java.lang.Integer value) {
    this.scale = value;
  }

  /**
   * Gets the value of the 'timeDatum' field.
   */
  public java.lang.CharSequence getTimeDatum() {
    return timeDatum;
  }

  /**
   * Sets the value of the 'timeDatum' field.
   * @param value the value to set.
   */
  public void setTimeDatum(java.lang.CharSequence value) {
    this.timeDatum = value;
  }

  /** Creates a new IndexMetadataRecord RecordBuilder */
  public static Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder newBuilder() {
    return new Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder();
  }
  
  /** Creates a new IndexMetadataRecord RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder newBuilder(Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder other) {
    return new Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder(other);
  }
  
  /** Creates a new IndexMetadataRecord RecordBuilder by copying an existing IndexMetadataRecord instance */
  public static Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder newBuilder(Energistics.Datatypes.ChannelData.IndexMetadataRecord other) {
    return new Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for IndexMetadataRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IndexMetadataRecord>
    implements org.apache.avro.data.RecordBuilder<IndexMetadataRecord> {

    private Energistics.Datatypes.ChannelData.ChannelIndexTypes indexType;
    private java.lang.CharSequence uom;
    private java.lang.CharSequence depthDatum;
    private Energistics.Datatypes.ChannelData.IndexDirections direction;
    private java.lang.CharSequence mnemonic;
    private java.lang.CharSequence description;
    private java.lang.CharSequence uri;
    private java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> customData;
    private int scale;
    private java.lang.CharSequence timeDatum;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.ChannelData.IndexMetadataRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.indexType)) {
        this.indexType = data().deepCopy(fields()[0].schema(), other.indexType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uom)) {
        this.uom = data().deepCopy(fields()[1].schema(), other.uom);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depthDatum)) {
        this.depthDatum = data().deepCopy(fields()[2].schema(), other.depthDatum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.direction)) {
        this.direction = data().deepCopy(fields()[3].schema(), other.direction);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mnemonic)) {
        this.mnemonic = data().deepCopy(fields()[4].schema(), other.mnemonic);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.uri)) {
        this.uri = data().deepCopy(fields()[6].schema(), other.uri);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customData)) {
        this.customData = data().deepCopy(fields()[7].schema(), other.customData);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.scale)) {
        this.scale = data().deepCopy(fields()[8].schema(), other.scale);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.timeDatum)) {
        this.timeDatum = data().deepCopy(fields()[9].schema(), other.timeDatum);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing IndexMetadataRecord instance */
    private Builder(Energistics.Datatypes.ChannelData.IndexMetadataRecord other) {
            super(Energistics.Datatypes.ChannelData.IndexMetadataRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.indexType)) {
        this.indexType = data().deepCopy(fields()[0].schema(), other.indexType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uom)) {
        this.uom = data().deepCopy(fields()[1].schema(), other.uom);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depthDatum)) {
        this.depthDatum = data().deepCopy(fields()[2].schema(), other.depthDatum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.direction)) {
        this.direction = data().deepCopy(fields()[3].schema(), other.direction);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mnemonic)) {
        this.mnemonic = data().deepCopy(fields()[4].schema(), other.mnemonic);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.uri)) {
        this.uri = data().deepCopy(fields()[6].schema(), other.uri);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customData)) {
        this.customData = data().deepCopy(fields()[7].schema(), other.customData);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.scale)) {
        this.scale = data().deepCopy(fields()[8].schema(), other.scale);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.timeDatum)) {
        this.timeDatum = data().deepCopy(fields()[9].schema(), other.timeDatum);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'indexType' field */
    public Energistics.Datatypes.ChannelData.ChannelIndexTypes getIndexType() {
      return indexType;
    }
    
    /** Sets the value of the 'indexType' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setIndexType(Energistics.Datatypes.ChannelData.ChannelIndexTypes value) {
      validate(fields()[0], value);
      this.indexType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'indexType' field has been set */
    public boolean hasIndexType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'indexType' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearIndexType() {
      indexType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'uom' field */
    public java.lang.CharSequence getUom() {
      return uom;
    }
    
    /** Sets the value of the 'uom' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setUom(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.uom = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'uom' field has been set */
    public boolean hasUom() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'uom' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearUom() {
      uom = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'depthDatum' field */
    public java.lang.CharSequence getDepthDatum() {
      return depthDatum;
    }
    
    /** Sets the value of the 'depthDatum' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setDepthDatum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.depthDatum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'depthDatum' field has been set */
    public boolean hasDepthDatum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'depthDatum' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearDepthDatum() {
      depthDatum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'direction' field */
    public Energistics.Datatypes.ChannelData.IndexDirections getDirection() {
      return direction;
    }
    
    /** Sets the value of the 'direction' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setDirection(Energistics.Datatypes.ChannelData.IndexDirections value) {
      validate(fields()[3], value);
      this.direction = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'direction' field has been set */
    public boolean hasDirection() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'direction' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearDirection() {
      direction = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'mnemonic' field */
    public java.lang.CharSequence getMnemonic() {
      return mnemonic;
    }
    
    /** Sets the value of the 'mnemonic' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setMnemonic(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.mnemonic = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'mnemonic' field has been set */
    public boolean hasMnemonic() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'mnemonic' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearMnemonic() {
      mnemonic = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'description' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'uri' field */
    public java.lang.CharSequence getUri() {
      return uri;
    }
    
    /** Sets the value of the 'uri' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.uri = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'uri' field has been set */
    public boolean hasUri() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'uri' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearUri() {
      uri = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'customData' field */
    public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> getCustomData() {
      return customData;
    }
    
    /** Sets the value of the 'customData' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> value) {
      validate(fields()[7], value);
      this.customData = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'customData' field has been set */
    public boolean hasCustomData() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'customData' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearCustomData() {
      customData = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'scale' field */
    public java.lang.Integer getScale() {
      return scale;
    }
    
    /** Sets the value of the 'scale' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setScale(int value) {
      validate(fields()[8], value);
      this.scale = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'scale' field has been set */
    public boolean hasScale() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'scale' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearScale() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'timeDatum' field */
    public java.lang.CharSequence getTimeDatum() {
      return timeDatum;
    }
    
    /** Sets the value of the 'timeDatum' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder setTimeDatum(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.timeDatum = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'timeDatum' field has been set */
    public boolean hasTimeDatum() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'timeDatum' field */
    public Energistics.Datatypes.ChannelData.IndexMetadataRecord.Builder clearTimeDatum() {
      timeDatum = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public IndexMetadataRecord build() {
      try {
        IndexMetadataRecord record = new IndexMetadataRecord();
        record.indexType = fieldSetFlags()[0] ? this.indexType : (Energistics.Datatypes.ChannelData.ChannelIndexTypes) defaultValue(fields()[0]);
        record.uom = fieldSetFlags()[1] ? this.uom : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.depthDatum = fieldSetFlags()[2] ? this.depthDatum : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.direction = fieldSetFlags()[3] ? this.direction : (Energistics.Datatypes.ChannelData.IndexDirections) defaultValue(fields()[3]);
        record.mnemonic = fieldSetFlags()[4] ? this.mnemonic : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.uri = fieldSetFlags()[6] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.customData = fieldSetFlags()[7] ? this.customData : (java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue>) defaultValue(fields()[7]);
        record.scale = fieldSetFlags()[8] ? this.scale : (java.lang.Integer) defaultValue(fields()[8]);
        record.timeDatum = fieldSetFlags()[9] ? this.timeDatum : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
