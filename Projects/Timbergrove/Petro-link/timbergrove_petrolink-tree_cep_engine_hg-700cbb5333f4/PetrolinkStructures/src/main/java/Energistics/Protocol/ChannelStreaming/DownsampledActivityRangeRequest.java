/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Protocol.ChannelStreaming;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DownsampledActivityRangeRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DownsampledActivityRangeRequest\",\"namespace\":\"Energistics.Protocol.ChannelStreaming\",\"fields\":[{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"startIndex\",\"type\":\"long\"},{\"name\":\"endIndex\",\"type\":\"long\"},{\"name\":\"gap\",\"type\":\"long\"}],\"messageType\":\"902\",\"protocol\":\"1\",\"senderRole\":\"consumer\",\"protocolRoles\":\"producer,consumer\",\"fullName\":\"Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long channelId;
  @Deprecated public long startIndex;
  @Deprecated public long endIndex;
  @Deprecated public long gap;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DownsampledActivityRangeRequest() {}

  /**
   * All-args constructor.
   */
  public DownsampledActivityRangeRequest(java.lang.Long channelId, java.lang.Long startIndex, java.lang.Long endIndex, java.lang.Long gap) {
    this.channelId = channelId;
    this.startIndex = startIndex;
    this.endIndex = endIndex;
    this.gap = gap;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return startIndex;
    case 2: return endIndex;
    case 3: return gap;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channelId = (java.lang.Long)value$; break;
    case 1: startIndex = (java.lang.Long)value$; break;
    case 2: endIndex = (java.lang.Long)value$; break;
    case 3: gap = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   */
  public java.lang.Long getChannelId() {
    return channelId;
  }

  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(java.lang.Long value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'startIndex' field.
   */
  public java.lang.Long getStartIndex() {
    return startIndex;
  }

  /**
   * Sets the value of the 'startIndex' field.
   * @param value the value to set.
   */
  public void setStartIndex(java.lang.Long value) {
    this.startIndex = value;
  }

  /**
   * Gets the value of the 'endIndex' field.
   */
  public java.lang.Long getEndIndex() {
    return endIndex;
  }

  /**
   * Sets the value of the 'endIndex' field.
   * @param value the value to set.
   */
  public void setEndIndex(java.lang.Long value) {
    this.endIndex = value;
  }

  /**
   * Gets the value of the 'gap' field.
   */
  public java.lang.Long getGap() {
    return gap;
  }

  /**
   * Sets the value of the 'gap' field.
   * @param value the value to set.
   */
  public void setGap(java.lang.Long value) {
    this.gap = value;
  }

  /** Creates a new DownsampledActivityRangeRequest RecordBuilder */
  public static Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder newBuilder() {
    return new Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder();
  }
  
  /** Creates a new DownsampledActivityRangeRequest RecordBuilder by copying an existing Builder */
  public static Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder newBuilder(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder other) {
    return new Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder(other);
  }
  
  /** Creates a new DownsampledActivityRangeRequest RecordBuilder by copying an existing DownsampledActivityRangeRequest instance */
  public static Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder newBuilder(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest other) {
    return new Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for DownsampledActivityRangeRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DownsampledActivityRangeRequest>
    implements org.apache.avro.data.RecordBuilder<DownsampledActivityRangeRequest> {

    private long channelId;
    private long startIndex;
    private long endIndex;
    private long gap;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endIndex)) {
        this.endIndex = data().deepCopy(fields()[2].schema(), other.endIndex);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gap)) {
        this.gap = data().deepCopy(fields()[3].schema(), other.gap);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DownsampledActivityRangeRequest instance */
    private Builder(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest other) {
            super(Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endIndex)) {
        this.endIndex = data().deepCopy(fields()[2].schema(), other.endIndex);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gap)) {
        this.gap = data().deepCopy(fields()[3].schema(), other.gap);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'channelId' field */
    public java.lang.Long getChannelId() {
      return channelId;
    }
    
    /** Sets the value of the 'channelId' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder setChannelId(long value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'channelId' field has been set */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'channelId' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder clearChannelId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'startIndex' field */
    public java.lang.Long getStartIndex() {
      return startIndex;
    }
    
    /** Sets the value of the 'startIndex' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder setStartIndex(long value) {
      validate(fields()[1], value);
      this.startIndex = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'startIndex' field has been set */
    public boolean hasStartIndex() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'startIndex' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder clearStartIndex() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'endIndex' field */
    public java.lang.Long getEndIndex() {
      return endIndex;
    }
    
    /** Sets the value of the 'endIndex' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder setEndIndex(long value) {
      validate(fields()[2], value);
      this.endIndex = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'endIndex' field has been set */
    public boolean hasEndIndex() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'endIndex' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder clearEndIndex() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'gap' field */
    public java.lang.Long getGap() {
      return gap;
    }
    
    /** Sets the value of the 'gap' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder setGap(long value) {
      validate(fields()[3], value);
      this.gap = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'gap' field has been set */
    public boolean hasGap() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'gap' field */
    public Energistics.Protocol.ChannelStreaming.DownsampledActivityRangeRequest.Builder clearGap() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public DownsampledActivityRangeRequest build() {
      try {
        DownsampledActivityRangeRequest record = new DownsampledActivityRangeRequest();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (java.lang.Long) defaultValue(fields()[0]);
        record.startIndex = fieldSetFlags()[1] ? this.startIndex : (java.lang.Long) defaultValue(fields()[1]);
        record.endIndex = fieldSetFlags()[2] ? this.endIndex : (java.lang.Long) defaultValue(fields()[2]);
        record.gap = fieldSetFlags()[3] ? this.gap : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
