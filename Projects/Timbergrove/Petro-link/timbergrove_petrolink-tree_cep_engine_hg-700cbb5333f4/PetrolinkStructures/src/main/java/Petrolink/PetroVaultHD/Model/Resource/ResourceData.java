/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Petrolink.PetroVaultHD.Model.Resource;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ResourceData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ResourceData\",\"namespace\":\"Petrolink.PetroVaultHD.Model.Resource\",\"fields\":[{\"name\":\"contentEncoding\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"bytes\"},{\"name\":\"modifyTimestamp\",\"type\":\"long\"}],\"fullName\":\"Petrolink.PetroVaultHD.Model.Resource.ResourceData\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence contentEncoding;
  @Deprecated public java.nio.ByteBuffer content;
  @Deprecated public long modifyTimestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ResourceData() {}

  /**
   * All-args constructor.
   */
  public ResourceData(java.lang.CharSequence contentEncoding, java.nio.ByteBuffer content, java.lang.Long modifyTimestamp) {
    this.contentEncoding = contentEncoding;
    this.content = content;
    this.modifyTimestamp = modifyTimestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return contentEncoding;
    case 1: return content;
    case 2: return modifyTimestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: contentEncoding = (java.lang.CharSequence)value$; break;
    case 1: content = (java.nio.ByteBuffer)value$; break;
    case 2: modifyTimestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'contentEncoding' field.
   */
  public java.lang.CharSequence getContentEncoding() {
    return contentEncoding;
  }

  /**
   * Sets the value of the 'contentEncoding' field.
   * @param value the value to set.
   */
  public void setContentEncoding(java.lang.CharSequence value) {
    this.contentEncoding = value;
  }

  /**
   * Gets the value of the 'content' field.
   */
  public java.nio.ByteBuffer getContent() {
    return content;
  }

  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(java.nio.ByteBuffer value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'modifyTimestamp' field.
   */
  public java.lang.Long getModifyTimestamp() {
    return modifyTimestamp;
  }

  /**
   * Sets the value of the 'modifyTimestamp' field.
   * @param value the value to set.
   */
  public void setModifyTimestamp(java.lang.Long value) {
    this.modifyTimestamp = value;
  }

  /** Creates a new ResourceData RecordBuilder */
  public static Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder newBuilder() {
    return new Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder();
  }
  
  /** Creates a new ResourceData RecordBuilder by copying an existing Builder */
  public static Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder newBuilder(Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder other) {
    return new Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder(other);
  }
  
  /** Creates a new ResourceData RecordBuilder by copying an existing ResourceData instance */
  public static Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder newBuilder(Petrolink.PetroVaultHD.Model.Resource.ResourceData other) {
    return new Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder(other);
  }
  
  /**
   * RecordBuilder for ResourceData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ResourceData>
    implements org.apache.avro.data.RecordBuilder<ResourceData> {

    private java.lang.CharSequence contentEncoding;
    private java.nio.ByteBuffer content;
    private long modifyTimestamp;

    /** Creates a new Builder */
    private Builder() {
      super(Petrolink.PetroVaultHD.Model.Resource.ResourceData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.contentEncoding)) {
        this.contentEncoding = data().deepCopy(fields()[0].schema(), other.contentEncoding);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modifyTimestamp)) {
        this.modifyTimestamp = data().deepCopy(fields()[2].schema(), other.modifyTimestamp);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ResourceData instance */
    private Builder(Petrolink.PetroVaultHD.Model.Resource.ResourceData other) {
            super(Petrolink.PetroVaultHD.Model.Resource.ResourceData.SCHEMA$);
      if (isValidValue(fields()[0], other.contentEncoding)) {
        this.contentEncoding = data().deepCopy(fields()[0].schema(), other.contentEncoding);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modifyTimestamp)) {
        this.modifyTimestamp = data().deepCopy(fields()[2].schema(), other.modifyTimestamp);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'contentEncoding' field */
    public java.lang.CharSequence getContentEncoding() {
      return contentEncoding;
    }
    
    /** Sets the value of the 'contentEncoding' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder setContentEncoding(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.contentEncoding = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'contentEncoding' field has been set */
    public boolean hasContentEncoding() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'contentEncoding' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder clearContentEncoding() {
      contentEncoding = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'content' field */
    public java.nio.ByteBuffer getContent() {
      return content;
    }
    
    /** Sets the value of the 'content' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder setContent(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.content = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'content' field has been set */
    public boolean hasContent() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'content' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder clearContent() {
      content = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'modifyTimestamp' field */
    public java.lang.Long getModifyTimestamp() {
      return modifyTimestamp;
    }
    
    /** Sets the value of the 'modifyTimestamp' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder setModifyTimestamp(long value) {
      validate(fields()[2], value);
      this.modifyTimestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'modifyTimestamp' field has been set */
    public boolean hasModifyTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'modifyTimestamp' field */
    public Petrolink.PetroVaultHD.Model.Resource.ResourceData.Builder clearModifyTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ResourceData build() {
      try {
        ResourceData record = new ResourceData();
        record.contentEncoding = fieldSetFlags()[0] ? this.contentEncoding : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.content = fieldSetFlags()[1] ? this.content : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        record.modifyTimestamp = fieldSetFlags()[2] ? this.modifyTimestamp : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
