/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes.ChannelData;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ChannelStreamingInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChannelStreamingInfo\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"startIndex\",\"type\":{\"type\":\"record\",\"name\":\"StreamingStartIndex\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"int\",\"long\"]}],\"fullName\":\"Energistics.Datatypes.ChannelData.StreamingStartIndex\",\"depends\":[]}},{\"name\":\"receiveChangeNotification\",\"type\":\"boolean\"}],\"fullName\":\"Energistics.Datatypes.ChannelData.ChannelStreamingInfo\",\"depends\":[\"Energistics.Datatypes.ChannelData.StreamingStartIndex\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long channelId;
  @Deprecated public Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex;
  @Deprecated public boolean receiveChangeNotification;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChannelStreamingInfo() {}

  /**
   * All-args constructor.
   */
  public ChannelStreamingInfo(java.lang.Long channelId, Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex, java.lang.Boolean receiveChangeNotification) {
    this.channelId = channelId;
    this.startIndex = startIndex;
    this.receiveChangeNotification = receiveChangeNotification;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return startIndex;
    case 2: return receiveChangeNotification;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channelId = (java.lang.Long)value$; break;
    case 1: startIndex = (Energistics.Datatypes.ChannelData.StreamingStartIndex)value$; break;
    case 2: receiveChangeNotification = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   */
  public java.lang.Long getChannelId() {
    return channelId;
  }

  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(java.lang.Long value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'startIndex' field.
   */
  public Energistics.Datatypes.ChannelData.StreamingStartIndex getStartIndex() {
    return startIndex;
  }

  /**
   * Sets the value of the 'startIndex' field.
   * @param value the value to set.
   */
  public void setStartIndex(Energistics.Datatypes.ChannelData.StreamingStartIndex value) {
    this.startIndex = value;
  }

  /**
   * Gets the value of the 'receiveChangeNotification' field.
   */
  public java.lang.Boolean getReceiveChangeNotification() {
    return receiveChangeNotification;
  }

  /**
   * Sets the value of the 'receiveChangeNotification' field.
   * @param value the value to set.
   */
  public void setReceiveChangeNotification(java.lang.Boolean value) {
    this.receiveChangeNotification = value;
  }

  /** Creates a new ChannelStreamingInfo RecordBuilder */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder() {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder();
  }
  
  /** Creates a new ChannelStreamingInfo RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder other) {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder(other);
  }
  
  /** Creates a new ChannelStreamingInfo RecordBuilder by copying an existing ChannelStreamingInfo instance */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo other) {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for ChannelStreamingInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChannelStreamingInfo>
    implements org.apache.avro.data.RecordBuilder<ChannelStreamingInfo> {

    private long channelId;
    private Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex;
    private boolean receiveChangeNotification;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.receiveChangeNotification)) {
        this.receiveChangeNotification = data().deepCopy(fields()[2].schema(), other.receiveChangeNotification);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChannelStreamingInfo instance */
    private Builder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo other) {
            super(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.receiveChangeNotification)) {
        this.receiveChangeNotification = data().deepCopy(fields()[2].schema(), other.receiveChangeNotification);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'channelId' field */
    public java.lang.Long getChannelId() {
      return channelId;
    }
    
    /** Sets the value of the 'channelId' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setChannelId(long value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'channelId' field has been set */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'channelId' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearChannelId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'startIndex' field */
    public Energistics.Datatypes.ChannelData.StreamingStartIndex getStartIndex() {
      return startIndex;
    }
    
    /** Sets the value of the 'startIndex' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setStartIndex(Energistics.Datatypes.ChannelData.StreamingStartIndex value) {
      validate(fields()[1], value);
      this.startIndex = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'startIndex' field has been set */
    public boolean hasStartIndex() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'startIndex' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearStartIndex() {
      startIndex = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'receiveChangeNotification' field */
    public java.lang.Boolean getReceiveChangeNotification() {
      return receiveChangeNotification;
    }
    
    /** Sets the value of the 'receiveChangeNotification' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setReceiveChangeNotification(boolean value) {
      validate(fields()[2], value);
      this.receiveChangeNotification = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'receiveChangeNotification' field has been set */
    public boolean hasReceiveChangeNotification() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'receiveChangeNotification' field */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearReceiveChangeNotification() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ChannelStreamingInfo build() {
      try {
        ChannelStreamingInfo record = new ChannelStreamingInfo();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (java.lang.Long) defaultValue(fields()[0]);
        record.startIndex = fieldSetFlags()[1] ? this.startIndex : (Energistics.Datatypes.ChannelData.StreamingStartIndex) defaultValue(fields()[1]);
        record.receiveChangeNotification = fieldSetFlags()[2] ? this.receiveChangeNotification : (java.lang.Boolean) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
