/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Protocol.DataArray;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataArray extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataArray\",\"namespace\":\"Energistics.Protocol.DataArray\",\"fields\":[{\"name\":\"dimensions\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"data\",\"type\":{\"type\":\"record\",\"name\":\"AnyArray\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ArrayOfBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfBoolean\",\"depends\":[]},\"bytes\",{\"type\":\"record\",\"name\":\"ArrayOfInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfFloat\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"float\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfFloat\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]}]}],\"fullName\":\"Energistics.Datatypes.AnyArray\",\"depends\":[\"Energistics.Datatypes.ArrayOfBoolean\",\"Energistics.Datatypes.ArrayOfInt\",\"Energistics.Datatypes.ArrayOfLong\",\"Energistics.Datatypes.ArrayOfFloat\",\"Energistics.Datatypes.ArrayOfDouble\"]}}],\"messageType\":\"1\",\"protocol\":\"7\",\"senderRole\":\"store\",\"protocolRoles\":\"store,customer\",\"fullName\":\"Energistics.Protocol.DataArray.DataArray\",\"depends\":[\"Energistics.Datatypes.AnyArray\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.Long> dimensions;
  @Deprecated public Energistics.Datatypes.AnyArray data;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataArray() {}

  /**
   * All-args constructor.
   */
  public DataArray(java.util.List<java.lang.Long> dimensions, Energistics.Datatypes.AnyArray data) {
    this.dimensions = dimensions;
    this.data = data;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dimensions;
    case 1: return data;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dimensions = (java.util.List<java.lang.Long>)value$; break;
    case 1: data = (Energistics.Datatypes.AnyArray)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dimensions' field.
   */
  public java.util.List<java.lang.Long> getDimensions() {
    return dimensions;
  }

  /**
   * Sets the value of the 'dimensions' field.
   * @param value the value to set.
   */
  public void setDimensions(java.util.List<java.lang.Long> value) {
    this.dimensions = value;
  }

  /**
   * Gets the value of the 'data' field.
   */
  public Energistics.Datatypes.AnyArray getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(Energistics.Datatypes.AnyArray value) {
    this.data = value;
  }

  /** Creates a new DataArray RecordBuilder */
  public static Energistics.Protocol.DataArray.DataArray.Builder newBuilder() {
    return new Energistics.Protocol.DataArray.DataArray.Builder();
  }
  
  /** Creates a new DataArray RecordBuilder by copying an existing Builder */
  public static Energistics.Protocol.DataArray.DataArray.Builder newBuilder(Energistics.Protocol.DataArray.DataArray.Builder other) {
    return new Energistics.Protocol.DataArray.DataArray.Builder(other);
  }
  
  /** Creates a new DataArray RecordBuilder by copying an existing DataArray instance */
  public static Energistics.Protocol.DataArray.DataArray.Builder newBuilder(Energistics.Protocol.DataArray.DataArray other) {
    return new Energistics.Protocol.DataArray.DataArray.Builder(other);
  }
  
  /**
   * RecordBuilder for DataArray instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataArray>
    implements org.apache.avro.data.RecordBuilder<DataArray> {

    private java.util.List<java.lang.Long> dimensions;
    private Energistics.Datatypes.AnyArray data;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Protocol.DataArray.DataArray.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Protocol.DataArray.DataArray.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dimensions)) {
        this.dimensions = data().deepCopy(fields()[0].schema(), other.dimensions);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.data)) {
        this.data = data().deepCopy(fields()[1].schema(), other.data);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataArray instance */
    private Builder(Energistics.Protocol.DataArray.DataArray other) {
            super(Energistics.Protocol.DataArray.DataArray.SCHEMA$);
      if (isValidValue(fields()[0], other.dimensions)) {
        this.dimensions = data().deepCopy(fields()[0].schema(), other.dimensions);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.data)) {
        this.data = data().deepCopy(fields()[1].schema(), other.data);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'dimensions' field */
    public java.util.List<java.lang.Long> getDimensions() {
      return dimensions;
    }
    
    /** Sets the value of the 'dimensions' field */
    public Energistics.Protocol.DataArray.DataArray.Builder setDimensions(java.util.List<java.lang.Long> value) {
      validate(fields()[0], value);
      this.dimensions = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'dimensions' field has been set */
    public boolean hasDimensions() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'dimensions' field */
    public Energistics.Protocol.DataArray.DataArray.Builder clearDimensions() {
      dimensions = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'data' field */
    public Energistics.Datatypes.AnyArray getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public Energistics.Protocol.DataArray.DataArray.Builder setData(Energistics.Datatypes.AnyArray value) {
      validate(fields()[1], value);
      this.data = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'data' field */
    public Energistics.Protocol.DataArray.DataArray.Builder clearData() {
      data = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DataArray build() {
      try {
        DataArray record = new DataArray();
        record.dimensions = fieldSetFlags()[0] ? this.dimensions : (java.util.List<java.lang.Long>) defaultValue(fields()[0]);
        record.data = fieldSetFlags()[1] ? this.data : (Energistics.Datatypes.AnyArray) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
