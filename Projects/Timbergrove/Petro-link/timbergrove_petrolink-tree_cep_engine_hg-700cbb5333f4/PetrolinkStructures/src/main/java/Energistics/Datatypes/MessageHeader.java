/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MessageHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageHeader\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"protocol\",\"type\":\"int\"},{\"name\":\"messageType\",\"type\":\"int\"},{\"name\":\"correlationId\",\"type\":\"long\"},{\"name\":\"messageId\",\"type\":\"long\"},{\"name\":\"messageFlags\",\"type\":\"int\"}],\"fullName\":\"Energistics.Datatypes.MessageHeader\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int protocol;
  @Deprecated public int messageType;
  @Deprecated public long correlationId;
  @Deprecated public long messageId;
  @Deprecated public int messageFlags;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MessageHeader() {}

  /**
   * All-args constructor.
   */
  public MessageHeader(java.lang.Integer protocol, java.lang.Integer messageType, java.lang.Long correlationId, java.lang.Long messageId, java.lang.Integer messageFlags) {
    this.protocol = protocol;
    this.messageType = messageType;
    this.correlationId = correlationId;
    this.messageId = messageId;
    this.messageFlags = messageFlags;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return protocol;
    case 1: return messageType;
    case 2: return correlationId;
    case 3: return messageId;
    case 4: return messageFlags;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: protocol = (java.lang.Integer)value$; break;
    case 1: messageType = (java.lang.Integer)value$; break;
    case 2: correlationId = (java.lang.Long)value$; break;
    case 3: messageId = (java.lang.Long)value$; break;
    case 4: messageFlags = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'protocol' field.
   */
  public java.lang.Integer getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.Integer value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'messageType' field.
   */
  public java.lang.Integer getMessageType() {
    return messageType;
  }

  /**
   * Sets the value of the 'messageType' field.
   * @param value the value to set.
   */
  public void setMessageType(java.lang.Integer value) {
    this.messageType = value;
  }

  /**
   * Gets the value of the 'correlationId' field.
   */
  public java.lang.Long getCorrelationId() {
    return correlationId;
  }

  /**
   * Sets the value of the 'correlationId' field.
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.Long value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'messageId' field.
   */
  public java.lang.Long getMessageId() {
    return messageId;
  }

  /**
   * Sets the value of the 'messageId' field.
   * @param value the value to set.
   */
  public void setMessageId(java.lang.Long value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'messageFlags' field.
   */
  public java.lang.Integer getMessageFlags() {
    return messageFlags;
  }

  /**
   * Sets the value of the 'messageFlags' field.
   * @param value the value to set.
   */
  public void setMessageFlags(java.lang.Integer value) {
    this.messageFlags = value;
  }

  /** Creates a new MessageHeader RecordBuilder */
  public static Energistics.Datatypes.MessageHeader.Builder newBuilder() {
    return new Energistics.Datatypes.MessageHeader.Builder();
  }
  
  /** Creates a new MessageHeader RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.MessageHeader.Builder newBuilder(Energistics.Datatypes.MessageHeader.Builder other) {
    return new Energistics.Datatypes.MessageHeader.Builder(other);
  }
  
  /** Creates a new MessageHeader RecordBuilder by copying an existing MessageHeader instance */
  public static Energistics.Datatypes.MessageHeader.Builder newBuilder(Energistics.Datatypes.MessageHeader other) {
    return new Energistics.Datatypes.MessageHeader.Builder(other);
  }
  
  /**
   * RecordBuilder for MessageHeader instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageHeader>
    implements org.apache.avro.data.RecordBuilder<MessageHeader> {

    private int protocol;
    private int messageType;
    private long correlationId;
    private long messageId;
    private int messageFlags;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.MessageHeader.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.MessageHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.protocol)) {
        this.protocol = data().deepCopy(fields()[0].schema(), other.protocol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.messageType)) {
        this.messageType = data().deepCopy(fields()[1].schema(), other.messageType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[2].schema(), other.correlationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.messageFlags)) {
        this.messageFlags = data().deepCopy(fields()[4].schema(), other.messageFlags);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MessageHeader instance */
    private Builder(Energistics.Datatypes.MessageHeader other) {
            super(Energistics.Datatypes.MessageHeader.SCHEMA$);
      if (isValidValue(fields()[0], other.protocol)) {
        this.protocol = data().deepCopy(fields()[0].schema(), other.protocol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.messageType)) {
        this.messageType = data().deepCopy(fields()[1].schema(), other.messageType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[2].schema(), other.correlationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.messageFlags)) {
        this.messageFlags = data().deepCopy(fields()[4].schema(), other.messageFlags);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'protocol' field */
    public java.lang.Integer getProtocol() {
      return protocol;
    }
    
    /** Sets the value of the 'protocol' field */
    public Energistics.Datatypes.MessageHeader.Builder setProtocol(int value) {
      validate(fields()[0], value);
      this.protocol = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'protocol' field has been set */
    public boolean hasProtocol() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'protocol' field */
    public Energistics.Datatypes.MessageHeader.Builder clearProtocol() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'messageType' field */
    public java.lang.Integer getMessageType() {
      return messageType;
    }
    
    /** Sets the value of the 'messageType' field */
    public Energistics.Datatypes.MessageHeader.Builder setMessageType(int value) {
      validate(fields()[1], value);
      this.messageType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'messageType' field has been set */
    public boolean hasMessageType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'messageType' field */
    public Energistics.Datatypes.MessageHeader.Builder clearMessageType() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'correlationId' field */
    public java.lang.Long getCorrelationId() {
      return correlationId;
    }
    
    /** Sets the value of the 'correlationId' field */
    public Energistics.Datatypes.MessageHeader.Builder setCorrelationId(long value) {
      validate(fields()[2], value);
      this.correlationId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'correlationId' field has been set */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'correlationId' field */
    public Energistics.Datatypes.MessageHeader.Builder clearCorrelationId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'messageId' field */
    public java.lang.Long getMessageId() {
      return messageId;
    }
    
    /** Sets the value of the 'messageId' field */
    public Energistics.Datatypes.MessageHeader.Builder setMessageId(long value) {
      validate(fields()[3], value);
      this.messageId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'messageId' field has been set */
    public boolean hasMessageId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'messageId' field */
    public Energistics.Datatypes.MessageHeader.Builder clearMessageId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'messageFlags' field */
    public java.lang.Integer getMessageFlags() {
      return messageFlags;
    }
    
    /** Sets the value of the 'messageFlags' field */
    public Energistics.Datatypes.MessageHeader.Builder setMessageFlags(int value) {
      validate(fields()[4], value);
      this.messageFlags = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'messageFlags' field has been set */
    public boolean hasMessageFlags() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'messageFlags' field */
    public Energistics.Datatypes.MessageHeader.Builder clearMessageFlags() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public MessageHeader build() {
      try {
        MessageHeader record = new MessageHeader();
        record.protocol = fieldSetFlags()[0] ? this.protocol : (java.lang.Integer) defaultValue(fields()[0]);
        record.messageType = fieldSetFlags()[1] ? this.messageType : (java.lang.Integer) defaultValue(fields()[1]);
        record.correlationId = fieldSetFlags()[2] ? this.correlationId : (java.lang.Long) defaultValue(fields()[2]);
        record.messageId = fieldSetFlags()[3] ? this.messageId : (java.lang.Long) defaultValue(fields()[3]);
        record.messageFlags = fieldSetFlags()[4] ? this.messageFlags : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
