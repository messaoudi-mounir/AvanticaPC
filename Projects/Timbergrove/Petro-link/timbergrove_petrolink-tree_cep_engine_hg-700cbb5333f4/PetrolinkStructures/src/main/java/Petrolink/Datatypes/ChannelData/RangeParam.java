/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Petrolink.Datatypes.ChannelData;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RangeParam extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RangeParam\",\"namespace\":\"Petrolink.Datatypes.ChannelData\",\"fields\":[{\"name\":\"startIndex\",\"type\":\"double\"},{\"name\":\"endIndex\",\"type\":\"double\"},{\"name\":\"value\",\"type\":\"double\"}],\"fullName\":\"Petrolink.Datatypes.ChannelData.RangeParam\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public double startIndex;
  @Deprecated public double endIndex;
  @Deprecated public double value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RangeParam() {}

  /**
   * All-args constructor.
   */
  public RangeParam(java.lang.Double startIndex, java.lang.Double endIndex, java.lang.Double value) {
    this.startIndex = startIndex;
    this.endIndex = endIndex;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return startIndex;
    case 1: return endIndex;
    case 2: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: startIndex = (java.lang.Double)value$; break;
    case 1: endIndex = (java.lang.Double)value$; break;
    case 2: value = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'startIndex' field.
   */
  public java.lang.Double getStartIndex() {
    return startIndex;
  }

  /**
   * Sets the value of the 'startIndex' field.
   * @param value the value to set.
   */
  public void setStartIndex(java.lang.Double value) {
    this.startIndex = value;
  }

  /**
   * Gets the value of the 'endIndex' field.
   */
  public java.lang.Double getEndIndex() {
    return endIndex;
  }

  /**
   * Sets the value of the 'endIndex' field.
   * @param value the value to set.
   */
  public void setEndIndex(java.lang.Double value) {
    this.endIndex = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.lang.Double getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Double value) {
    this.value = value;
  }

  /** Creates a new RangeParam RecordBuilder */
  public static Petrolink.Datatypes.ChannelData.RangeParam.Builder newBuilder() {
    return new Petrolink.Datatypes.ChannelData.RangeParam.Builder();
  }
  
  /** Creates a new RangeParam RecordBuilder by copying an existing Builder */
  public static Petrolink.Datatypes.ChannelData.RangeParam.Builder newBuilder(Petrolink.Datatypes.ChannelData.RangeParam.Builder other) {
    return new Petrolink.Datatypes.ChannelData.RangeParam.Builder(other);
  }
  
  /** Creates a new RangeParam RecordBuilder by copying an existing RangeParam instance */
  public static Petrolink.Datatypes.ChannelData.RangeParam.Builder newBuilder(Petrolink.Datatypes.ChannelData.RangeParam other) {
    return new Petrolink.Datatypes.ChannelData.RangeParam.Builder(other);
  }
  
  /**
   * RecordBuilder for RangeParam instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RangeParam>
    implements org.apache.avro.data.RecordBuilder<RangeParam> {

    private double startIndex;
    private double endIndex;
    private double value;

    /** Creates a new Builder */
    private Builder() {
      super(Petrolink.Datatypes.ChannelData.RangeParam.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Petrolink.Datatypes.ChannelData.RangeParam.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[0].schema(), other.startIndex);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.endIndex)) {
        this.endIndex = data().deepCopy(fields()[1].schema(), other.endIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RangeParam instance */
    private Builder(Petrolink.Datatypes.ChannelData.RangeParam other) {
            super(Petrolink.Datatypes.ChannelData.RangeParam.SCHEMA$);
      if (isValidValue(fields()[0], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[0].schema(), other.startIndex);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.endIndex)) {
        this.endIndex = data().deepCopy(fields()[1].schema(), other.endIndex);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'startIndex' field */
    public java.lang.Double getStartIndex() {
      return startIndex;
    }
    
    /** Sets the value of the 'startIndex' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder setStartIndex(double value) {
      validate(fields()[0], value);
      this.startIndex = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'startIndex' field has been set */
    public boolean hasStartIndex() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'startIndex' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder clearStartIndex() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'endIndex' field */
    public java.lang.Double getEndIndex() {
      return endIndex;
    }
    
    /** Sets the value of the 'endIndex' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder setEndIndex(double value) {
      validate(fields()[1], value);
      this.endIndex = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'endIndex' field has been set */
    public boolean hasEndIndex() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'endIndex' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder clearEndIndex() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.Double getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder setValue(double value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'value' field */
    public Petrolink.Datatypes.ChannelData.RangeParam.Builder clearValue() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public RangeParam build() {
      try {
        RangeParam record = new RangeParam();
        record.startIndex = fieldSetFlags()[0] ? this.startIndex : (java.lang.Double) defaultValue(fields()[0]);
        record.endIndex = fieldSetFlags()[1] ? this.endIndex : (java.lang.Double) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.lang.Double) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
