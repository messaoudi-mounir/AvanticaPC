/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Protocol.ChannelDataFrame;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ChannelMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChannelMetadata\",\"namespace\":\"Energistics.Protocol.ChannelDataFrame\",\"fields\":[{\"name\":\"indexes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IndexMetadataRecord\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"indexType\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelIndexTypes\",\"symbols\":[\"Time\",\"Depth\"],\"fullName\":\"Energistics.Datatypes.ChannelData.ChannelIndexTypes\",\"depends\":[]}},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":[\"null\",\"string\"]},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"IndexDirections\",\"symbols\":[\"Increasing\",\"Decreasing\"],\"fullName\":\"Energistics.Datatypes.ChannelData.IndexDirections\",\"depends\":[]}},{\"name\":\"mnemonic\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"uri\",\"type\":[\"null\",\"string\"]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]},\"boolean\",\"bytes\"]}],\"fullName\":\"Energistics.Datatypes.DataValue\",\"depends\":[\"Energistics.Datatypes.ArrayOfDouble\"]}}},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"timeDatum\",\"type\":[\"null\",\"string\"]}],\"fullName\":\"Energistics.Datatypes.ChannelData.IndexMetadataRecord\",\"depends\":[\"Energistics.Datatypes.ChannelData.ChannelIndexTypes\",\"Energistics.Datatypes.ChannelData.IndexDirections\",\"Energistics.Datatypes.DataValue\"]}}},{\"name\":\"channels\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChannelMetadataRecord\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"channelUri\",\"type\":\"string\"},{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"indexes\",\"type\":{\"type\":\"array\",\"items\":\"IndexMetadataRecord\"}},{\"name\":\"channelName\",\"type\":\"string\"},{\"name\":\"dataType\",\"type\":\"string\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"startIndex\",\"type\":[\"null\",\"long\"]},{\"name\":\"endIndex\",\"type\":[\"null\",\"long\"]},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelStatuses\",\"symbols\":[\"Active\",\"Inactive\",\"Closed\"],\"fullName\":\"Energistics.Datatypes.ChannelData.ChannelStatuses\",\"depends\":[]}},{\"name\":\"contentType\",\"type\":[\"null\",\"string\"]},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"measureClass\",\"type\":\"string\"},{\"name\":\"uuid\",\"type\":[\"null\",\"string\"]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":\"Energistics.Datatypes.DataValue\"}},{\"name\":\"domainObject\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DataObject\",\"namespace\":\"Energistics.Datatypes.Object\",\"fields\":[{\"name\":\"resource\",\"type\":{\"type\":\"record\",\"name\":\"Resource\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"contentType\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"channelSubscribable\",\"type\":\"boolean\"},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"hasChildren\",\"type\":\"int\"},{\"name\":\"uuid\",\"type\":[\"null\",\"string\"]},{\"name\":\"lastChanged\",\"type\":\"long\"},{\"name\":\"objectNotifiable\",\"type\":\"boolean\"}],\"fullName\":\"Energistics.Datatypes.Object.Resource\",\"depends\":[]}},{\"name\":\"contentEncoding\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"fullName\":\"Energistics.Datatypes.Object.DataObject\",\"depends\":[\"Energistics.Datatypes.Object.Resource\"]}]}],\"fullName\":\"Energistics.Datatypes.ChannelData.ChannelMetadataRecord\",\"depends\":[\"Energistics.Datatypes.ChannelData.IndexMetadataRecord\",\"Energistics.Datatypes.ChannelData.ChannelStatuses\",\"Energistics.Datatypes.DataValue\",\"Energistics.Datatypes.Object.DataObject\"]}}}],\"messageType\":\"3\",\"protocol\":\"2\",\"senderRole\":\"producer\",\"protocolRoles\":\"producer,consumer\",\"fullName\":\"Energistics.Protocol.ChannelDataFrame.ChannelMetadata\",\"depends\":[\"Energistics.Datatypes.ChannelData.IndexMetadataRecord\",\"Energistics.Datatypes.ChannelData.ChannelMetadataRecord\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> indexes;
  @Deprecated public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChannelMetadata() {}

  /**
   * All-args constructor.
   */
  public ChannelMetadata(java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> indexes, java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels) {
    this.indexes = indexes;
    this.channels = channels;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return indexes;
    case 1: return channels;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: indexes = (java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord>)value$; break;
    case 1: channels = (java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'indexes' field.
   */
  public java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> getIndexes() {
    return indexes;
  }

  /**
   * Sets the value of the 'indexes' field.
   * @param value the value to set.
   */
  public void setIndexes(java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> value) {
    this.indexes = value;
  }

  /**
   * Gets the value of the 'channels' field.
   */
  public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> getChannels() {
    return channels;
  }

  /**
   * Sets the value of the 'channels' field.
   * @param value the value to set.
   */
  public void setChannels(java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> value) {
    this.channels = value;
  }

  /** Creates a new ChannelMetadata RecordBuilder */
  public static Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder newBuilder() {
    return new Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder();
  }
  
  /** Creates a new ChannelMetadata RecordBuilder by copying an existing Builder */
  public static Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder newBuilder(Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder other) {
    return new Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder(other);
  }
  
  /** Creates a new ChannelMetadata RecordBuilder by copying an existing ChannelMetadata instance */
  public static Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder newBuilder(Energistics.Protocol.ChannelDataFrame.ChannelMetadata other) {
    return new Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for ChannelMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChannelMetadata>
    implements org.apache.avro.data.RecordBuilder<ChannelMetadata> {

    private java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> indexes;
    private java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Protocol.ChannelDataFrame.ChannelMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.indexes)) {
        this.indexes = data().deepCopy(fields()[0].schema(), other.indexes);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.channels)) {
        this.channels = data().deepCopy(fields()[1].schema(), other.channels);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChannelMetadata instance */
    private Builder(Energistics.Protocol.ChannelDataFrame.ChannelMetadata other) {
            super(Energistics.Protocol.ChannelDataFrame.ChannelMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.indexes)) {
        this.indexes = data().deepCopy(fields()[0].schema(), other.indexes);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.channels)) {
        this.channels = data().deepCopy(fields()[1].schema(), other.channels);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'indexes' field */
    public java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> getIndexes() {
      return indexes;
    }
    
    /** Sets the value of the 'indexes' field */
    public Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder setIndexes(java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord> value) {
      validate(fields()[0], value);
      this.indexes = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'indexes' field has been set */
    public boolean hasIndexes() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'indexes' field */
    public Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder clearIndexes() {
      indexes = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'channels' field */
    public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> getChannels() {
      return channels;
    }
    
    /** Sets the value of the 'channels' field */
    public Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder setChannels(java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> value) {
      validate(fields()[1], value);
      this.channels = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'channels' field has been set */
    public boolean hasChannels() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'channels' field */
    public Energistics.Protocol.ChannelDataFrame.ChannelMetadata.Builder clearChannels() {
      channels = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ChannelMetadata build() {
      try {
        ChannelMetadata record = new ChannelMetadata();
        record.indexes = fieldSetFlags()[0] ? this.indexes : (java.util.List<Energistics.Datatypes.ChannelData.IndexMetadataRecord>) defaultValue(fields()[0]);
        record.channels = fieldSetFlags()[1] ? this.channels : (java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
