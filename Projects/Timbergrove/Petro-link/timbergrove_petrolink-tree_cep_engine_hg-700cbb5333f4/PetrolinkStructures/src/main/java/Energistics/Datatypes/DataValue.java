/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]},\"boolean\",\"bytes\"]}],\"fullName\":\"Energistics.Datatypes.DataValue\",\"depends\":[\"Energistics.Datatypes.ArrayOfDouble\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Object item;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataValue() {}

  /**
   * All-args constructor.
   */
  public DataValue(java.lang.Object item) {
    this.item = item;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'item' field.
   */
  public java.lang.Object getItem() {
    return item;
  }

  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(java.lang.Object value) {
    this.item = value;
  }

  /** Creates a new DataValue RecordBuilder */
  public static Energistics.Datatypes.DataValue.Builder newBuilder() {
    return new Energistics.Datatypes.DataValue.Builder();
  }
  
  /** Creates a new DataValue RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.DataValue.Builder newBuilder(Energistics.Datatypes.DataValue.Builder other) {
    return new Energistics.Datatypes.DataValue.Builder(other);
  }
  
  /** Creates a new DataValue RecordBuilder by copying an existing DataValue instance */
  public static Energistics.Datatypes.DataValue.Builder newBuilder(Energistics.Datatypes.DataValue other) {
    return new Energistics.Datatypes.DataValue.Builder(other);
  }
  
  /**
   * RecordBuilder for DataValue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataValue>
    implements org.apache.avro.data.RecordBuilder<DataValue> {

    private java.lang.Object item;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.DataValue.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.DataValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataValue instance */
    private Builder(Energistics.Datatypes.DataValue other) {
            super(Energistics.Datatypes.DataValue.SCHEMA$);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'item' field */
    public java.lang.Object getItem() {
      return item;
    }
    
    /** Sets the value of the 'item' field */
    public Energistics.Datatypes.DataValue.Builder setItem(java.lang.Object value) {
      validate(fields()[0], value);
      this.item = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'item' field has been set */
    public boolean hasItem() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'item' field */
    public Energistics.Datatypes.DataValue.Builder clearItem() {
      item = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public DataValue build() {
      try {
        DataValue record = new DataValue();
        record.item = fieldSetFlags()[0] ? this.item : (java.lang.Object) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
