/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SupportedProtocol extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SupportedProtocol\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"protocol\",\"type\":\"int\"},{\"name\":\"protocolVersion\",\"type\":{\"type\":\"record\",\"name\":\"Version\",\"fields\":[{\"name\":\"major\",\"type\":\"int\"},{\"name\":\"minor\",\"type\":\"int\"},{\"name\":\"revision\",\"type\":\"int\"},{\"name\":\"patch\",\"type\":\"int\"}],\"fullName\":\"Energistics.Datatypes.Version\",\"depends\":[]}},{\"name\":\"role\",\"type\":\"string\"},{\"name\":\"protocolCapabilities\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Datatypes.ArrayOfDouble\",\"depends\":[]},\"boolean\",\"bytes\"]}],\"fullName\":\"Energistics.Datatypes.DataValue\",\"depends\":[\"Energistics.Datatypes.ArrayOfDouble\"]}}}],\"fullName\":\"Energistics.Datatypes.SupportedProtocol\",\"depends\":[\"Energistics.Datatypes.Version\",\"Energistics.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int protocol;
  @Deprecated public Energistics.Datatypes.Version protocolVersion;
  @Deprecated public java.lang.CharSequence role;
  @Deprecated public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> protocolCapabilities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SupportedProtocol() {}

  /**
   * All-args constructor.
   */
  public SupportedProtocol(java.lang.Integer protocol, Energistics.Datatypes.Version protocolVersion, java.lang.CharSequence role, java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> protocolCapabilities) {
    this.protocol = protocol;
    this.protocolVersion = protocolVersion;
    this.role = role;
    this.protocolCapabilities = protocolCapabilities;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return protocol;
    case 1: return protocolVersion;
    case 2: return role;
    case 3: return protocolCapabilities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: protocol = (java.lang.Integer)value$; break;
    case 1: protocolVersion = (Energistics.Datatypes.Version)value$; break;
    case 2: role = (java.lang.CharSequence)value$; break;
    case 3: protocolCapabilities = (java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'protocol' field.
   */
  public java.lang.Integer getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.Integer value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'protocolVersion' field.
   */
  public Energistics.Datatypes.Version getProtocolVersion() {
    return protocolVersion;
  }

  /**
   * Sets the value of the 'protocolVersion' field.
   * @param value the value to set.
   */
  public void setProtocolVersion(Energistics.Datatypes.Version value) {
    this.protocolVersion = value;
  }

  /**
   * Gets the value of the 'role' field.
   */
  public java.lang.CharSequence getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.CharSequence value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'protocolCapabilities' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> getProtocolCapabilities() {
    return protocolCapabilities;
  }

  /**
   * Sets the value of the 'protocolCapabilities' field.
   * @param value the value to set.
   */
  public void setProtocolCapabilities(java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> value) {
    this.protocolCapabilities = value;
  }

  /** Creates a new SupportedProtocol RecordBuilder */
  public static Energistics.Datatypes.SupportedProtocol.Builder newBuilder() {
    return new Energistics.Datatypes.SupportedProtocol.Builder();
  }
  
  /** Creates a new SupportedProtocol RecordBuilder by copying an existing Builder */
  public static Energistics.Datatypes.SupportedProtocol.Builder newBuilder(Energistics.Datatypes.SupportedProtocol.Builder other) {
    return new Energistics.Datatypes.SupportedProtocol.Builder(other);
  }
  
  /** Creates a new SupportedProtocol RecordBuilder by copying an existing SupportedProtocol instance */
  public static Energistics.Datatypes.SupportedProtocol.Builder newBuilder(Energistics.Datatypes.SupportedProtocol other) {
    return new Energistics.Datatypes.SupportedProtocol.Builder(other);
  }
  
  /**
   * RecordBuilder for SupportedProtocol instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SupportedProtocol>
    implements org.apache.avro.data.RecordBuilder<SupportedProtocol> {

    private int protocol;
    private Energistics.Datatypes.Version protocolVersion;
    private java.lang.CharSequence role;
    private java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> protocolCapabilities;

    /** Creates a new Builder */
    private Builder() {
      super(Energistics.Datatypes.SupportedProtocol.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Energistics.Datatypes.SupportedProtocol.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.protocol)) {
        this.protocol = data().deepCopy(fields()[0].schema(), other.protocol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[1].schema(), other.protocolVersion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.role)) {
        this.role = data().deepCopy(fields()[2].schema(), other.role);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.protocolCapabilities)) {
        this.protocolCapabilities = data().deepCopy(fields()[3].schema(), other.protocolCapabilities);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SupportedProtocol instance */
    private Builder(Energistics.Datatypes.SupportedProtocol other) {
            super(Energistics.Datatypes.SupportedProtocol.SCHEMA$);
      if (isValidValue(fields()[0], other.protocol)) {
        this.protocol = data().deepCopy(fields()[0].schema(), other.protocol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protocolVersion)) {
        this.protocolVersion = data().deepCopy(fields()[1].schema(), other.protocolVersion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.role)) {
        this.role = data().deepCopy(fields()[2].schema(), other.role);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.protocolCapabilities)) {
        this.protocolCapabilities = data().deepCopy(fields()[3].schema(), other.protocolCapabilities);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'protocol' field */
    public java.lang.Integer getProtocol() {
      return protocol;
    }
    
    /** Sets the value of the 'protocol' field */
    public Energistics.Datatypes.SupportedProtocol.Builder setProtocol(int value) {
      validate(fields()[0], value);
      this.protocol = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'protocol' field has been set */
    public boolean hasProtocol() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'protocol' field */
    public Energistics.Datatypes.SupportedProtocol.Builder clearProtocol() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'protocolVersion' field */
    public Energistics.Datatypes.Version getProtocolVersion() {
      return protocolVersion;
    }
    
    /** Sets the value of the 'protocolVersion' field */
    public Energistics.Datatypes.SupportedProtocol.Builder setProtocolVersion(Energistics.Datatypes.Version value) {
      validate(fields()[1], value);
      this.protocolVersion = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolVersion' field has been set */
    public boolean hasProtocolVersion() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'protocolVersion' field */
    public Energistics.Datatypes.SupportedProtocol.Builder clearProtocolVersion() {
      protocolVersion = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'role' field */
    public java.lang.CharSequence getRole() {
      return role;
    }
    
    /** Sets the value of the 'role' field */
    public Energistics.Datatypes.SupportedProtocol.Builder setRole(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.role = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'role' field has been set */
    public boolean hasRole() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'role' field */
    public Energistics.Datatypes.SupportedProtocol.Builder clearRole() {
      role = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'protocolCapabilities' field */
    public java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> getProtocolCapabilities() {
      return protocolCapabilities;
    }
    
    /** Sets the value of the 'protocolCapabilities' field */
    public Energistics.Datatypes.SupportedProtocol.Builder setProtocolCapabilities(java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue> value) {
      validate(fields()[3], value);
      this.protocolCapabilities = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'protocolCapabilities' field has been set */
    public boolean hasProtocolCapabilities() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'protocolCapabilities' field */
    public Energistics.Datatypes.SupportedProtocol.Builder clearProtocolCapabilities() {
      protocolCapabilities = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public SupportedProtocol build() {
      try {
        SupportedProtocol record = new SupportedProtocol();
        record.protocol = fieldSetFlags()[0] ? this.protocol : (java.lang.Integer) defaultValue(fields()[0]);
        record.protocolVersion = fieldSetFlags()[1] ? this.protocolVersion : (Energistics.Datatypes.Version) defaultValue(fields()[1]);
        record.role = fieldSetFlags()[2] ? this.role : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.protocolCapabilities = fieldSetFlags()[3] ? this.protocolCapabilities : (java.util.Map<java.lang.CharSequence,Energistics.Datatypes.DataValue>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
