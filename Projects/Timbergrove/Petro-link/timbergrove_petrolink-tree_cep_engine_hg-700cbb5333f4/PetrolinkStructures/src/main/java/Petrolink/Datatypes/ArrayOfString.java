/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Petrolink.Datatypes;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ArrayOfString extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ArrayOfString\",\"namespace\":\"Petrolink.Datatypes\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}],\"fullName\":\"Petrolink.Datatypes.ArrayOfString\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.CharSequence> values;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ArrayOfString() {}

  /**
   * All-args constructor.
   */
  public ArrayOfString(java.util.List<java.lang.CharSequence> values) {
    this.values = values;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return values;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: values = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'values' field.
   */
  public java.util.List<java.lang.CharSequence> getValues() {
    return values;
  }

  /**
   * Sets the value of the 'values' field.
   * @param value the value to set.
   */
  public void setValues(java.util.List<java.lang.CharSequence> value) {
    this.values = value;
  }

  /** Creates a new ArrayOfString RecordBuilder */
  public static Petrolink.Datatypes.ArrayOfString.Builder newBuilder() {
    return new Petrolink.Datatypes.ArrayOfString.Builder();
  }
  
  /** Creates a new ArrayOfString RecordBuilder by copying an existing Builder */
  public static Petrolink.Datatypes.ArrayOfString.Builder newBuilder(Petrolink.Datatypes.ArrayOfString.Builder other) {
    return new Petrolink.Datatypes.ArrayOfString.Builder(other);
  }
  
  /** Creates a new ArrayOfString RecordBuilder by copying an existing ArrayOfString instance */
  public static Petrolink.Datatypes.ArrayOfString.Builder newBuilder(Petrolink.Datatypes.ArrayOfString other) {
    return new Petrolink.Datatypes.ArrayOfString.Builder(other);
  }
  
  /**
   * RecordBuilder for ArrayOfString instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ArrayOfString>
    implements org.apache.avro.data.RecordBuilder<ArrayOfString> {

    private java.util.List<java.lang.CharSequence> values;

    /** Creates a new Builder */
    private Builder() {
      super(Petrolink.Datatypes.ArrayOfString.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Petrolink.Datatypes.ArrayOfString.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.values)) {
        this.values = data().deepCopy(fields()[0].schema(), other.values);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ArrayOfString instance */
    private Builder(Petrolink.Datatypes.ArrayOfString other) {
            super(Petrolink.Datatypes.ArrayOfString.SCHEMA$);
      if (isValidValue(fields()[0], other.values)) {
        this.values = data().deepCopy(fields()[0].schema(), other.values);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'values' field */
    public java.util.List<java.lang.CharSequence> getValues() {
      return values;
    }
    
    /** Sets the value of the 'values' field */
    public Petrolink.Datatypes.ArrayOfString.Builder setValues(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.values = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'values' field has been set */
    public boolean hasValues() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'values' field */
    public Petrolink.Datatypes.ArrayOfString.Builder clearValues() {
      values = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public ArrayOfString build() {
      try {
        ArrayOfString record = new ArrayOfString();
        record.values = fieldSetFlags()[0] ? this.values : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
