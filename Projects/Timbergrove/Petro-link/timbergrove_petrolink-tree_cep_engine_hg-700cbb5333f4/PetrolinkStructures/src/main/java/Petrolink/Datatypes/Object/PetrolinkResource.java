/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Petrolink.Datatypes.Object;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PetrolinkResource extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PetrolinkResource\",\"namespace\":\"Petrolink.Datatypes.Object\",\"fields\":[{\"name\":\"resourceMetadata\",\"type\":{\"type\":\"record\",\"name\":\"ResourceMetadata\",\"fields\":[{\"name\":\"namespace\",\"type\":\"string\"},{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"channelSubscribable\",\"type\":\"boolean\"},{\"name\":\"objectType\",\"type\":\"string\"},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"hasChildren\",\"type\":\"int\"},{\"name\":\"uuid\",\"type\":[\"null\",\"string\"]},{\"name\":\"lastChanged\",\"type\":{\"type\":\"record\",\"name\":\"DateTime\",\"namespace\":\"Petrolink.Datatypes\",\"fields\":[{\"name\":\"time\",\"type\":\"long\"},{\"name\":\"offset\",\"type\":\"double\"}],\"fullName\":\"Petrolink.Datatypes.DateTime\",\"depends\":[]}}],\"fullName\":\"Petrolink.Datatypes.Object.ResourceMetadata\",\"depends\":[\"Petrolink.Datatypes.DateTime\"]}},{\"name\":\"contentType\",\"type\":\"string\"},{\"name\":\"contentEncoding\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"linkrefs\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}],\"fullName\":\"Petrolink.Datatypes.Object.PetrolinkResource\",\"depends\":[\"Petrolink.Datatypes.Object.ResourceMetadata\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Petrolink.Datatypes.Object.ResourceMetadata resourceMetadata;
  @Deprecated public java.lang.CharSequence contentType;
  @Deprecated public java.lang.CharSequence contentEncoding;
  @Deprecated public java.nio.ByteBuffer data;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> linkrefs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PetrolinkResource() {}

  /**
   * All-args constructor.
   */
  public PetrolinkResource(Petrolink.Datatypes.Object.ResourceMetadata resourceMetadata, java.lang.CharSequence contentType, java.lang.CharSequence contentEncoding, java.nio.ByteBuffer data, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> linkrefs) {
    this.resourceMetadata = resourceMetadata;
    this.contentType = contentType;
    this.contentEncoding = contentEncoding;
    this.data = data;
    this.linkrefs = linkrefs;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceMetadata;
    case 1: return contentType;
    case 2: return contentEncoding;
    case 3: return data;
    case 4: return linkrefs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceMetadata = (Petrolink.Datatypes.Object.ResourceMetadata)value$; break;
    case 1: contentType = (java.lang.CharSequence)value$; break;
    case 2: contentEncoding = (java.lang.CharSequence)value$; break;
    case 3: data = (java.nio.ByteBuffer)value$; break;
    case 4: linkrefs = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'resourceMetadata' field.
   */
  public Petrolink.Datatypes.Object.ResourceMetadata getResourceMetadata() {
    return resourceMetadata;
  }

  /**
   * Sets the value of the 'resourceMetadata' field.
   * @param value the value to set.
   */
  public void setResourceMetadata(Petrolink.Datatypes.Object.ResourceMetadata value) {
    this.resourceMetadata = value;
  }

  /**
   * Gets the value of the 'contentType' field.
   */
  public java.lang.CharSequence getContentType() {
    return contentType;
  }

  /**
   * Sets the value of the 'contentType' field.
   * @param value the value to set.
   */
  public void setContentType(java.lang.CharSequence value) {
    this.contentType = value;
  }

  /**
   * Gets the value of the 'contentEncoding' field.
   */
  public java.lang.CharSequence getContentEncoding() {
    return contentEncoding;
  }

  /**
   * Sets the value of the 'contentEncoding' field.
   * @param value the value to set.
   */
  public void setContentEncoding(java.lang.CharSequence value) {
    this.contentEncoding = value;
  }

  /**
   * Gets the value of the 'data' field.
   */
  public java.nio.ByteBuffer getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.nio.ByteBuffer value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'linkrefs' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getLinkrefs() {
    return linkrefs;
  }

  /**
   * Sets the value of the 'linkrefs' field.
   * @param value the value to set.
   */
  public void setLinkrefs(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.linkrefs = value;
  }

  /** Creates a new PetrolinkResource RecordBuilder */
  public static Petrolink.Datatypes.Object.PetrolinkResource.Builder newBuilder() {
    return new Petrolink.Datatypes.Object.PetrolinkResource.Builder();
  }
  
  /** Creates a new PetrolinkResource RecordBuilder by copying an existing Builder */
  public static Petrolink.Datatypes.Object.PetrolinkResource.Builder newBuilder(Petrolink.Datatypes.Object.PetrolinkResource.Builder other) {
    return new Petrolink.Datatypes.Object.PetrolinkResource.Builder(other);
  }
  
  /** Creates a new PetrolinkResource RecordBuilder by copying an existing PetrolinkResource instance */
  public static Petrolink.Datatypes.Object.PetrolinkResource.Builder newBuilder(Petrolink.Datatypes.Object.PetrolinkResource other) {
    return new Petrolink.Datatypes.Object.PetrolinkResource.Builder(other);
  }
  
  /**
   * RecordBuilder for PetrolinkResource instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PetrolinkResource>
    implements org.apache.avro.data.RecordBuilder<PetrolinkResource> {

    private Petrolink.Datatypes.Object.ResourceMetadata resourceMetadata;
    private java.lang.CharSequence contentType;
    private java.lang.CharSequence contentEncoding;
    private java.nio.ByteBuffer data;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> linkrefs;

    /** Creates a new Builder */
    private Builder() {
      super(Petrolink.Datatypes.Object.PetrolinkResource.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Petrolink.Datatypes.Object.PetrolinkResource.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceMetadata)) {
        this.resourceMetadata = data().deepCopy(fields()[0].schema(), other.resourceMetadata);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contentType)) {
        this.contentType = data().deepCopy(fields()[1].schema(), other.contentType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contentEncoding)) {
        this.contentEncoding = data().deepCopy(fields()[2].schema(), other.contentEncoding);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.data)) {
        this.data = data().deepCopy(fields()[3].schema(), other.data);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.linkrefs)) {
        this.linkrefs = data().deepCopy(fields()[4].schema(), other.linkrefs);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PetrolinkResource instance */
    private Builder(Petrolink.Datatypes.Object.PetrolinkResource other) {
            super(Petrolink.Datatypes.Object.PetrolinkResource.SCHEMA$);
      if (isValidValue(fields()[0], other.resourceMetadata)) {
        this.resourceMetadata = data().deepCopy(fields()[0].schema(), other.resourceMetadata);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contentType)) {
        this.contentType = data().deepCopy(fields()[1].schema(), other.contentType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contentEncoding)) {
        this.contentEncoding = data().deepCopy(fields()[2].schema(), other.contentEncoding);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.data)) {
        this.data = data().deepCopy(fields()[3].schema(), other.data);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.linkrefs)) {
        this.linkrefs = data().deepCopy(fields()[4].schema(), other.linkrefs);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'resourceMetadata' field */
    public Petrolink.Datatypes.Object.ResourceMetadata getResourceMetadata() {
      return resourceMetadata;
    }
    
    /** Sets the value of the 'resourceMetadata' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder setResourceMetadata(Petrolink.Datatypes.Object.ResourceMetadata value) {
      validate(fields()[0], value);
      this.resourceMetadata = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'resourceMetadata' field has been set */
    public boolean hasResourceMetadata() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'resourceMetadata' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder clearResourceMetadata() {
      resourceMetadata = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'contentType' field */
    public java.lang.CharSequence getContentType() {
      return contentType;
    }
    
    /** Sets the value of the 'contentType' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder setContentType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.contentType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'contentType' field has been set */
    public boolean hasContentType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'contentType' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder clearContentType() {
      contentType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'contentEncoding' field */
    public java.lang.CharSequence getContentEncoding() {
      return contentEncoding;
    }
    
    /** Sets the value of the 'contentEncoding' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder setContentEncoding(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.contentEncoding = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'contentEncoding' field has been set */
    public boolean hasContentEncoding() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'contentEncoding' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder clearContentEncoding() {
      contentEncoding = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'data' field */
    public java.nio.ByteBuffer getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder setData(java.nio.ByteBuffer value) {
      validate(fields()[3], value);
      this.data = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'data' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder clearData() {
      data = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'linkrefs' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getLinkrefs() {
      return linkrefs;
    }
    
    /** Sets the value of the 'linkrefs' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder setLinkrefs(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.linkrefs = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'linkrefs' field has been set */
    public boolean hasLinkrefs() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'linkrefs' field */
    public Petrolink.Datatypes.Object.PetrolinkResource.Builder clearLinkrefs() {
      linkrefs = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public PetrolinkResource build() {
      try {
        PetrolinkResource record = new PetrolinkResource();
        record.resourceMetadata = fieldSetFlags()[0] ? this.resourceMetadata : (Petrolink.Datatypes.Object.ResourceMetadata) defaultValue(fields()[0]);
        record.contentType = fieldSetFlags()[1] ? this.contentType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.contentEncoding = fieldSetFlags()[2] ? this.contentEncoding : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.data = fieldSetFlags()[3] ? this.data : (java.nio.ByteBuffer) defaultValue(fields()[3]);
        record.linkrefs = fieldSetFlags()[4] ? this.linkrefs : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
