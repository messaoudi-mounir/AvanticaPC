package com.petrolink.mbe.engine;

import java.io.UnsupportedEncodingException;

import org.apache.commons.lang3.StringUtils;

import com.petrolink.mbe.setting.HttpBasicAuthentication;
import com.petrolink.mbe.setting.HttpSamlTokenAuthentication;
import com.smartnow.rabbitmq.util.RMQConnectionSettings;

/**
 * Store common test configuration.
 * This should make easier when target server is changed etc.
 * @author aristo
 *
 */
@SuppressWarnings("javadoc")
public final class CommonConfigForTests {

	private CommonConfigForTests() {
		
	}
	
	private static String baseUri = "https://pvcloud2.petrolink.net/PetroVaultHD";
	
	public static String getCommonPetroVaultUri(final String relativeUri){
		if (StringUtils.isBlank(relativeUri)){
			return baseUri;
		} else {
			return baseUri + relativeUri;
		}
	}
	
	private static HttpBasicAuthentication basicAuth;
	public static HttpBasicAuthentication getBasicAuth() {
		if (basicAuth == null) {
			basicAuth =	new HttpBasicAuthentication("Administrator", "p^5CAq97he");
		}
		return basicAuth;
		
	}
	
	private static HttpSamlTokenAuthentication samlTokenAuth;
	public static HttpSamlTokenAuthentication getSamlTokenAuth() throws UnsupportedEncodingException {
		if (samlTokenAuth == null) {
			//https://pvcloud2.petrolink.net/PetroVault
			//String defaultSamlToken = "IDxzYW1sOkFzc2VydGlvbiBWZXJzaW9uPSIyLjAiIElEPSJTYW1sU2VjdXJpdHlUb2tlbi1hMWUxM2JmZC00MzYzLTQzODktYjQ2ZC1mNDA5ZmY0MTdjMDgiIElzc3VlSW5zdGFudD0iMjAxNi0wOS0yOVQxOToyNTo1NloiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPjxzYW1sOklzc3Vlcj5odHRwOi8vcHZjbG91ZDIvUGV0cm9WYXVsdERldi88L3NhbWw6SXNzdWVyPjxzYW1sOlN1YmplY3Q+PHNhbWw6TmFtZUlEPmFkbWluaXN0cmF0b3I8L3NhbWw6TmFtZUlEPjxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJOb01ldGhvZFlldC1UT0RPIiAvPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDE2LTA5LTI5VDE5OjI1OjU2WiIgTm90T25PckFmdGVyPSIyMDE2LTEwLTA2VDIwOjI1OjU2WiIgLz48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbCIgRnJpZW5kbHlOYW1lPSJVc2VyIFByaW5jaXBhbCBOYW1lIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5hZG1pbmlzdHJhdG9yPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbElEIiBGcmllbmRseU5hbWU9IlVzZXIgUHJpbmNpcGFsIElEIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT40OTk1ZjFjMi0yZjg4LTQwYWYtYTFlZi01NWU4NmVhNTMxOTc8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsRW1haWwiIEZyaWVuZGx5TmFtZT0iVXNlciBQcmluY2lwYWwgRW1haWwiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPmFkbWluaXN0cmF0b3JAcGV0cm9saW5rLmNvbTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQcmluY2lwYWxGaXJzdE5hbWUiIEZyaWVuZGx5TmFtZT0iVXNlciBQcmluY2lwYWwgRmlyc3QgTmFtZSI+PHNhbWw6QXR0cmlidXRlVmFsdWU+QWRtaW5pc3RyYXRvcjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQcmluY2lwYWxMYXN0TmFtZSIgRnJpZW5kbHlOYW1lPSJVc2VyIFByaW5jaXBhbCBMYXN0IE5hbWUiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIC8+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsVENBY2NlcHRlZE9uIiBGcmllbmRseU5hbWU9IlVzZXIgVGVybSBDb25kaXRpb24gQWNjZXB0YW5jZSBUaW1lc3RhbXAiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPjIwMTYtMDgtMjBUMTE6MTU6NTUuMzkxNzU4OVo8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsVENEZWNsaW5lZE9uIiBGcmllbmRseU5hbWU9IlVzZXIgVGVybSBDb25kaXRpb24gRGVjbGluYXRpb24gVGltZXN0YW1wIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSAvPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbFRDU2tpcCIgRnJpZW5kbHlOYW1lPSJVc2VyIHJlcXVpcmVzIHRvIGFjY2VwdCBUZXJtIENvbmRpdGlvbiI+PHNhbWw6QXR0cmlidXRlVmFsdWU+RmFsc2U8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsTXlEcm9wQm94U3RhdHVzIiBGcmllbmRseU5hbWU9IlVzZXIgTXlEcm9wQm94IFN0YXR1cyI+PHNhbWw6QXR0cmlidXRlVmFsdWU+RGlzYWJsZWQ8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUGV0cm9WYXVsdEV4cGlyYXRpb25EYXRlIiBGcmllbmRseU5hbWU9IlBldHJvVmF1bHQgRXhwaXJhdGlvbiBEYXRlIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT4yMDE2LTA5LTI5VDE5OjI1OjU2LjgxNDAwOTRaPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlBhc3N3b3JkRXhwaXJlSW5EYXlzIiBGcmllbmRseU5hbWU9IlBhc3N3b3JkIEV4cGlyZSBpbiAoRGF5cykiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPjYwPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9Ikdyb3VwcyIgRnJpZW5kbHlOYW1lPSJHcm91cCBNZW1iZXJzaGlwIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSIxMDg0ZGZjOS01ZTQzLTQ0M2EtYTJlNS00MTBmMzc2Nzk2YjQiPkV2ZXJ5b25lPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIFVVSUQ9IjJjYTcyMjZlLTkxYWQtNDRmNC04ZmEzLWZkZGE3YjY3YTczZSI+U3lzdGVtQ29uZmlndXJhdGlvbjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSI1Njg3NDUxZC0xZDhjLTQxNGQtYTlmZC1jYzdhNTlmNGQ2ZDAiPlJlcG9ydGluZ0VkaXRvcjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSI3MmVmN2NkYS0xMWVkLTRmM2ItYWUxZC1iMDIzNTYyOTIxMjQiPlNlcnZlckFkbWluaXN0cmF0b3JzPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIFVVSUQ9Ijc3Mjc0M2QwLTVhNGEtNDE5Ni04OGYxLTVhNzQ1ZjE5MzdhMiI+UHVibGljUHJvZmlsZUFjY2Vzczwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSJiZmYwNDFhOC01ZDI1LTQ5YWItYjFhMS00ZTAwNTRlNTgyNDUiPlJlYWxUaW1lU3lzdGVtRWRpdG9yPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIFVVSUQ9ImM0MDAwZjhiLWY5NjQtNDg0MC04YjNjLTBlODE5ZTRlNWQzYSI+V2VsbEFkbWluPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIFVVSUQ9ImM3NjQ5OWZhLWViN2QtNGM2OC04NTU3LTY0MWIyOGNiY2ExZSI+QWRtaW5pc3RyYXRvcnM8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iQ2xpZW50SVBBZGRyZXNzIiBGcmllbmRseU5hbWU9IklQIEFkZHJlc3Mgb2YgdGhlIENsaWVudCI+PHNhbWw6QXR0cmlidXRlVmFsdWUgLz48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJHcm91cFJvbGVzIiBGcmllbmRseU5hbWU9Ikdyb3VwIFJvbGVzIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSI5NWNkY2E0Mi1jYzQ0LTQ3OTktYjc3My04NWY3ZTA1YzgwODciIFByaW5jaXBhbElkPSIxMDg0ZGZjOS01ZTQzLTQ0M2EtYTJlNS00MTBmMzc2Nzk2YjQiIFJvbGU9IkFkbWluaXN0cmF0b3IiPkFkbWluaXN0cmF0b3I8L3NhbWw6QXR0cmlidXRlVmFsdWU+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iYjUwNmRkZWUtMTcxMy00Y2ZjLTk4Y2YtNWM4ZDg3ZTc2MGM3IiBQcmluY2lwYWxJZD0iMTA4NGRmYzktNWU0My00NDNhLWEyZTUtNDEwZjM3Njc5NmI0IiBSb2xlPSJTdXBlclVzZXIiPlN1cGVyVXNlcjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDE2LTA5LTI5VDE5OjI1OjU2WiIgLz48U2lnbmF0dXJlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgLz48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIiAvPjxSZWZlcmVuY2UgVVJJPSIjU2FtbFNlY3VyaXR5VG9rZW4tYTFlMTNiZmQtNDM2My00Mzg5LWI0NmQtZjQwOWZmNDE3YzA4Ij48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiIC8+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PEluY2x1c2l2ZU5hbWVzcGFjZXMgUHJlZml4TGlzdD0iI2RlZmF1bHQgY29kZSBkcyBraW5kIHJ3IHNhbWwgc2FtbHAgdHlwZW5zIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiAvPjwvVHJhbnNmb3JtPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3NoYTEiIC8+PERpZ2VzdFZhbHVlPmx5bzVKanF5bmlrR3hweG9IQjBuUmNFalIwTT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+SWJ5YzlYdW8vam1jM0wzUGZRenBWOHVwTno2MENuWk5qTnlVYU44TURteWxvN1g4Y0hnM0ZmSmpaS3pYOC9mNzBPR0lFTHdDTFcyeHA2R1Y3b1FkK2g4dlpQalM0T1hCajB1bFNXRDZVeGI1MmVBOHc2Wk13dS9NcjdYQkJoL29vNWdRbHVhR2lwYnU0Z2Z0dGdqKzRnWERWaTg2SXhhenRjWGlQaUtIOFc4PTwvU2lnbmF0dXJlVmFsdWU+PEtleUluZm8+PFg1MDlEYXRhPjxYNTA5Q2VydGlmaWNhdGU+TUlJQm5qQ0NBUWNDQkViVG1kQXdEUVlKS29aSWh2Y05BUUVFQlFBd0ZqRVVNQklHQTFVRUF4TUxkM2QzTG1sa2NDNWpiMjB3SGhjTk1EY3dPREk0TURNME16RXlXaGNOTVRjd09ESTFNRE0wTXpFeVdqQVdNUlF3RWdZRFZRUURFd3QzZDNjdWFXUndMbU52YlRDQm56QU5CZ2txaGtpRzl3MEJBUUVGQUFPQmpRQXdnWWtDZ1lFQW8zMXEzbUpaYXlYZlprTER1TGNuYW5jL0tHK1JERlcrT2xZRFArUnVidldudDhYNWp0aVVUY3A4SVE0NlRORVVGc2ttc29uVWI1QW5HK3pPQ2Nhd2IyZEpyOGtCdENOaGZpL1R1ZlpHQlFOanVBeE5NaTM0eUlnUmRHaW5hem5IZ2NsckFJSVpUeUtlclFxWWpQTDF4UkRzRkdwenFHR2kvMm9wek44blY1a0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRUUZBQU9CZ1FCbU53Rk4rOThheWJ1UUtGSkZyNjlzOUJ2QlZZdGsrSHN4M2d4MGc0ZTVzTFRsa2NTVTAzWFo4QU9ldDBteTRSdlVzcGFEUnpEcnYrZ0VnZzdnRFAvcnNWQ1NzM2RrdVl1VXZ1V2JpaVRxL0hqNEVLdUtaYThuSWVyWjNPejRYYTEvYks4OGVUN1JWc3Y1Yk1PeGdKYlNFdlRpZFR2T3BWMEcxM2R1SXF5ckN3PT08L1g1MDlDZXJ0aWZpY2F0ZT48L1g1MDlEYXRhPjwvS2V5SW5mbz48L1NpZ25hdHVyZT48L3NhbWw6QXNzZXJ0aW9uPg==";

			//https://pvcloud2.petrolink.net/PetroVaultHD
			String defaultSamlToken = "PHNhbWw6QXNzZXJ0aW9uIFZlcnNpb249IjIuMCIgSUQ9IlNhbWxTZWN1cml0eVRva2VuLTQxZjZiZjZiLTZlNjQtNDJkMy04MDIxLWEyMzI1NTE2NWYxOSIgSXNzdWVJbnN0YW50PSIyMDE2LTEwLTMxVDIwOjE5OjU1WiIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+PHNhbWw6SXNzdWVyPmh0dHA6Ly9wdmNsb3VkMi9QZXRyb1ZhdWx0SEQvPC9zYW1sOklzc3Vlcj48c2FtbDpTdWJqZWN0PjxzYW1sOk5hbWVJRD5hZG1pbmlzdHJhdG9yPC9zYW1sOk5hbWVJRD48c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0iTm9NZXRob2RZZXQtVE9ETyIgLz48L3NhbWw6U3ViamVjdD48c2FtbDpDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAxNi0xMC0zMVQyMDoxOTo1NVoiIE5vdE9uT3JBZnRlcj0iMjAxNi0xMS0wN1QyMToxOTo1NVoiIC8+PHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQcmluY2lwYWwiIEZyaWVuZGx5TmFtZT0iVXNlciBQcmluY2lwYWwgTmFtZSI+PHNhbWw6QXR0cmlidXRlVmFsdWU+YWRtaW5pc3RyYXRvcjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQcmluY2lwYWxJRCIgRnJpZW5kbHlOYW1lPSJVc2VyIFByaW5jaXBhbCBJRCI+PHNhbWw6QXR0cmlidXRlVmFsdWU+NDk5NWYxYzItMmY4OC00MGFmLWExZWYtNTVlODZlYTUzMTk3PC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbEVtYWlsIiBGcmllbmRseU5hbWU9IlVzZXIgUHJpbmNpcGFsIEVtYWlsIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5hZG1pbmlzdHJhdG9yQHBldHJvbGluay5jb208L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsRmlyc3ROYW1lIiBGcmllbmRseU5hbWU9IlVzZXIgUHJpbmNpcGFsIEZpcnN0IE5hbWUiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkFkbWluaXN0cmF0b3I8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iUHJpbmNpcGFsTGFzdE5hbWUiIEZyaWVuZGx5TmFtZT0iVXNlciBQcmluY2lwYWwgTGFzdCBOYW1lIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSAvPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbFRDQWNjZXB0ZWRPbiIgRnJpZW5kbHlOYW1lPSJVc2VyIFRlcm0gQ29uZGl0aW9uIEFjY2VwdGFuY2UgVGltZXN0YW1wIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT4yMDE2LTEwLTI3VDE5OjM5OjEwLjc5NTc5OTZaPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbFRDRGVjbGluZWRPbiIgRnJpZW5kbHlOYW1lPSJVc2VyIFRlcm0gQ29uZGl0aW9uIERlY2xpbmF0aW9uIFRpbWVzdGFtcCI+PHNhbWw6QXR0cmlidXRlVmFsdWUgLz48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQcmluY2lwYWxUQ1NraXAiIEZyaWVuZGx5TmFtZT0iVXNlciByZXF1aXJlcyB0byBhY2NlcHQgVGVybSBDb25kaXRpb24iPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkZhbHNlPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlByaW5jaXBhbE15RHJvcEJveFN0YXR1cyIgRnJpZW5kbHlOYW1lPSJVc2VyIE15RHJvcEJveCBTdGF0dXMiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkRpc2FibGVkPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IlBldHJvVmF1bHRFeHBpcmF0aW9uRGF0ZSIgRnJpZW5kbHlOYW1lPSJQZXRyb1ZhdWx0IEV4cGlyYXRpb24gRGF0ZSI+PHNhbWw6QXR0cmlidXRlVmFsdWU+MjAxNi0xMC0zMVQyMDoxOTo1NS4zNTIyMDE2Wjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJQYXNzd29yZEV4cGlyZUluRGF5cyIgRnJpZW5kbHlOYW1lPSJQYXNzd29yZCBFeHBpcmUgaW4gKERheXMpIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT42MDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJHcm91cHMiIEZyaWVuZGx5TmFtZT0iR3JvdXAgTWVtYmVyc2hpcCI+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iMTA4NGRmYzktNWU0My00NDNhLWEyZTUtNDEwZjM3Njc5NmI0Ij5FdmVyeW9uZTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSIyY2E3MjI2ZS05MWFkLTQ0ZjQtOGZhMy1mZGRhN2I2N2E3M2UiPlN5c3RlbUNvbmZpZ3VyYXRpb248L3NhbWw6QXR0cmlidXRlVmFsdWU+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iNTY4NzQ1MWQtMWQ4Yy00MTRkLWE5ZmQtY2M3YTU5ZjRkNmQwIj5SZXBvcnRpbmdFZGl0b3I8L3NhbWw6QXR0cmlidXRlVmFsdWU+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iNzJlZjdjZGEtMTFlZC00ZjNiLWFlMWQtYjAyMzU2MjkyMTI0Ij5TZXJ2ZXJBZG1pbmlzdHJhdG9yczwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSI3NzI3NDNkMC01YTRhLTQxOTYtODhmMS01YTc0NWYxOTM3YTIiPlB1YmxpY1Byb2ZpbGVBY2Nlc3M8L3NhbWw6QXR0cmlidXRlVmFsdWU+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iYmZmMDQxYTgtNWQyNS00OWFiLWIxYTEtNGUwMDU0ZTU4MjQ1Ij5SZWFsVGltZVN5c3RlbUVkaXRvcjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSJjNDAwMGY4Yi1mOTY0LTQ4NDAtOGIzYy0wZTgxOWU0ZTVkM2EiPldlbGxBZG1pbjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSBVVUlEPSJjNzY0OTlmYS1lYjdkLTRjNjgtODU1Ny02NDFiMjhjYmNhMWUiPkFkbWluaXN0cmF0b3JzPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIE5hbWU9IkNsaWVudElQQWRkcmVzcyIgRnJpZW5kbHlOYW1lPSJJUCBBZGRyZXNzIG9mIHRoZSBDbGllbnQiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIC8+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iR3JvdXBSb2xlcyIgRnJpZW5kbHlOYW1lPSJHcm91cCBSb2xlcyI+PHNhbWw6QXR0cmlidXRlVmFsdWUgVVVJRD0iOTVjZGNhNDItY2M0NC00Nzk5LWI3NzMtODVmN2UwNWM4MDg3IiBQcmluY2lwYWxJZD0iMTA4NGRmYzktNWU0My00NDNhLWEyZTUtNDEwZjM3Njc5NmI0IiBSb2xlPSJBZG1pbmlzdHJhdG9yIj5BZG1pbmlzdHJhdG9yPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIFVVSUQ9ImI1MDZkZGVlLTE3MTMtNGNmYy05OGNmLTVjOGQ4N2U3NjBjNyIgUHJpbmNpcGFsSWQ9IjEwODRkZmM5LTVlNDMtNDQzYS1hMmU1LTQxMGYzNzY3OTZiNCIgUm9sZT0iU3VwZXJVc2VyIj5TdXBlclVzZXI8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PjxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAxNi0xMC0zMVQyMDoxOTo1NVoiIC8+PFNpZ25hdHVyZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFNpZ25lZEluZm8+PENhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiIC8+PFNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMSIgLz48UmVmZXJlbmNlIFVSST0iI1NhbWxTZWN1cml0eVRva2VuLTQxZjZiZjZiLTZlNjQtNDJkMy04MDIxLWEyMzI1NTE2NWYxOSI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIiAvPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjxJbmNsdXNpdmVOYW1lc3BhY2VzIFByZWZpeExpc3Q9IiNkZWZhdWx0IGNvZGUgZHMga2luZCBydyBzYW1sIHNhbWxwIHR5cGVucyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgLz48L1RyYW5zZm9ybT48L1RyYW5zZm9ybXM+PERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNzaGExIiAvPjxEaWdlc3RWYWx1ZT55WlVXK2xwOWQ3TUR0R2hIUDNubTRkdS9LbUU9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8+PFNpZ25hdHVyZVZhbHVlPmVwVFJyTkc5RkZzNVV5dXNxS1ZDanZBSHZUNjRFM1RrTFR2Um1PQ3hvVXJDWGQ4Wk9pNFFXUzQzZEMwVkpERTNvbEpUZGc5OWZvVFhlYjRuU0tDTlR0cU5tbm55NHZOTlNsSVA3UkNkQ3YrMmlsS3FSUUFzVXJRTHZOSFB4YytNeXpFU3VtNGo5ZG95eFAvZWVoSEt2MmdWcTJDVnBmSDNmZVZQMmFuQ0xnVT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUJuakNDQVFjQ0JFYlRtZEF3RFFZSktvWklodmNOQVFFRUJRQXdGakVVTUJJR0ExVUVBeE1MZDNkM0xtbGtjQzVqYjIwd0hoY05NRGN3T0RJNE1ETTBNekV5V2hjTk1UY3dPREkxTURNME16RXlXakFXTVJRd0VnWURWUVFERXd0M2QzY3VhV1J3TG1OdmJUQ0JuekFOQmdrcWhraUc5dzBCQVFFRkFBT0JqUUF3Z1lrQ2dZRUFvMzFxM21KWmF5WGZaa0xEdUxjbmFuYy9LRytSREZXK09sWURQK1J1YnZXbnQ4WDVqdGlVVGNwOElRNDZUTkVVRnNrbXNvblViNUFuRyt6T0NjYXdiMmRKcjhrQnRDTmhmaS9UdWZaR0JRTmp1QXhOTWkzNHlJZ1JkR2luYXpuSGdjbHJBSUlaVHlLZXJRcVlqUEwxeFJEc0ZHcHpxR0dpLzJvcHpOOG5WNWtDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUVFGQUFPQmdRQm1Od0ZOKzk4YXlidVFLRkpGcjY5czlCdkJWWXRrK0hzeDNneDBnNGU1c0xUbGtjU1UwM1haOEFPZXQwbXk0UnZVc3BhRFJ6RHJ2K2dFZ2c3Z0RQL3JzVkNTczNka3VZdVV2dVdiaWlUcS9IajRFS3VLWmE4bkllclozT3o0WGExL2JLODhlVDdSVnN2NWJNT3hnSmJTRXZUaWRUdk9wVjBHMTNkdUlxeXJDdz09PC9YNTA5Q2VydGlmaWNhdGU+PC9YNTA5RGF0YT48L0tleUluZm8+PC9TaWduYXR1cmU+PC9zYW1sOkFzc2VydGlvbj4=";
			samlTokenAuth = HttpSamlTokenAuthentication.fromBase64(defaultSamlToken);
		}
		return samlTokenAuth;
	}
	
	private static RMQConnectionSettings realtimeChannelRMQSetting;
	public static RMQConnectionSettings getRealtimeChannelRMQSetting() {
		if (realtimeChannelRMQSetting == null) {
			RMQConnectionSettings rmq = new RMQConnectionSettings();
			rmq.setExchange("PetroVault.Realtime.Raw");
			rmq.setExchangeType("topic");
			rmq.setDurable(true);
			
			realtimeChannelRMQSetting = rmq;
		}
		return realtimeChannelRMQSetting;
	}
	
	private static String rmqUri;
	public static String getRMQUri() {
		if (StringUtils.isBlank(rmqUri)) {
			//rmqUri = "amqp://userName:password@hostName:portNumber/virtualHost";
			rmqUri = "amqp://guest:guest@localhost:5672";
		}
		return rmqUri;
	}
}
