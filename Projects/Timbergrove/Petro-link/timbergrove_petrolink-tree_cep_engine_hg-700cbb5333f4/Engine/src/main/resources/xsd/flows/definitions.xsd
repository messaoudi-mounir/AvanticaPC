<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.petrolink.com/mbe/rules" xmlns:rul="http://www.petrolink.com/mbe/rules">
    <xs:attributeGroup name="attgrp_commonAction">    
        <xs:attribute name="sequence" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>The ordered sequence of actions to be done.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="uniqueId" type="xs:string" use="optional"/>
        <xs:attribute name="defaultMode" use="optional">
         	<xs:simpleType>
			   <xs:restriction base="xs:string">
			        <xs:enumeration value="active" />
			        <xs:enumeration value="passive" />
			        <xs:enumeration value="test" />
			    </xs:restriction>
		    </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    
    <xs:simpleType name="type_UUID" >
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="type_variableScope">
    	<xs:annotation>
           <xs:documentation>
           The possible values are : 
           1. filtering : variable/channel available in filtering condition will NOT trigger evaluation
           2. condition : will available for condition and will trigger
           3. reference : will available for condition and will NOT trigger
           4. global : will available for condition and filtering and will trigger
           </xs:documentation>
       </xs:annotation>
	   <xs:restriction base="xs:string">
	        <xs:enumeration value="filtering" />
	        <xs:enumeration value="condition" />
	        <xs:enumeration value="reference" />
	        <xs:enumeration value="global" />
	    </xs:restriction>
	</xs:simpleType>

    <xs:attributeGroup name="attgrp_commonFlow">
        <xs:attribute type="xs:string" name="name" use="required"/>
        <xs:attribute type="xs:boolean" name="load" use="optional"/>
    </xs:attributeGroup>

    <xs:complexType name="type_globalChannel">
		<xs:attribute type="xs:string" name="alias" use="required">
			<xs:annotation>
				<xs:documentation>Token Identifier in condition processing. Should not have space and special characters
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="optional">
			<xs:annotation>
				<xs:documentation>
					Default Value is Buffered
					Channel types include:
					- Historical: Load a historical channel from PetroVault based on the Start and End Index attributes
					- Preloaded: Load a predefined channel dataset a file located on the folder defined by the engine property PreloadedChannels
					- Buffered: Real-Time Rule level channel that keeps the values buffered until they are used by the given rule
					- Last Known Value: Real-Time glogal channel that keeps only the last know data point
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>			
                <xs:restriction base="xs:string">
                    <xs:enumeration value="globalbuffered" />
                    <xs:enumeration value="lastknownvalue" />
                </xs:restriction>
            </xs:simpleType>
		</xs:attribute>
		<xs:attribute name="sequence" type="xs:integer" use="optional"/>
		<xs:attribute name="valueUnit" type="xs:string" use="optional"/>
		<xs:attribute name="indexUnit" type="xs:string" use="optional"/>		
		<xs:attribute name="indexType" use="optional">
			<xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="long" />
                    <xs:enumeration value="double" />
                    <xs:enumeration value="datetime" />
                </xs:restriction>
            </xs:simpleType>		
		</xs:attribute>
		<xs:attribute name="gap" type="xs:double" use="optional">
			<xs:annotation>
				<xs:documentation>Required for Historical, Preloaded or Buffered Channels</xs:documentation>
			</xs:annotation>
		</xs:attribute>		
		<xs:attribute name="id" type="rul:type_UUID" use="required"/>
    </xs:complexType>
        
    <xs:complexType name="type_channel">
		<xs:sequence>
			<xs:element name="ValueNames" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A mapping of values to names for use with encoded data like rig states.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="Name">
							<xs:complexType>
								<xs:attribute name="text" type="xs:string"/>
								<xs:attribute name="value"/>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attribute type="rul:type_UUID" name="rigStateSource">
						<xs:annotation>
							<xs:documentation>Identifies the source rig state dictionary for a rig state channel variable.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:string" name="alias" use="required">
			<xs:annotation>
				<xs:documentation>Token Identifier in condition processing. Should not have space and special characters
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="rul:type_variableScope" name="scope" use="required"/>		
		<xs:attribute name="type" use="optional">
			<xs:annotation>
				<xs:documentation>
					Default Value is Buffered
					Channel types include:
					- Historical: Load a historical channel from PetroVault based on the Start and End Index attributes
					- Preloaded: Load a predefined channel dataset a file located on the folder defined by the engine property PreloadedChannels
					- Buffered: Real-Time Rule level channel that keeps the values buffered until they are used by the given rule
					- Last Known Value: Real-Time glogal channel that keeps only the last know data point
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>			
                <xs:restriction base="xs:string">
                    <xs:enumeration value="historical" />
                    <xs:enumeration value="buffered" />
                    <xs:enumeration value="globalbuffered" />
                    <xs:enumeration value="lastknownvalue" />
                    <xs:enumeration value="preloaded" />
                </xs:restriction>
            </xs:simpleType>
		</xs:attribute>
		<xs:attribute name="sequence" type="xs:integer" use="optional"/>
		<xs:attribute name="valueUnit" type="xs:string" use="optional"/>
		<xs:attribute name="indexUnit" type="xs:string" use="optional"/>
		<xs:attribute name="indexType" use="optional">
			<xs:annotation>
				<xs:documentation>Index Type default value is long</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="long" />
                    <xs:enumeration value="double" />
                    <xs:enumeration value="datetime" />
                </xs:restriction>
            </xs:simpleType>		
		</xs:attribute>
		<xs:attribute name="startIndex" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Required for Historical Channels</xs:documentation>
			</xs:annotation>		
		</xs:attribute>
		<xs:attribute name="endIndex" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Required for Historical Channels</xs:documentation>
			</xs:annotation>		
		</xs:attribute>		
		<xs:attribute name="gap" type="xs:double" use="optional">
			<xs:annotation>
				<xs:documentation>Required for Historical, Preloaded or Buffered Channels</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="id" type="rul:type_UUID" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="type_alertClass">
    	<xs:attribute name="alertClassId" type="rul:type_UUID" use="required"/>
    	<xs:attribute type="xs:string" name="alias" use="required">
			<xs:annotation>
				<xs:documentation>Token Identifier in condition processing. Should not have space and special characters
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="type_parameters">
        <xs:annotation>
            <xs:documentation>Collection of parameter.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element type="rul:type_parameter" name="Param" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="type_parameter">
        <xs:annotation>
            <xs:documentation>a single of parameter.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="required"/>
                <xs:attribute type="xs:string" name="type" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="type_tlsSetting">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attribute type="xs:boolean" name="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="type_portNumber">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="65535"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="type_uiNotification">
        <xs:annotation>
            <xs:documentation>UI notification template</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="Title" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The title template. Should be one line.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Body" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The body template. Should be one or two lines.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="type_emailConnection">
        <xs:all minOccurs="0">
            <xs:element type="xs:string" name="Host" maxOccurs="1" minOccurs="1"/>
            <xs:element type="rul:type_portNumber" name="Port" maxOccurs="1" minOccurs="0"/>
            <xs:element type="xs:string" name="User" maxOccurs="1" minOccurs="0"/>
            <xs:element type="xs:string" name="Password" maxOccurs="1" minOccurs="0"/>
            <xs:element type="rul:type_tlsSetting" name="StartTLS" maxOccurs="1" minOccurs="0"/>
        </xs:all>
        <xs:attribute type="xs:boolean" name="ssl"/>
        <xs:attribute type="xs:boolean" name="sslCheckServerIdentity"/>
    </xs:complexType>
    <xs:group name="grp_email">
        <xs:annotation>
            <xs:documentation>The non-contextual common setting of Email.</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element type="rul:type_emailConnection" name="Connection" minOccurs="0"/>
            <xs:element type="rul:type_parameters" name="Params" minOccurs="0"/>
            <xs:element type="xs:string" name="From" minOccurs="0"/>
            <xs:element type="xs:string" name="To" minOccurs="0"/>
            <xs:element type="xs:string" name="CC" minOccurs="0"/>
            <xs:element type="xs:string" name="BCC" minOccurs="0"/>
            <xs:element type="xs:string" name="Subject" minOccurs="0"/>
            <xs:element type="xs:string" name="Body" minOccurs="0"/>
            <xs:element type="xs:string" name="ContentType" minOccurs="0"/>
            <xs:element type="rul:type_GuidAddressMappings" name="GuidMapping" minOccurs="0"/>
        </xs:all>
    </xs:group>
    <xs:simpleType name="type_GuidAddressMappings">
	    <xs:annotation>
	       <xs:documentation>
	       If recipient is guid, what kind of of email needed from Principal service to obtain. 
	       </xs:documentation>
	    </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Email" />
            <xs:enumeration value="SmsPhone" />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="type_properties">
    	<xs:choice minOccurs="0" maxOccurs="unbounded">
    		<xs:element name="Entry">
    			<xs:complexType>
    				<xs:simpleContent>
    					<xs:extension base="xs:string">
    						<xs:attribute name="key" type="xs:string" use="required"/>
    						<xs:attribute name="type" type="xs:string" use="optional"/>
    					</xs:extension>
    				</xs:simpleContent>
    			</xs:complexType>
    		</xs:element>
    	</xs:choice>
    </xs:complexType>
    
     <xs:complexType name="flow_BaseFlow">
        <xs:annotation>
            <xs:documentation>The basic type of the flow
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="xs:string" name="name" use="optional">
            <xs:annotation>
                <xs:documentation>The name identifier of flow in MBE engine. Better be unique. Note some child use UUID field instead, hence it is optional.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:boolean" name="load" use="optional">
            <xs:annotation>
                <xs:documentation>Indicating whether to load the flow into the engine or not.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" name="executionGroup" use="optional">
            <xs:annotation>
                <xs:documentation>The execution group for the flow.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" name="type" use="optional">
            <xs:annotation>
                <xs:documentation>The type for the flow.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" name="logger" use="optional">
            <xs:annotation>
                <xs:documentation>The suffix logger name for the flow ie FlowLogger_{logger}
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" name="logpath" use="optional">
            <xs:annotation>
                <xs:documentation>The prefix logger path ie /logs/
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>        
        <xs:attribute type="xs:string" name="resourceGroup" use="optional">
            <xs:annotation>
                <xs:documentation>The resource group the Resource (Flow in this case) is associated to
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>        
    </xs:complexType>   
	
	<xs:simpleType name="durationUnits">
       <xs:restriction base="xs:string">
	      <xs:enumeration value="seconds"/>
	      <xs:enumeration value="minutes"/>
	      <xs:enumeration value="hours"/>
	   </xs:restriction>
    </xs:simpleType>
    
	<xs:complexType name="duration">
	  <xs:simpleContent>
	    <xs:extension base="xs:long">
	      <xs:attribute name="unit" type="rul:durationUnits"/>
	    </xs:extension>
	  </xs:simpleContent>
	</xs:complexType>
</xs:schema>
