<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1463432151000</longProp>
        <longProp name="ThreadGroup.end_time">1463432151000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 /exemplar/exemplar/LoginEdit.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/exemplar/LoginEdit.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7 /exemplar/scripts/thirdparty/jquery.address-1.3.2.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="strict" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">strict</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/thirdparty/jquery.address-1.3.2.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22 /exemplar/scripts/analytics/googleTagFunctions.js;jsessionid=h4wogJu6MDRWhw84VO+97g__.wa01_dev01" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/analytics/googleTagFunctions.js;jsessionid=h4wogJu6MDRWhw84VO+97g__.wa01_dev01</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32 /exemplar/sgquoting/uhgKeepAliveOptions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgKeepAliveOptions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35 /exemplar/sgquoting/uhgKeepAliveOptions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgKeepAliveOptions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36 /" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0Q0O0M0K0I0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;&#x4;&#x14;&#xb;¨&#x82;£èh¹¶&#x11;Ú¨ µ&#x10;%=i{&#x2;E&#x4;&#x14;&#x9a;ó+ÚÏ­O¶/»*HH*&#x12;·&#x1b;BÁ$&#x2;&#x10;w&#x1;Ë§&gt;aÚ Y¨ç$6ôÒ&#x9e;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">ocsp.comodoca.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/ocsp-request</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29 /gtm.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">GTM-WN8BFH</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.googletagmanager.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/gtm.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38 /uespublic/prelogin/login.jsp" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TYPE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TYPE</stringProp>
                <stringProp name="Argument.value">33554433</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="REALMOID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">REALMOID</stringProp>
                <stringProp name="Argument.value">06-a7c0c3ca-b46f-47f4-b5d3-ba31b2e6ce26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAUTHREASON" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAUTHREASON</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAGENTNAME" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAGENTNAME</stringProp>
                <stringProp name="Argument.value">-SM-apsps0121--was</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="METHOD" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">METHOD</stringProp>
                <stringProp name="Argument.value">GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RCDSTRING" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RCDSTRING</stringProp>
                <stringProp name="Argument.value">-SM-%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432219799%3frandom--no--cache%3d1f3b3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TARGET</stringProp>
                <stringProp name="Argument.value">-SM-http%3a%2f%2fstage%2eunitedeservices%2ecom%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432219799%3frandom--no--cache%3d1f3b3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage.unitedeservices.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uespublic/prelogin/login.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39 /exemplar/topmenu/getMenuThemeData.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432220865</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/topmenu/getMenuThemeData.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41 /exemplar/topmenu/findTheme.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432221376</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/topmenu/findTheme.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42 /exemplar/scripts/grouppolicyadmin/jquery.faqhelper.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432221377</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/grouppolicyadmin/jquery.faqhelper.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44 /exemplar/scripts/grouppolicyadmin/jquery.gtmmanager.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432221881</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/grouppolicyadmin/jquery.gtmmanager.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37 /uespublic/prelogin/login.jsp" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TYPE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TYPE</stringProp>
                <stringProp name="Argument.value">33554433</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="REALMOID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">REALMOID</stringProp>
                <stringProp name="Argument.value">06-a7c0c3ca-b46f-47f4-b5d3-ba31b2e6ce26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAUTHREASON" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAUTHREASON</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAGENTNAME" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAGENTNAME</stringProp>
                <stringProp name="Argument.value">-SM-apsps0121--was</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="METHOD" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">METHOD</stringProp>
                <stringProp name="Argument.value">GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RCDSTRING" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RCDSTRING</stringProp>
                <stringProp name="Argument.value">-SM-%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432219570%3frandom--no--cache%3d1be10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TARGET</stringProp>
                <stringProp name="Argument.value">-SM-http%3a%2f%2fstage%2eunitedeservices%2ecom%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432219570%3frandom--no--cache%3d1be10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage.unitedeservices.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uespublic/prelogin/login.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40 /ocsp" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0I0G0E0C0A0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;&#x4;&#x14;òàjù&#x85;&#x8a;&#x1d;&#x8d;p&#x9b;I&#x19;#z©µ&#x1a;(~d&#x4;&#x14;JÝ&#x6;&#x16;&#x1b;¼öhµvõ&#x81;¶»b&#x1a;ºZ&#x81;/&#x2;&#x8;WH¦´P¢H.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients1.google.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ocsp</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/ocsp-request</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46 /exemplar/resources/styletemplates/styletemplates/insureadvantage/img/comparearrow.png%27)%20no-repeat;/js/applyTheme.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432226255</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/resources/styletemplates/styletemplates/insureadvantage/img/comparearrow.png%27)%20no-repeat;/js/applyTheme.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48 /exemplar/user/LoginSave.action;jsessionid=h4wogJu6MDRWhw84VO+97g__.wa01_dev01" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageModified" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">pageModified</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">bobbroker</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/user/LoginSave.action;jsessionid=h4wogJu6MDRWhw84VO+97g__.wa01_dev01</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49 /exemplar/user/GateKeeper.action" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/user/GateKeeper.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50 /exemplar/dashboard/Dashboard.action" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/dashboard/Dashboard.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/exemplar/LoginEdit.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="134 /exemplar/sgquoting/uhgKeepAliveOptions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgKeepAliveOptions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="133 /exemplar/dashboard/DashboardWidgetPolicy.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432243522</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/dashboard/DashboardWidgetPolicy.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="135 /exemplar/rest/common/sessiontoken" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/common/sessiontoken</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token-Requested" elementType="Header">
                <stringProp name="Header.name">X-Session-Token-Requested</stringProp>
                <stringProp name="Header.value">True</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="136 /exemplar/rest/ownerdelegation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/ownerdelegation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="139 /exemplar/widget/NewBusinessScoreCardGroup.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="widgetId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">widgetId</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userSettings" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">userSettings</stringProp>
                <stringProp name="Argument.value">{&quot;newBusinessScoreCardView&quot;:&quot;Producers&quot;,&quot;newBusinessScoreCardDateRange&quot;:&quot;14&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/widget/NewBusinessScoreCardGroup.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143 /exemplar/widget/QuoteActivityBody.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="widgetId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">widgetId</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userSettings" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">userSettings</stringProp>
                <stringProp name="Argument.value">%7B%22quoteActivityMarket%22%3A%222%22%2C%22quoteActivityCreateDate%22%3A%2230%22%2C%22display%22%3A%2210%22%7D</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432244320</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/widget/QuoteActivityBody.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="144 /exemplar/rest/ownerdelegation/2700" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/ownerdelegation/2700</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-306400290155436247</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="145 /uespublic/prelogin/login.jsp" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TYPE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TYPE</stringProp>
                <stringProp name="Argument.value">33554433</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="REALMOID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">REALMOID</stringProp>
                <stringProp name="Argument.value">06-a7c0c3ca-b46f-47f4-b5d3-ba31b2e6ce26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="SMAUTHREASON" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAUTHREASON</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="SMAGENTNAME" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAGENTNAME</stringProp>
                <stringProp name="Argument.value">-SM-apsps0121--was</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="METHOD" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">METHOD</stringProp>
                <stringProp name="Argument.value">GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="RCDSTRING" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RCDSTRING</stringProp>
                <stringProp name="Argument.value">-SM-%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432243747%3frandom--no--cache%3d1a0a9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="TARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TARGET</stringProp>
                <stringProp name="Argument.value">-SM-http%3a%2f%2fstage%2eunitedeservices%2ecom%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432243747%3frandom--no--cache%3d1a0a9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage.unitedeservices.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uespublic/prelogin/login.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="147 /exemplar/dashboard/NavCleanup.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nextAction" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">nextAction</stringProp>
                <stringProp name="Argument.value">/quoting/sg_quoting.html</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/dashboard/NavCleanup.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="148 /exemplar/quoting/sg_quoting.html" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/sg_quoting.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="151 /exemplar/rest/common/sessiontoken" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/common/sessiontoken</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token-Requested" elementType="Header">
                <stringProp name="Header.name">X-Session-Token-Requested</stringProp>
                <stringProp name="Header.value">True</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="152 /exemplar/ExemplarProjectId.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/ExemplarProjectId.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="153 /exemplar/sgquoting/UserRoleAction.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/UserRoleAction.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="140 /exemplar/widget/MessageCenterBody.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="widgetId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">widgetId</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userSettings" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">userSettings</stringProp>
                <stringProp name="Argument.value">{&quot;messageCenterView&quot;:&quot;0&quot;,&quot;messageCenterFrom&quot;:&quot;0&quot;,&quot;display&quot;:&quot;10&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/widget/MessageCenterBody.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/dashboard/Dashboard.action</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="168 /exemplar/rest/metabone/metadata" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">appId</stringProp>
                <stringProp name="Argument.value">sgquoting</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258471</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/metabone/metadata</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="172 /exemplar/sgquoting/profile.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258475</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/profile.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171 /exemplar/sgquoting/CaseMenu.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258474</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/CaseMenu.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="169 /exemplar/sgquoting/Actor.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258472</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Actor.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173 /exemplar/sgquoting/OwnerAssignment.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258476</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/OwnerAssignment.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="170 /exemplar/sgquoting/NavigationBar.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258473</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/NavigationBar.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN-1749533560140050320</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174 /exemplar/sgquoting/uhgKeepAliveOptions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgKeepAliveOptions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175 /exemplar/rest/ownerdelegation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/ownerdelegation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176 /exemplar/sgquoting/RetrieveHeaderLinks.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/RetrieveHeaderLinks.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180 /exemplar/rest/common/sessiontoken" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/common/sessiontoken</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token-Requested" elementType="Header">
                <stringProp name="Header.name">X-Session-Token-Requested</stringProp>
                <stringProp name="Header.value">True</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="181 /uespublic/prelogin/login.jsp" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TYPE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TYPE</stringProp>
                <stringProp name="Argument.value">33554433</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="REALMOID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">REALMOID</stringProp>
                <stringProp name="Argument.value">06-a7c0c3ca-b46f-47f4-b5d3-ba31b2e6ce26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAUTHREASON" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAUTHREASON</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAGENTNAME" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAGENTNAME</stringProp>
                <stringProp name="Argument.value">-SM-apsps0121--was</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="METHOD" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">METHOD</stringProp>
                <stringProp name="Argument.value">GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RCDSTRING" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RCDSTRING</stringProp>
                <stringProp name="Argument.value">-SM-%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432284158%3frandom--no--cache%3d199c8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TARGET</stringProp>
                <stringProp name="Argument.value">-SM-http%3a%2f%2fstage%2eunitedeservices%2ecom%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432284158%3frandom--no--cache%3d199c8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage.unitedeservices.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uespublic/prelogin/login.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177 /exemplar/vendors-shopping/fontawesome/fonts/fontawesome-webfont.woff" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="v" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">v</stringProp>
                <stringProp name="Argument.value">4.4.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/vendors-shopping/fontawesome/fonts/fontawesome-webfont.woff</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/client/uhg/css/sgquoting/main.css</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="182 /ocsp" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0I0G0E0C0A0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;&#x4;&#x14;òàjù&#x85;&#x8a;&#x1d;&#x8d;p&#x9b;I&#x19;#z©µ&#x1a;(~d&#x4;&#x14;JÝ&#x6;&#x16;&#x1b;¼öhµvõ&#x81;¶»b&#x1a;ºZ&#x81;/&#x2;&#x8;B&#x6;®¬¯í&#x96;ñ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients1.google.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ocsp</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/ocsp-request</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="185 /exemplar/rest/zipcodes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zipCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">zipCode</stringProp>
                <stringProp name="Argument.value">4300</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">4300</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/zipcodes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="186 /exemplar/rest/zipcodes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zipCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">zipCode</stringProp>
                <stringProp name="Argument.value">43009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">43009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/zipcodes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="184 /exemplar/rest/zipcodes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zipCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">zipCode</stringProp>
                <stringProp name="Argument.value">430</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">430</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/zipcodes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="183 /exemplar/rest/zipcodes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zipCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">zipCode</stringProp>
                <stringProp name="Argument.value">43</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">43</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/rest/zipcodes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="187 /exemplar/sgquoting/SearchSICCode.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SearchSICCode.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="188 /exemplar/sgquoting/SearchSICCode.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">734</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">734</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SearchSICCode.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="189 /exemplar/sgquoting/SearchSICCode.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">7349</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="query" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">query</stringProp>
                <stringProp name="Argument.value">7349</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SearchSICCode.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="190 /exemplar/sgquoting/profile.action" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;addressLine1&quot;:null,&quot;addressLine2&quot;:null,&quot;ageCalculationDate&quot;:null,&quot;associationTypeId&quot;:null,&quot;averageTotalNumber&quot;:null,&quot;caseName&quot;:&quot;Load a Mule&quot;,&quot;censusVerified&quot;:false,&quot;contactAddress1&quot;:null,&quot;contactAddress2&quot;:null,&quot;contactCity&quot;:null,&quot;contactCountyId&quot;:0,&quot;contactEmailAddress&quot;:null,&quot;contactFirstName&quot;:null,&quot;contactLastName&quot;:null,&quot;contactMiddleName&quot;:null,&quot;contactPhoneExt&quot;:null,&quot;contactPhoneNumber&quot;:null,&quot;contactPrefix&quot;:null,&quot;contactState&quot;:null,&quot;contactSuffix&quot;:null,&quot;contactTitle&quot;:null,&quot;contactZip&quot;:null,&quot;contactZipPlus&quot;:null,&quot;crmAccountID&quot;:null,&quot;custom&quot;:{&quot;totalEmployeesApplying&quot;:&quot;11&quot;,&quot;avgTotalEmployees&quot;:&quot;11&quot;},&quot;dental&quot;:false,&quot;doingBusinessAs&quot;:null,&quot;effectiveDate&quot;:&quot;06/01/2016&quot;,&quot;existingCase&quot;:false,&quot;fullTimeEquivalents&quot;:null,&quot;generalAgency&quot;:null,&quot;groupId&quot;:0,&quot;groupProfileData&quot;:null,&quot;id&quot;:null,&quot;life&quot;:false,&quot;medical&quot;:false,&quot;ownerAssignment&quot;:{&quot;accountRepSearch&quot;:false,&quot;agencies&quot;:[{&quot;key&quot;:&quot;-6&quot;,&quot;label&quot;:&quot;AA Agency&quot;,&quot;selected&quot;:false}],&quot;agencyId&quot;:0,&quot;agencyName&quot;:null,&quot;custom&quot;:{&quot;salesRepRequired&quot;:false,&quot;generalAgentSearch&quot;:true,&quot;generalAgentShow&quot;:true,&quot;agencySearch&quot;:true,&quot;rewardAccountId&quot;:null,&quot;pcis_id&quot;:null,&quot;generalAgentRequired&quot;:false},&quot;generalAgencies&quot;:{&quot;-6&quot;:[{&quot;key&quot;:&quot;-24&quot;,&quot;label&quot;:&quot;Max Mga&quot;,&quot;selected&quot;:false},{&quot;key&quot;:&quot;-14&quot;,&quot;label&quot;:&quot;Mga Connecture&quot;,&quot;selected&quot;:false}]},&quot;groupId&quot;:0,&quot;internalUser&quot;:false,&quot;mgaId&quot;:0,&quot;mgaName&quot;:null,&quot;multiAgencies&quot;:false,&quot;producer&quot;:true,&quot;producerDelete&quot;:false,&quot;producerId&quot;:-2,&quot;producerName&quot;:&quot;Bob B Broker&quot;,&quot;producerSearch&quot;:false,&quot;salesRepId&quot;:0,&quot;salesRepName&quot;:null,&quot;salesRepSearch&quot;:true},&quot;quoteId&quot;:0,&quot;quoteProfileData&quot;:null,&quot;quoteStatus&quot;:null,&quot;rateStructure&quot;:&quot;4_TIER_MED&quot;,&quot;releasedToSales&quot;:false,&quot;totalEligible&quot;:&quot;11&quot;,&quot;totalEmployed&quot;:null,&quot;userCompanyName&quot;:null,&quot;userEmail&quot;:&quot;gwalia@connecture.com&quot;,&quot;userFirstName&quot;:&quot;Bob&quot;,&quot;userLastName&quot;:&quot;Broker&quot;,&quot;userMiddleName&quot;:&quot;B&quot;,&quot;userNamePrefix&quot;:null,&quot;userNameSuffix&quot;:&quot;&quot;,&quot;userTitle&quot;:null,&quot;uw&quot;:false,&quot;isInternalUser&quot;:false,&quot;countyId&quot;:&quot;549&quot;,&quot;state&quot;:&quot;OH&quot;,&quot;county&quot;:&quot;Champaign&quot;,&quot;city&quot;:&quot;Cable&quot;,&quot;zipCode&quot;:&quot;43009&quot;,&quot;sicDescription&quot;:&quot;Building Cleaning &amp; Maintenance Services NEC&quot;,&quot;sicCode&quot;:&quot;7349&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/profile.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="192 /exemplar/sgquoting/ValidateQuote.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageCalledFrom" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">pageCalledFrom</stringProp>
                <stringProp name="Argument.value">profile</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258477</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/ValidateQuote.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="194 /exemplar/sgquoting/classes.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258479</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/classes.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="193 /exemplar/sgquoting/locations.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258478</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/locations.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="195 /exemplar/sgquoting/locations.action?quoteId=72839" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;addrLine1&quot;:null,&quot;addrLine2&quot;:null,&quot;addressId&quot;:631332,&quot;availableNetworks&quot;:[],&quot;city&quot;:null,&quot;classDataList&quot;:[],&quot;companyName&quot;:&quot;Load a Mule&quot;,&quot;contactAddressLine1&quot;:null,&quot;contactAddressLine2&quot;:null,&quot;contactChanged&quot;:false,&quot;contactCity&quot;:null,&quot;contactEmail&quot;:null,&quot;contactExists&quot;:null,&quot;contactFax&quot;:null,&quot;contactFirstName&quot;:null,&quot;contactId&quot;:157501,&quot;contactLastName&quot;:null,&quot;contactMiddleName&quot;:null,&quot;contactPhone&quot;:null,&quot;contactPhoneExt&quot;:null,&quot;contactPrefix&quot;:null,&quot;contactSameAddress&quot;:false,&quot;contactStateAbbr&quot;:null,&quot;contactSuffix&quot;:null,&quot;contactTitle&quot;:null,&quot;contactZip&quot;:null,&quot;counties&quot;:null,&quot;county&quot;:&quot;Champaign&quot;,&quot;countyFips&quot;:null,&quot;countyID&quot;:549,&quot;createSubgroup&quot;:false,&quot;custom&quot;:{&quot;totalEmployeesApplying&quot;:11,&quot;avgTotalEmployees&quot;:11,&quot;maxClassPerLocation&quot;:4,&quot;multipleLocationRadio&quot;:false,&quot;dentalPriorCoverage&quot;:false,&quot;totalEmpApplyingForAllLoc&quot;:11,&quot;showClassesSection&quot;:true,&quot;lifeAndDisabilityProducts&quot;:&quot;true&quot;},&quot;doingBusiness&quot;:null,&quot;employeeExistForLocation&quot;:false,&quot;employerId&quot;:0,&quot;isPrimary&quot;:true,&quot;listCounties&quot;:[],&quot;locationNetworkInfo&quot;:[],&quot;maxLocationsAllowed&quot;:21,&quot;networkIdentifierField&quot;:&quot;networkKey&quot;,&quot;networkSelected&quot;:false,&quot;plsvNetworkView&quot;:[],&quot;primaryContactShown&quot;:false,&quot;productLineResources&quot;:[{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;MED&quot;,&quot;longName&quot;:&quot;Medical&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:1},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;DEN&quot;,&quot;longName&quot;:&quot;Dental&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:2},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;VIS&quot;,&quot;longName&quot;:&quot;Vision&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:2},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;LTD&quot;,&quot;longName&quot;:&quot;Long Term Disability&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;N&quot;,&quot;sortOrder&quot;:4},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;STD&quot;,&quot;longName&quot;:&quot;Short Term Disability&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;N&quot;,&quot;sortOrder&quot;:5},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;LIFE_AD_D&quot;,&quot;longName&quot;:&quot;Life and AD&amp;D&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:6},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;SUPPDEPLIFE&quot;,&quot;longName&quot;:&quot;Supplemental Dependent Life&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:9},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;SUPPLIFE&quot;,&quot;longName&quot;:&quot;Supplemental Employee Life&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:8},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;SUPPDEPLIFE&quot;,&quot;longName&quot;:&quot;Supplemental Dependent Life&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:9},{&quot;custom&quot;:null,&quot;enabled&quot;:&quot;Y&quot;,&quot;hasPriorCoverage&quot;:&quot;N&quot;,&quot;hideNumberOfPlans&quot;:true,&quot;id&quot;:&quot;LFE&quot;,&quot;longName&quot;:&quot;Life&quot;,&quot;numberOfPlans&quot;:0,&quot;priorCarrierName&quot;:&quot;&quot;,&quot;productLineConfiguration&quot;:null,&quot;selected&quot;:&quot;Y&quot;,&quot;sortOrder&quot;:7}],&quot;quoteID&quot;:72839,&quot;selectedClasses&quot;:[],&quot;selectedClassesList&quot;:[],&quot;sicCode&quot;:&quot;7349&quot;,&quot;siteId&quot;:149385,&quot;siteName&quot;:&quot;Load a Mule&quot;,&quot;stateAbbr&quot;:&quot;OH&quot;,&quot;subscriberList&quot;:[],&quot;totalApplied&quot;:11,&quot;totalEligible&quot;:11,&quot;totalEmployees&quot;:null,&quot;totalEmployeesOnQuote&quot;:0,&quot;typeContactPhone&quot;:1008,&quot;zip&quot;:&quot;43009&quot;,&quot;zipPlus&quot;:null,&quot;allowCreateSubgroup&quot;:true,&quot;addPrimaryContact&quot;:false,&quot;haveMultipleLocations&quot;:false}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/locations.action?quoteId=72839</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="196 /exemplar/sgquoting/ValidateQuote.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageCalledFrom" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">pageCalledFrom</stringProp>
                <stringProp name="Argument.value">locations</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="validateEachSiteSeparately" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">validateEachSiteSeparately</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258480</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/ValidateQuote.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="197 /exemplar/sgquoting/ShowSalaryField.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258481</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/ShowSalaryField.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="198 /exemplar/sgquoting/ProductLines.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258482</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/ProductLines.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="199 /exemplar/vendors/ui-themes/default/assets/images/quoting/people-6b6b6b.png;" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/vendors/ui-themes/default/assets/images/quoting/people-6b6b6b.png;</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/client/uhg/css/sgquoting/main.css</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="200 /exemplar/sgquoting/ImportCensus.action?quoteId=72839&amp;appId=sgquoting&amp;entityConfig=defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/ImportCensus.action?quoteId=72839&amp;appId=sgquoting&amp;entityConfig=defaults</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="Census11EDI-Loop.xls" elementType="HTTPFileArg">
                <stringProp name="File.path">Census11EDI-Loop.xls</stringProp>
                <stringProp name="File.paramname">file</stringProp>
                <stringProp name="File.mimetype">application/vnd.ms-excel</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="201 /exemplar/sgquoting/UnavailableQuotePlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258483</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/UnavailableQuotePlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="207 /exemplar/sgquoting/SubgroupContributions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258490</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SubgroupContributions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="205 /exemplar/sgquoting/QuotePlansDual.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258488</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlansDual.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="204 /exemplar/sgquoting/QuotePlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258486</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="206 /exemplar/sgquoting/QuotePlanGroups.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258487</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlanGroups.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="208 /exemplar/sgquoting/FavoritePlanGroup.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258489</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/FavoritePlanGroup.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="203 /exemplar/sgquoting/Subgroups.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258485</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Subgroups.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="202 /exemplar/sgquoting/FilterConfig.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258484</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/FilterConfig.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="209 /exemplar/sgquoting/Plans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lazyRate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lazyRate</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dualProductsEnabled" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">dualProductsEnabled</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">productType</stringProp>
                <stringProp name="Argument.value">MED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258491</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Plans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="211 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;AC9U&quot;,&quot;AC9V&quot;,&quot;AC9S&quot;,&quot;AC9T&quot;,&quot;AC9R&quot;,&quot;AEEP&quot;,&quot;6V2&quot;,&quot;6V5&quot;,&quot;AC99&quot;,&quot;AC97&quot;,&quot;AC98&quot;,&quot;6W2&quot;,&quot;6VS&quot;,&quot;6VT&quot;,&quot;6VV&quot;,&quot;6VW&quot;,&quot;6VX&quot;,&quot;6VZ&quot;,&quot;AC9Y&quot;,&quot;AC9Z&quot;,&quot;AC9W&quot;,&quot;AC9X&quot;,&quot;AC84&quot;,&quot;AC85&quot;,&quot;AC83&quot;,&quot;AC81&quot;,&quot;AC79&quot;,&quot;AC77&quot;,&quot;AC76&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;AC9U&quot;:&quot;MED&quot;,&quot;AC9V&quot;:&quot;MED&quot;,&quot;AC9S&quot;:&quot;MED&quot;,&quot;AC9T&quot;:&quot;MED&quot;,&quot;AC9R&quot;:&quot;MED&quot;,&quot;AEEP&quot;:&quot;MED&quot;,&quot;6V2&quot;:&quot;MED&quot;,&quot;6V5&quot;:&quot;MED&quot;,&quot;AC99&quot;:&quot;MED&quot;,&quot;AC97&quot;:&quot;MED&quot;,&quot;AC98&quot;:&quot;MED&quot;,&quot;6W2&quot;:&quot;MED&quot;,&quot;6VS&quot;:&quot;MED&quot;,&quot;6VT&quot;:&quot;MED&quot;,&quot;6VV&quot;:&quot;MED&quot;,&quot;6VW&quot;:&quot;MED&quot;,&quot;6VX&quot;:&quot;MED&quot;,&quot;6VZ&quot;:&quot;MED&quot;,&quot;AC9Y&quot;:&quot;MED&quot;,&quot;AC9Z&quot;:&quot;MED&quot;,&quot;AC9W&quot;:&quot;MED&quot;,&quot;AC9X&quot;:&quot;MED&quot;,&quot;AC84&quot;:&quot;MED&quot;,&quot;AC85&quot;:&quot;MED&quot;,&quot;AC83&quot;:&quot;MED&quot;,&quot;AC81&quot;:&quot;MED&quot;,&quot;AC79&quot;:&quot;MED&quot;,&quot;AC77&quot;:&quot;MED&quot;,&quot;AC76&quot;:&quot;MED&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="213 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;AC9G&quot;,&quot;AC9H&quot;,&quot;AC9E&quot;,&quot;AC9F&quot;,&quot;AC9C&quot;,&quot;AC9D&quot;,&quot;AC9A&quot;,&quot;AC8Z&quot;,&quot;AC8X&quot;,&quot;AC8Y&quot;,&quot;AC8V&quot;,&quot;8H7&quot;,&quot;8I3&quot;,&quot;8I4&quot;,&quot;8I7&quot;,&quot;OVP&quot;,&quot;OW1&quot;,&quot;8I9&quot;,&quot;OW3&quot;,&quot;OVQ&quot;,&quot;OW2&quot;,&quot;OW6&quot;,&quot;OW9&quot;,&quot;OWL&quot;,&quot;OWT&quot;,&quot;8JD&quot;,&quot;8JE&quot;,&quot;8JJ&quot;,&quot;AEEO&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;AC9G&quot;:&quot;MED&quot;,&quot;AC9H&quot;:&quot;MED&quot;,&quot;AC9E&quot;:&quot;MED&quot;,&quot;AC9F&quot;:&quot;MED&quot;,&quot;AC9C&quot;:&quot;MED&quot;,&quot;AC9D&quot;:&quot;MED&quot;,&quot;AC9A&quot;:&quot;MED&quot;,&quot;AC8Z&quot;:&quot;MED&quot;,&quot;AC8X&quot;:&quot;MED&quot;,&quot;AC8Y&quot;:&quot;MED&quot;,&quot;AC8V&quot;:&quot;MED&quot;,&quot;8H7&quot;:&quot;MED&quot;,&quot;8I3&quot;:&quot;MED&quot;,&quot;8I4&quot;:&quot;MED&quot;,&quot;8I7&quot;:&quot;MED&quot;,&quot;OVP&quot;:&quot;MED&quot;,&quot;OW1&quot;:&quot;MED&quot;,&quot;8I9&quot;:&quot;MED&quot;,&quot;OW3&quot;:&quot;MED&quot;,&quot;OVQ&quot;:&quot;MED&quot;,&quot;OW2&quot;:&quot;MED&quot;,&quot;OW6&quot;:&quot;MED&quot;,&quot;OW9&quot;:&quot;MED&quot;,&quot;OWL&quot;:&quot;MED&quot;,&quot;OWT&quot;:&quot;MED&quot;,&quot;8JD&quot;:&quot;MED&quot;,&quot;8JE&quot;:&quot;MED&quot;,&quot;8JJ&quot;:&quot;MED&quot;,&quot;AEEO&quot;:&quot;MED&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="210 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;AC9D&quot;,&quot;70A&quot;,&quot;70B&quot;,&quot;ADAR&quot;,&quot;70E&quot;,&quot;ADAQ&quot;,&quot;ADAN&quot;,&quot;70G&quot;,&quot;ADAO&quot;,&quot;ADAL&quot;,&quot;70J&quot;,&quot;ADAJ&quot;,&quot;70K&quot;,&quot;7Z6&quot;,&quot;70L&quot;,&quot;ADAK&quot;,&quot;ADAH&quot;,&quot;ADAI&quot;,&quot;ADAF&quot;,&quot;6WW&quot;,&quot;ADAG&quot;,&quot;ADAE&quot;,&quot;70R&quot;,&quot;ADAC&quot;,&quot;ADAA&quot;,&quot;AC96&quot;,&quot;AC93&quot;,&quot;AC94&quot;,&quot;AC91&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;AC9D&quot;:&quot;MED&quot;,&quot;70A&quot;:&quot;MED&quot;,&quot;70B&quot;:&quot;MED&quot;,&quot;ADAR&quot;:&quot;MED&quot;,&quot;70E&quot;:&quot;MED&quot;,&quot;ADAQ&quot;:&quot;MED&quot;,&quot;ADAN&quot;:&quot;MED&quot;,&quot;70G&quot;:&quot;MED&quot;,&quot;ADAO&quot;:&quot;MED&quot;,&quot;ADAL&quot;:&quot;MED&quot;,&quot;70J&quot;:&quot;MED&quot;,&quot;ADAJ&quot;:&quot;MED&quot;,&quot;70K&quot;:&quot;MED&quot;,&quot;7Z6&quot;:&quot;MED&quot;,&quot;70L&quot;:&quot;MED&quot;,&quot;ADAK&quot;:&quot;MED&quot;,&quot;ADAH&quot;:&quot;MED&quot;,&quot;ADAI&quot;:&quot;MED&quot;,&quot;ADAF&quot;:&quot;MED&quot;,&quot;6WW&quot;:&quot;MED&quot;,&quot;ADAG&quot;:&quot;MED&quot;,&quot;ADAE&quot;:&quot;MED&quot;,&quot;70R&quot;:&quot;MED&quot;,&quot;ADAC&quot;:&quot;MED&quot;,&quot;ADAA&quot;:&quot;MED&quot;,&quot;AC96&quot;:&quot;MED&quot;,&quot;AC93&quot;:&quot;MED&quot;,&quot;AC94&quot;:&quot;MED&quot;,&quot;AC91&quot;:&quot;MED&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="212 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;AC8R&quot;,&quot;AC8Q&quot;,&quot;AC8N&quot;,&quot;AC8O&quot;,&quot;AC8L&quot;,&quot;AC8M&quot;,&quot;AC8J&quot;,&quot;AC8K&quot;,&quot;AC8H&quot;,&quot;AC8F&quot;,&quot;AC8G&quot;,&quot;AC8D&quot;,&quot;AC8E&quot;,&quot;AC8B&quot;,&quot;AC8C&quot;,&quot;AC8A&quot;,&quot;AC88&quot;,&quot;AC89&quot;,&quot;AC86&quot;,&quot;AC87&quot;,&quot;AC9Q&quot;,&quot;AC9O&quot;,&quot;AC9P&quot;,&quot;AC9M&quot;,&quot;AC9N&quot;,&quot;AC9K&quot;,&quot;AC9L&quot;,&quot;AC9I&quot;,&quot;AC9J&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;AC8R&quot;:&quot;MED&quot;,&quot;AC8Q&quot;:&quot;MED&quot;,&quot;AC8N&quot;:&quot;MED&quot;,&quot;AC8O&quot;:&quot;MED&quot;,&quot;AC8L&quot;:&quot;MED&quot;,&quot;AC8M&quot;:&quot;MED&quot;,&quot;AC8J&quot;:&quot;MED&quot;,&quot;AC8K&quot;:&quot;MED&quot;,&quot;AC8H&quot;:&quot;MED&quot;,&quot;AC8F&quot;:&quot;MED&quot;,&quot;AC8G&quot;:&quot;MED&quot;,&quot;AC8D&quot;:&quot;MED&quot;,&quot;AC8E&quot;:&quot;MED&quot;,&quot;AC8B&quot;:&quot;MED&quot;,&quot;AC8C&quot;:&quot;MED&quot;,&quot;AC8A&quot;:&quot;MED&quot;,&quot;AC88&quot;:&quot;MED&quot;,&quot;AC89&quot;:&quot;MED&quot;,&quot;AC86&quot;:&quot;MED&quot;,&quot;AC87&quot;:&quot;MED&quot;,&quot;AC9Q&quot;:&quot;MED&quot;,&quot;AC9O&quot;:&quot;MED&quot;,&quot;AC9P&quot;:&quot;MED&quot;,&quot;AC9M&quot;:&quot;MED&quot;,&quot;AC9N&quot;:&quot;MED&quot;,&quot;AC9K&quot;:&quot;MED&quot;,&quot;AC9L&quot;:&quot;MED&quot;,&quot;AC9I&quot;:&quot;MED&quot;,&quot;AC9J&quot;:&quot;MED&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="217 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;AC76&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;tier1CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$10&quot;},{&quot;benefitId&quot;:&quot;tier2CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$35&quot;},{&quot;benefitId&quot;:&quot;deductibleAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;tier3/4CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$60/$0&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;DEDUCTIBLE&quot;,&quot;benefitValue&quot;:&quot;$2,000/$6,000&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;COINSURANCE&quot;,&quot;benefitValue&quot;:&quot;80%/50%&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;OOP MAX&quot;,&quot;benefitValue&quot;:&quot;$5,000/$10,000&quot;},{&quot;benefitId&quot;:&quot;MedicalPlanCode&quot;,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;benefitValue&quot;:&quot;AC76&quot;},{&quot;benefitId&quot;:&quot;PlanCategoryDescription&quot;,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;benefitValue&quot;:&quot;HSA&quot;},{&quot;benefitId&quot;:&quot;MetalLevel&quot;,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;benefitValue&quot;:&quot;Silver&quot;},{&quot;benefitId&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;benefitValue&quot;:&quot;0.00 - 0.00&quot;},{&quot;benefitId&quot;:&quot;oisabitName&quot;,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;benefitValue&quot;:&quot;UnitedHealthcare&quot;},{&quot;benefitId&quot;:&quot;ProductType&quot;,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;benefitValue&quot;:&quot;CHOICE PLUS&quot;},{&quot;benefitId&quot;:&quot;LicenseType&quot;,&quot;displayName&quot;:&quot;License Type&quot;,&quot;benefitValue&quot;:&quot;INS&quot;},{&quot;benefitId&quot;:&quot;PhysicianCopayAmount&quot;,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;benefitValue&quot;:&quot;80%&quot;},{&quot;benefitId&quot;:&quot;SpecialistCopayAmount&quot;,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;InNetUccCopayAmount&quot;,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$2,000&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$4,000&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$6,000&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$12,000&quot;},{&quot;benefitId&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;80%&quot;},{&quot;benefitId&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;50%&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$5,000&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$6,850&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$10,000&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-Network family Max&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;benefitValue&quot;:&quot;Y&quot;},{&quot;benefitId&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;benefitValue&quot;:&quot;N&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitValue&quot;:&quot;$20,000&quot;},{&quot;benefitId&quot;:&quot;rxPlanCode&quot;,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;benefitValue&quot;:&quot;NS&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;80%&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;80%&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;platformIdentifier&quot;,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;benefitValue&quot;:&quot;PRIME&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;80%&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;RxPlan&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;Y&quot;}],&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;productLineCode&quot;:&quot;MED&quot;,&quot;locationId&quot;:149385,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;rxPlanOptions&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Medical&quot;,&quot;planName&quot;:&quot;AC76&quot;,&quot;metalTier&quot;:&quot;Silver&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;AC76&quot;,&quot;actualBenefits&quot;:[],&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;AC76&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5646.63,&quot;planRate&quot;:5646.63,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5646.63},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1026.66,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:513.33,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1026.66,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1539.99,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:513.33,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1026.66,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1026.66,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1539.99,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:[],&quot;custom&quot;:{&quot;rateMethodNames&quot;:[&quot;4 TIER COMPOSITE ACR&quot;,&quot;AGE BANDED FOR ACR&quot;],&quot;prodLineKey&quot;:&quot;MED&quot;,&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1026.66,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:513.33,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1026.66,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1539.99,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:513.33,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1026.66,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1026.66,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1539.99,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5646.63,&quot;planRate&quot;:5646.63,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5646.63},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:513.33,&quot;planRate&quot;:513.33,&quot;riderRate&quot;:0,&quot;totalRate&quot;:513.33},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;ageRatedPlanInfo&quot;:[],&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planIdSuffix&quot;:&quot;CHOICE PLUS&quot;,&quot;benefitsByCategory&quot;:[{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC76&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC76&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC76&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Medical&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;rxPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Rx Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;rxPlanCode&quot;,&quot;internalCode&quot;:&quot;rxPlanCode&quot;,&quot;selectedValue&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Rx Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;packageType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Package Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Package Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Package Type&quot;}],&quot;internalCode&quot;:&quot;Plan Information&quot;,&quot;name&quot;:&quot;Plan Information&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC76&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC76&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC76&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;HSA&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Category&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;internalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;selectedValue&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Category&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;0.00 - 0.00&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;0.00 - 0.00&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;internalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;selectedValue&quot;:&quot;0.00 - 0.00&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;oisabitName&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;UnitedHealthcare&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;oisabitName&quot;,&quot;internalCode&quot;:&quot;oisabitName&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;ProductType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;CHOICE PLUS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Product Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;ProductType&quot;,&quot;internalCode&quot;:&quot;ProductType&quot;,&quot;selectedValue&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Product Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;LicenseType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;License Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;License Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;LicenseType&quot;,&quot;internalCode&quot;:&quot;LicenseType&quot;,&quot;selectedValue&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;License Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Embedded Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Embedded Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;platformIdentifier&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIME&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Platform Identifier&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;platformIdentifier&quot;,&quot;internalCode&quot;:&quot;platformIdentifier&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Platform Identifier&quot;}],&quot;internalCode&quot;:&quot;Key Benefits&quot;,&quot;name&quot;:&quot;Key Benefits&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;80%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT OUT NET AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;internalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST OUT NET CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;80%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;50%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;50%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;50%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;80%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;80%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;80%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;50%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;50%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;50%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$2,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$2,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$2,000&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$6,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$6,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$6,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$4,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$4,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$4,000&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$12,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$12,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$12,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$5,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$5,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$5,000&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$10,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$10,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$10,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$6,850&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$6,850&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$6,850&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$20,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$20,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$20,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PharmacyCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Copay&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Pharmacy Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Copay&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;deductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;deductibleAmount&quot;,&quot;internalCode&quot;:&quot;deductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Deductible&quot;}],&quot;internalCode&quot;:&quot;Plan Highlights&quot;,&quot;name&quot;:&quot;Plan Highlights&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NS&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:null},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plans&quot;}],&quot;internalCode&quot;:&quot;Rx Plans&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier1CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$10&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier2CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$35&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$60/$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plan Benefit&quot;}],&quot;internalCode&quot;:&quot;Rx Plan Benefits&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MonthlyPremium&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Total Monthly Premium&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Total Monthly Premium&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Total Monthly Premium&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;PCP&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family&quot;}],&quot;internalCode&quot;:&quot;DEFAULT&quot;,&quot;name&quot;:&quot;DEFAULT&quot;,&quot;sortOrder&quot;:0}],&quot;planStatus&quot;:null,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;SA&quot;:&quot;00&quot;,&quot;rateId&quot;:null,&quot;otAreaIndicator&quot;:&quot;I&quot;,&quot;outOfAreaAttr&quot;:&quot;I&quot;,&quot;MedicalHSAEligibleInd&quot;:&quot;Y&quot;,&quot;planCategoryDescription&quot;:&quot;HSA&quot;,&quot;PolicyCalendarYearCode&quot;:&quot;B&quot;,&quot;StateMandatedPlanInd&quot;:&quot;N&quot;,&quot;pcpRequiredInd&quot;:&quot;N&quot;,&quot;optionalRiders&quot;:[],&quot;OI&quot;:&quot;01&quot;,&quot;id&quot;:null,&quot;productType&quot;:&quot;MED&quot;,&quot;planFundingDescription&quot;:null,&quot;planRiders&quot;:[],&quot;defaultRxPlanCode&quot;:&quot;NS&quot;,&quot;medicalPlanType&quot;:&quot;CHOICE PLUS&quot;,&quot;planType&quot;:null,&quot;defaultRxPlanData&quot;:{&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialityPlanInd&quot;:&quot;Y&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;},&quot;planFamilyList&quot;:[{&quot;externalId&quot;:&quot;OH015&quot;,&quot;familyName&quot;:&quot;OH015&quot;,&quot;key&quot;:null},{&quot;externalId&quot;:&quot;OH016&quot;,&quot;familyName&quot;:&quot;OH016&quot;,&quot;key&quot;:null}],&quot;HraEligInd&quot;:&quot;N&quot;,&quot;medicalPlanCode&quot;:&quot;AC76&quot;,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;productInsuranceLicenseType&quot;:&quot;INS&quot;,&quot;preferredPlanInd&quot;:true,&quot;stateMandatedPlanInd&quot;:&quot;N&quot;,&quot;oisabitId&quot;:277465,&quot;hraPlanContributionMaxAmount&quot;:&quot;0.00 - 0.00&quot;,&quot;hraPlanContributionMinAmount&quot;:&quot;0.00&quot;,&quot;specialityPlanInd&quot;:&quot;SM&quot;,&quot;policyCalendarYearCode&quot;:&quot;B&quot;,&quot;alternateRxPlanData&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}]}}},&quot;planGroupId&quot;:&quot;OH015&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="218 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;AC77&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;tier1CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$10&quot;},{&quot;benefitId&quot;:&quot;tier2CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$35&quot;},{&quot;benefitId&quot;:&quot;deductibleAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;tier3/4CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$60/$0&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;DEDUCTIBLE&quot;,&quot;benefitValue&quot;:&quot;$2,600/$7,800&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;COINSURANCE&quot;,&quot;benefitValue&quot;:&quot;100%/70%&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;OOP MAX&quot;,&quot;benefitValue&quot;:&quot;$5,500/$11,000&quot;},{&quot;benefitId&quot;:&quot;MedicalPlanCode&quot;,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;benefitValue&quot;:&quot;AC77&quot;},{&quot;benefitId&quot;:&quot;PlanCategoryDescription&quot;,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;benefitValue&quot;:&quot;HSA&quot;},{&quot;benefitId&quot;:&quot;MetalLevel&quot;,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;benefitValue&quot;:&quot;Silver&quot;},{&quot;benefitId&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;benefitValue&quot;:&quot;0.00 - 0.00&quot;},{&quot;benefitId&quot;:&quot;oisabitName&quot;,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;benefitValue&quot;:&quot;UnitedHealthcare&quot;},{&quot;benefitId&quot;:&quot;ProductType&quot;,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;benefitValue&quot;:&quot;CHOICE PLUS&quot;},{&quot;benefitId&quot;:&quot;LicenseType&quot;,&quot;displayName&quot;:&quot;License Type&quot;,&quot;benefitValue&quot;:&quot;INS&quot;},{&quot;benefitId&quot;:&quot;PhysicianCopayAmount&quot;,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;benefitValue&quot;:&quot;$30&quot;},{&quot;benefitId&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;SpecialistCopayAmount&quot;,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;benefitValue&quot;:&quot;$60&quot;},{&quot;benefitId&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;benefitValue&quot;:&quot;$250&quot;},{&quot;benefitId&quot;:&quot;InNetUccCopayAmount&quot;,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;benefitValue&quot;:&quot;$100&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$2,600&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$5,200&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$7,800&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$15,600&quot;},{&quot;benefitId&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;70%&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$5,500&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$6,850&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$11,000&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-Network family Max&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;benefitValue&quot;:&quot;Y&quot;},{&quot;benefitId&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;benefitValue&quot;:&quot;N&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitValue&quot;:&quot;$22,000&quot;},{&quot;benefitId&quot;:&quot;rxPlanCode&quot;,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;benefitValue&quot;:&quot;NS&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;platformIdentifier&quot;,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;benefitValue&quot;:&quot;PRIME&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;RxPlan&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;Y&quot;}],&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;productLineCode&quot;:&quot;MED&quot;,&quot;locationId&quot;:149385,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;rxPlanOptions&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Medical&quot;,&quot;planName&quot;:&quot;AC77&quot;,&quot;metalTier&quot;:&quot;Silver&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;AC77&quot;,&quot;actualBenefits&quot;:[],&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;AC77&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5674.57,&quot;planRate&quot;:5674.57,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5674.57},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1031.74,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:515.87,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1031.74,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1547.61,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:515.87,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1031.74,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1031.74,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1547.61,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:[],&quot;custom&quot;:{&quot;rateMethodNames&quot;:[&quot;4 TIER COMPOSITE ACR&quot;,&quot;AGE BANDED FOR ACR&quot;],&quot;prodLineKey&quot;:&quot;MED&quot;,&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1031.74,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:515.87,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1031.74,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1547.61,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:515.87,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1031.74,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1031.74,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1547.61,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5674.57,&quot;planRate&quot;:5674.57,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5674.57},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:515.87,&quot;planRate&quot;:515.87,&quot;riderRate&quot;:0,&quot;totalRate&quot;:515.87},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;ageRatedPlanInfo&quot;:[],&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planIdSuffix&quot;:&quot;CHOICE PLUS&quot;,&quot;benefitsByCategory&quot;:[{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC77&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC77&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC77&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Medical&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;rxPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Rx Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;rxPlanCode&quot;,&quot;internalCode&quot;:&quot;rxPlanCode&quot;,&quot;selectedValue&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Rx Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;packageType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Package Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Package Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Package Type&quot;}],&quot;internalCode&quot;:&quot;Plan Information&quot;,&quot;name&quot;:&quot;Plan Information&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC77&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC77&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC77&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;HSA&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Category&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;internalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;selectedValue&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Category&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;0.00 - 0.00&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;0.00 - 0.00&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;internalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;selectedValue&quot;:&quot;0.00 - 0.00&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;oisabitName&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;UnitedHealthcare&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;oisabitName&quot;,&quot;internalCode&quot;:&quot;oisabitName&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;ProductType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;CHOICE PLUS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Product Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;ProductType&quot;,&quot;internalCode&quot;:&quot;ProductType&quot;,&quot;selectedValue&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Product Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;LicenseType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;License Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;License Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;LicenseType&quot;,&quot;internalCode&quot;:&quot;LicenseType&quot;,&quot;selectedValue&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;License Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Embedded Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Embedded Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;platformIdentifier&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIME&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Platform Identifier&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;platformIdentifier&quot;,&quot;internalCode&quot;:&quot;platformIdentifier&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Platform Identifier&quot;}],&quot;internalCode&quot;:&quot;Key Benefits&quot;,&quot;name&quot;:&quot;Key Benefits&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30 per visit&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30 per visit&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;$30 per visit&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT OUT NET AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$60&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$60&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;internalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$60&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST OUT NET CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;70%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;70%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$2,600&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$2,600&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$2,600&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$7,800&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$7,800&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$7,800&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$5,200&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$5,200&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$5,200&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$15,600&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$15,600&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$15,600&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$5,500&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$5,500&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$5,500&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$11,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$11,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$11,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$6,850&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$6,850&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$6,850&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$22,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$22,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$22,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$250&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$250&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$100&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$100&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PharmacyCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Copay&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Pharmacy Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Copay&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;deductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;deductibleAmount&quot;,&quot;internalCode&quot;:&quot;deductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Deductible&quot;}],&quot;internalCode&quot;:&quot;Plan Highlights&quot;,&quot;name&quot;:&quot;Plan Highlights&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NS&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:null},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plans&quot;}],&quot;internalCode&quot;:&quot;Rx Plans&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier1CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$10&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier2CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$35&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$60/$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plan Benefit&quot;}],&quot;internalCode&quot;:&quot;Rx Plan Benefits&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MonthlyPremium&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Total Monthly Premium&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Total Monthly Premium&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Total Monthly Premium&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;PCP&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family&quot;}],&quot;internalCode&quot;:&quot;DEFAULT&quot;,&quot;name&quot;:&quot;DEFAULT&quot;,&quot;sortOrder&quot;:0}],&quot;planStatus&quot;:null,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;SA&quot;:&quot;00&quot;,&quot;rateId&quot;:null,&quot;otAreaIndicator&quot;:&quot;I&quot;,&quot;outOfAreaAttr&quot;:&quot;I&quot;,&quot;MedicalHSAEligibleInd&quot;:&quot;Y&quot;,&quot;planCategoryDescription&quot;:&quot;HSA&quot;,&quot;PolicyCalendarYearCode&quot;:&quot;B&quot;,&quot;StateMandatedPlanInd&quot;:&quot;N&quot;,&quot;pcpRequiredInd&quot;:&quot;N&quot;,&quot;optionalRiders&quot;:[],&quot;OI&quot;:&quot;01&quot;,&quot;id&quot;:null,&quot;splitCopayInd&quot;:&quot;S&quot;,&quot;productType&quot;:&quot;MED&quot;,&quot;planFundingDescription&quot;:null,&quot;planRiders&quot;:[],&quot;defaultRxPlanCode&quot;:&quot;NS&quot;,&quot;medicalPlanType&quot;:&quot;CHOICE PLUS&quot;,&quot;planType&quot;:null,&quot;defaultRxPlanData&quot;:{&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialityPlanInd&quot;:&quot;Y&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;},&quot;planFamilyList&quot;:[{&quot;externalId&quot;:&quot;OH015&quot;,&quot;familyName&quot;:&quot;OH015&quot;,&quot;key&quot;:null},{&quot;externalId&quot;:&quot;OH016&quot;,&quot;familyName&quot;:&quot;OH016&quot;,&quot;key&quot;:null}],&quot;HraEligInd&quot;:&quot;N&quot;,&quot;medicalPlanCode&quot;:&quot;AC77&quot;,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;productInsuranceLicenseType&quot;:&quot;INS&quot;,&quot;preferredPlanInd&quot;:true,&quot;stateMandatedPlanInd&quot;:&quot;N&quot;,&quot;oisabitId&quot;:277465,&quot;hraPlanContributionMaxAmount&quot;:&quot;0.00 - 0.00&quot;,&quot;hraPlanContributionMinAmount&quot;:&quot;0.00&quot;,&quot;specialityPlanInd&quot;:&quot;SM&quot;,&quot;policyCalendarYearCode&quot;:&quot;B&quot;,&quot;alternateRxPlanData&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}]}}},&quot;planGroupId&quot;:&quot;OH015&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="219 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;AC8F&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;tier1CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$10&quot;},{&quot;benefitId&quot;:&quot;tier2CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$35&quot;},{&quot;benefitId&quot;:&quot;deductibleAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;tier3/4CopayAmount&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;$60/$0&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;DEDUCTIBLE&quot;,&quot;benefitValue&quot;:&quot;$3,000/$9,000&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;COINSURANCE&quot;,&quot;benefitValue&quot;:&quot;100%/70%&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;OOP MAX&quot;,&quot;benefitValue&quot;:&quot;$6,250/$12,500&quot;},{&quot;benefitId&quot;:&quot;MedicalPlanCode&quot;,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;benefitValue&quot;:&quot;AC8F&quot;},{&quot;benefitId&quot;:&quot;PlanCategoryDescription&quot;,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;benefitValue&quot;:&quot;HSA&quot;},{&quot;benefitId&quot;:&quot;MetalLevel&quot;,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;benefitValue&quot;:&quot;Silver&quot;},{&quot;benefitId&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;benefitValue&quot;:&quot;50.00 - 150.00&quot;},{&quot;benefitId&quot;:&quot;oisabitName&quot;,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;benefitValue&quot;:&quot;UnitedHealthcare&quot;},{&quot;benefitId&quot;:&quot;ProductType&quot;,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;benefitValue&quot;:&quot;CHOICE PLUS&quot;},{&quot;benefitId&quot;:&quot;LicenseType&quot;,&quot;displayName&quot;:&quot;License Type&quot;,&quot;benefitValue&quot;:&quot;INS&quot;},{&quot;benefitId&quot;:&quot;PhysicianCopayAmount&quot;,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;benefitValue&quot;:&quot;$30&quot;},{&quot;benefitId&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;SpecialistCopayAmount&quot;,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;benefitValue&quot;:&quot;$60&quot;},{&quot;benefitId&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;benefitValue&quot;:&quot;$250&quot;},{&quot;benefitId&quot;:&quot;InNetUccCopayAmount&quot;,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;benefitValue&quot;:&quot;$100&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$3,000&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$6,000&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$9,000&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$18,000&quot;},{&quot;benefitId&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;benefitValue&quot;:&quot;70%&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$6,250&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$12,500&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;benefitValue&quot;:&quot;$12,500&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-Network family Max&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;benefitValue&quot;:&quot;Y&quot;},{&quot;benefitId&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;benefitValue&quot;:&quot;Y&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitValue&quot;:&quot;$25,000&quot;},{&quot;benefitId&quot;:&quot;rxPlanCode&quot;,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;benefitValue&quot;:&quot;NS&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;platformIdentifier&quot;,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;benefitValue&quot;:&quot;PRIME&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$30 per visit&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;benefitValue&quot;:&quot;&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;benefitValue&quot;:&quot;0&quot;},{&quot;benefitId&quot;:&quot;RxPlan&quot;,&quot;displayName&quot;:&quot;NS&quot;,&quot;benefitValue&quot;:&quot;Y&quot;}],&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;productLineCode&quot;:&quot;MED&quot;,&quot;locationId&quot;:149385,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;rxPlanOptions&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Medical&quot;,&quot;planName&quot;:&quot;AC8F&quot;,&quot;metalTier&quot;:&quot;Silver&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;AC8F&quot;,&quot;actualBenefits&quot;:[],&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;AC8F&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5696.68,&quot;planRate&quot;:5696.68,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5696.68},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1035.76,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:517.88,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1035.76,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1553.64,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:517.88,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1035.76,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1035.76,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1553.64,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:[],&quot;custom&quot;:{&quot;rateMethodNames&quot;:[&quot;4 TIER COMPOSITE ACR&quot;,&quot;AGE BANDED FOR ACR&quot;],&quot;prodLineKey&quot;:&quot;MED&quot;,&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:1035.76,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:517.88,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:1035.76,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:1553.64,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:517.88,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1035.76,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1035.76,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:1553.64,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:5696.68,&quot;planRate&quot;:5696.68,&quot;riderRate&quot;:0,&quot;totalRate&quot;:5696.68},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:517.88,&quot;planRate&quot;:517.88,&quot;riderRate&quot;:0,&quot;totalRate&quot;:517.88},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;ageRatedPlanInfo&quot;:[],&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;LimitedPlanDistributionInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;StateMandatedPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;OtAreaInd&quot;,&quot;indicatorValue&quot;:&quot;I&quot;},{&quot;indicatorName&quot;:&quot;PlanStandAloneInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;MedicalHSAEligibleInd&quot;,&quot;indicatorValue&quot;:&quot;Y&quot;},{&quot;indicatorName&quot;:&quot;HraEligInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;ThreeTierBenefitInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;HraPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;EdgePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;isTieredPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;CatalystOrCatalystChoicePlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;pcpRequiredInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planIdSuffix&quot;:&quot;CHOICE PLUS&quot;,&quot;benefitsByCategory&quot;:[{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC8F&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC8F&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC8F&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Medical&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;rxPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Rx Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Rx Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;rxPlanCode&quot;,&quot;internalCode&quot;:&quot;rxPlanCode&quot;,&quot;selectedValue&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Rx Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;packageType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Package Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Package Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Package Type&quot;}],&quot;internalCode&quot;:&quot;Plan Information&quot;,&quot;name&quot;:&quot;Plan Information&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MedicalPlanCode&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;AC8F&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;AC8F&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Code&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;internalCode&quot;:&quot;MedicalPlanCode&quot;,&quot;selectedValue&quot;:&quot;AC8F&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Code&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;HSA&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Category&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Category&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;internalCode&quot;:&quot;PlanCategoryDescription&quot;,&quot;selectedValue&quot;:&quot;HSA&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Category&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MetalLevel&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Silver&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Metallic Level&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Metallic Level&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;MetalLevel&quot;,&quot;internalCode&quot;:&quot;MetalLevel&quot;,&quot;selectedValue&quot;:&quot;&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Metallic Level&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;50.00 - 150.00&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;50.00 - 150.00&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;ER Contribution (HSA/HRA)&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;internalCode&quot;:&quot;EmployerContributionHRAHSA&quot;,&quot;selectedValue&quot;:&quot;50.00 - 150.00&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Employer Contribution HRA/HSA&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;oisabitName&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;UnitedHealthcare&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Plan Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Plan Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;oisabitName&quot;,&quot;internalCode&quot;:&quot;oisabitName&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Plan Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;ProductType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;CHOICE PLUS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Product Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;ProductType&quot;,&quot;internalCode&quot;:&quot;ProductType&quot;,&quot;selectedValue&quot;:&quot;CHOICE PLUS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Product Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;LicenseType&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INS&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;License Type&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;License Type&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;LicenseType&quot;,&quot;internalCode&quot;:&quot;LicenseType&quot;,&quot;selectedValue&quot;:&quot;INS&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;License Type&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Combined Med &amp; Rx Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;internalCode&quot;:&quot;CombinedMedRxDeductibleOOPInd&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Combined Med &amp; Rx Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Embedded Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Embedded Deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;internalCode&quot;:&quot;NonEmdeddedDedandOOP&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Embedded Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;platformIdentifier&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIME&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Platform Identifier&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Platform Identifier&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;platformIdentifier&quot;,&quot;internalCode&quot;:&quot;platformIdentifier&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Platform Identifier&quot;}],&quot;internalCode&quot;:&quot;Key Benefits&quot;,&quot;name&quot;:&quot;Key Benefits&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkPcpOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30 per visit&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30 per visit&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT TIER1 AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;$30 per visit&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PRIMARY CARE VISIT CO PAYMENT OUT NET AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Primary Care Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkSpecOfficeVisitCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST TIER1 CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$60&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$60&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Specialist Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;internalCode&quot;:&quot;SpecialistCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$60&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;SPECIALIST OUT NET CO PAY AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Specialist Visit Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkUhcInnBasePhysicianCoins&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;PHYSICIAN OFFICE TIER1 CO INSURANCE PCT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:&quot;0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;PhysicianOfficeInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;70%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Physician Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;100%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalInNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;100%&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;70%&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network Coinsurance&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;internalCode&quot;:&quot;HospitalOutNetCoInsurancePct&quot;,&quot;selectedValue&quot;:&quot;70%&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Hospital or Facility Co-insurance (plan pays)&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;INDIVIDUAL TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnIndivDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$3,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$3,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetdeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$3,000&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$9,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$9,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$9,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FAMILY TIER1 DEDUCTIBLE AMOUNT&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkInnFamDed&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$6,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$6,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$6,000&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$18,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$18,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$18,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Deductible&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Individual Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkIndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$6,250&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$6,250&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$6,250&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$12,500&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$12,500&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Out of Network single Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;IndividualOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$12,500&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Individual Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family Tier1 OOP Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;DesignatedNetworkFamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$12,500&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$12,500&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;In-network family Out-of-pocket Max&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyInNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$12,500&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$25,000&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$25,000&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;internalCode&quot;:&quot;FamilyOutNetOopMaxAmount&quot;,&quot;selectedValue&quot;:&quot;$25,000&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family Out of Pocket Maximum&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$250&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$250&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;internalCode&quot;:&quot;EmerVisitCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$250&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Emergency Room Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Emergency Room Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$100&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$100&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;internalCode&quot;:&quot;InNetUccCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$100&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NotExisting&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Urgent Care Out Net&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Urgent Care Co-payment&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PharmacyCopay&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Copay&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Pharmacy Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Copay&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;deductibleAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Pharmacy Deductible&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;deductibleAmount&quot;,&quot;internalCode&quot;:&quot;deductibleAmount&quot;,&quot;selectedValue&quot;:&quot;$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Pharmacy Deductible&quot;}],&quot;internalCode&quot;:&quot;Plan Highlights&quot;,&quot;name&quot;:&quot;Plan Highlights&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;NS&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Y&quot;,&quot;numericValue&quot;:0}],&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:null},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;NS&quot;,&quot;internalCode&quot;:&quot;NS&quot;,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plans&quot;}],&quot;internalCode&quot;:&quot;Rx Plans&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier1CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$10&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier1CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$10&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier2CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$35&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier2CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$35&quot;,&quot;sortOrder&quot;:0},{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$60/$0&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;RX Plan Benefit&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;NS&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;internalCode&quot;:&quot;tier3/4CopayAmount&quot;,&quot;selectedValue&quot;:&quot;$60/$0&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;RX Plan Benefit&quot;}],&quot;internalCode&quot;:&quot;Rx Plan Benefits&quot;,&quot;name&quot;:&quot;Rx Plans&quot;,&quot;sortOrder&quot;:0},{&quot;benefits&quot;:[],&quot;customAttributes&quot;:null,&quot;empty&quot;:true,&quot;groupedBenefits&quot;:[{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;MonthlyPremium&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Total Monthly Premium&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Total Monthly Premium&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Total Monthly Premium&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;$30&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;PCP&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Office Copay&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;internalCode&quot;:&quot;PhysicianCopayAmount&quot;,&quot;selectedValue&quot;:&quot;$30&quot;,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;PCP&quot;},{&quot;benefits&quot;:[{&quot;alternateName&quot;:null,&quot;benefitCode&quot;:&quot;FamilyOutNetDeductibleMaxAmount&quot;,&quot;benefitId&quot;:null,&quot;benefitValueSets&quot;:[{&quot;benefitValueKeys&quot;:[null],&quot;benefitValueRanges&quot;:[],&quot;benefitValueSetId&quot;:null,&quot;benefitValues&quot;:[{&quot;alternateName&quot;:null,&quot;benefitValueId&quot;:null,&quot;benefitValueTypeCode&quot;:null,&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;N/A&quot;,&quot;numericValue&quot;:null}],&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;sortOrder&quot;:0}],&quot;benefitValueTypeGroup&quot;:{&quot;benefitValueTypeGroupId&quot;:null,&quot;benefitValueTypes&quot;:[],&quot;defaultSelection&quot;:false,&quot;name&quot;:&quot;Family&quot;},&quot;customAttributes&quot;:null,&quot;description&quot;:null,&quot;displayName&quot;:&quot;Family&quot;,&quot;empty&quot;:false,&quot;externalCode&quot;:null,&quot;internalCode&quot;:null,&quot;selectedValue&quot;:null,&quot;sortOrder&quot;:0}],&quot;name&quot;:&quot;Family&quot;}],&quot;internalCode&quot;:&quot;DEFAULT&quot;,&quot;name&quot;:&quot;DEFAULT&quot;,&quot;sortOrder&quot;:0}],&quot;planStatus&quot;:null,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;platformIdentifier&quot;:&quot;PRIME&quot;,&quot;SA&quot;:&quot;00&quot;,&quot;rateId&quot;:null,&quot;otAreaIndicator&quot;:&quot;I&quot;,&quot;outOfAreaAttr&quot;:&quot;I&quot;,&quot;MedicalHSAEligibleInd&quot;:&quot;Y&quot;,&quot;planCategoryDescription&quot;:&quot;HSA&quot;,&quot;PolicyCalendarYearCode&quot;:&quot;B&quot;,&quot;StateMandatedPlanInd&quot;:&quot;N&quot;,&quot;pcpRequiredInd&quot;:&quot;N&quot;,&quot;optionalRiders&quot;:[],&quot;OI&quot;:&quot;01&quot;,&quot;id&quot;:null,&quot;splitCopayInd&quot;:&quot;S&quot;,&quot;productType&quot;:&quot;MED&quot;,&quot;planFundingDescription&quot;:null,&quot;planRiders&quot;:[],&quot;defaultRxPlanCode&quot;:&quot;NS&quot;,&quot;medicalPlanType&quot;:&quot;CHOICE PLUS&quot;,&quot;planType&quot;:null,&quot;defaultRxPlanData&quot;:{&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialityPlanInd&quot;:&quot;Y&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;},&quot;planFamilyList&quot;:[{&quot;externalId&quot;:&quot;OH015&quot;,&quot;familyName&quot;:&quot;OH015&quot;,&quot;key&quot;:null},{&quot;externalId&quot;:&quot;OH016&quot;,&quot;familyName&quot;:&quot;OH016&quot;,&quot;key&quot;:null}],&quot;HraEligInd&quot;:&quot;N&quot;,&quot;medicalPlanCode&quot;:&quot;AC8F&quot;,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;productInsuranceLicenseType&quot;:&quot;INS&quot;,&quot;preferredPlanInd&quot;:true,&quot;stateMandatedPlanInd&quot;:&quot;N&quot;,&quot;oisabitId&quot;:277465,&quot;hraPlanContributionMaxAmount&quot;:&quot;50.00 - 150.00&quot;,&quot;hraPlanContributionMinAmount&quot;:&quot;150.00&quot;,&quot;specialityPlanInd&quot;:&quot;SM&quot;,&quot;policyCalendarYearCode&quot;:&quot;B&quot;,&quot;alternateRxPlanData&quot;:[{&quot;deductibleAmount&quot;:&quot;0.00&quot;,&quot;maxBenefitAmount&quot;:&quot;0.00&quot;,&quot;rxPlanCode&quot;:&quot;NS&quot;,&quot;specialtyPlanInd&quot;:&quot;Y&quot;,&quot;tier1CopayAmount&quot;:&quot;10.00&quot;,&quot;tier1CopayPct&quot;:&quot;00&quot;,&quot;tier2CopayAmount&quot;:&quot;35.00&quot;,&quot;tier2CopayPct&quot;:&quot;00&quot;,&quot;tier3CopayAmount&quot;:&quot;60.00&quot;,&quot;tier3CopayPct&quot;:&quot;00&quot;,&quot;tier4CopayAmount&quot;:&quot;0.00&quot;,&quot;tier4CopayPct&quot;:&quot;000&quot;}],&quot;ageBandRateList&quot;:[],&quot;nicePlanIndicators&quot;:[{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveCommissionPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEBenefitPlanDescription&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICERxPlancode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPlanCode&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPlancodes&quot;,&quot;indicatorValue&quot;:&quot;&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEActiveMedicalPMPMTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAcupuncturePMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEAreaFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEBehavioralHealthPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRAAdminPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECalCOBRARetentionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEChiropracticPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECobraMedicalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICECOBRAPMPMDollarsTotal&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDentalPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEDurableMedEquipPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEInfertilityPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalPlanScheduleNumber&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEMedicalTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPremiumTaxPMPM&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCPlanRelativity&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCStartRate&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEPRSCTrendFactor&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICERxPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;},{&quot;indicatorName&quot;:&quot;NICEVisionPMPMDollars&quot;,&quot;indicatorValue&quot;:&quot;0&quot;}]}}},&quot;planGroupId&quot;:&quot;OH015&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="220 /exemplar/sgquoting/Plans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lazyRate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lazyRate</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dualProductsEnabled" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">dualProductsEnabled</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">productType</stringProp>
                <stringProp name="Argument.value">DEN</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258492</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Plans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="221 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;L0001&quot;,&quot;P7330&quot;,&quot;P0015&quot;,&quot;P0018&quot;,&quot;L0002&quot;,&quot;P7331&quot;,&quot;P1223&quot;,&quot;P0014&quot;,&quot;P0010&quot;,&quot;P0008&quot;,&quot;P0006&quot;,&quot;P1215&quot;,&quot;P1212&quot;,&quot;P1213&quot;,&quot;P1211&quot;,&quot;H1211&quot;,&quot;P0118&quot;,&quot;A1223&quot;,&quot;P0111&quot;,&quot;X4877&quot;,&quot;P0110&quot;,&quot;X4878&quot;,&quot;P0109&quot;,&quot;A2543&quot;,&quot;A1211&quot;,&quot;A1212&quot;,&quot;P3328&quot;,&quot;P0058&quot;,&quot;P1266&quot;,&quot;P3322&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;L0001&quot;:&quot;DEN&quot;,&quot;P7330&quot;:&quot;DEN&quot;,&quot;P0015&quot;:&quot;DEN&quot;,&quot;P0018&quot;:&quot;DEN&quot;,&quot;L0002&quot;:&quot;DEN&quot;,&quot;P7331&quot;:&quot;DEN&quot;,&quot;P1223&quot;:&quot;DEN&quot;,&quot;P0014&quot;:&quot;DEN&quot;,&quot;P0010&quot;:&quot;DEN&quot;,&quot;P0008&quot;:&quot;DEN&quot;,&quot;P0006&quot;:&quot;DEN&quot;,&quot;P1215&quot;:&quot;DEN&quot;,&quot;P1212&quot;:&quot;DEN&quot;,&quot;P1213&quot;:&quot;DEN&quot;,&quot;P1211&quot;:&quot;DEN&quot;,&quot;H1211&quot;:&quot;DEN&quot;,&quot;P0118&quot;:&quot;DEN&quot;,&quot;A1223&quot;:&quot;DEN&quot;,&quot;P0111&quot;:&quot;DEN&quot;,&quot;X4877&quot;:&quot;DEN&quot;,&quot;P0110&quot;:&quot;DEN&quot;,&quot;X4878&quot;:&quot;DEN&quot;,&quot;P0109&quot;:&quot;DEN&quot;,&quot;A2543&quot;:&quot;DEN&quot;,&quot;A1211&quot;:&quot;DEN&quot;,&quot;A1212&quot;:&quot;DEN&quot;,&quot;P3328&quot;:&quot;DEN&quot;,&quot;P0058&quot;:&quot;DEN&quot;,&quot;P1266&quot;:&quot;DEN&quot;,&quot;P3322&quot;:&quot;DEN&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="222 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;H7330&quot;,&quot;H7331&quot;,&quot;H4878&quot;,&quot;H4877&quot;,&quot;A7979&quot;,&quot;A7978&quot;,&quot;P3437&quot;,&quot;A7975&quot;,&quot;P3434&quot;,&quot;A7974&quot;,&quot;P4886&quot;,&quot;A7977&quot;,&quot;H9891&quot;,&quot;A7976&quot;,&quot;P4884&quot;,&quot;H9890&quot;,&quot;A7982&quot;,&quot;P4883&quot;,&quot;A7981&quot;,&quot;P4880&quot;,&quot;A7980&quot;,&quot;P3307&quot;,&quot;P4879&quot;,&quot;P3306&quot;,&quot;P4877&quot;,&quot;P3303&quot;,&quot;P3300&quot;,&quot;H9893&quot;,&quot;H9892&quot;,&quot;P3419&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;H7330&quot;:&quot;DEN&quot;,&quot;H7331&quot;:&quot;DEN&quot;,&quot;H4878&quot;:&quot;DEN&quot;,&quot;H4877&quot;:&quot;DEN&quot;,&quot;A7979&quot;:&quot;DEN&quot;,&quot;A7978&quot;:&quot;DEN&quot;,&quot;P3437&quot;:&quot;DEN&quot;,&quot;A7975&quot;:&quot;DEN&quot;,&quot;P3434&quot;:&quot;DEN&quot;,&quot;A7974&quot;:&quot;DEN&quot;,&quot;P4886&quot;:&quot;DEN&quot;,&quot;A7977&quot;:&quot;DEN&quot;,&quot;H9891&quot;:&quot;DEN&quot;,&quot;A7976&quot;:&quot;DEN&quot;,&quot;P4884&quot;:&quot;DEN&quot;,&quot;H9890&quot;:&quot;DEN&quot;,&quot;A7982&quot;:&quot;DEN&quot;,&quot;P4883&quot;:&quot;DEN&quot;,&quot;A7981&quot;:&quot;DEN&quot;,&quot;P4880&quot;:&quot;DEN&quot;,&quot;A7980&quot;:&quot;DEN&quot;,&quot;P3307&quot;:&quot;DEN&quot;,&quot;P4879&quot;:&quot;DEN&quot;,&quot;P3306&quot;:&quot;DEN&quot;,&quot;P4877&quot;:&quot;DEN&quot;,&quot;P3303&quot;:&quot;DEN&quot;,&quot;P3300&quot;:&quot;DEN&quot;,&quot;H9893&quot;:&quot;DEN&quot;,&quot;H9892&quot;:&quot;DEN&quot;,&quot;P3419&quot;:&quot;DEN&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="224 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;P3330&quot;,&quot;A8015&quot;,&quot;A8012&quot;,&quot;A8013&quot;,&quot;P0061&quot;,&quot;P0060&quot;,&quot;A8011&quot;,&quot;A3300&quot;,&quot;P2634&quot;,&quot;P2631&quot;,&quot;P0206&quot;,&quot;P0203&quot;,&quot;P0202&quot;,&quot;H3384&quot;,&quot;H3383&quot;,&quot;I0009&quot;,&quot;A1266&quot;,&quot;I0007&quot;,&quot;P3388&quot;,&quot;P3387&quot;,&quot;P3386&quot;,&quot;P3384&quot;,&quot;P3383&quot;,&quot;P3381&quot;,&quot;P4226&quot;,&quot;I0013&quot;,&quot;I0012&quot;,&quot;P5424&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;P3330&quot;:&quot;DEN&quot;,&quot;A8015&quot;:&quot;DEN&quot;,&quot;A8012&quot;:&quot;DEN&quot;,&quot;A8013&quot;:&quot;DEN&quot;,&quot;P0061&quot;:&quot;DEN&quot;,&quot;P0060&quot;:&quot;DEN&quot;,&quot;A8011&quot;:&quot;DEN&quot;,&quot;A3300&quot;:&quot;DEN&quot;,&quot;P2634&quot;:&quot;DEN&quot;,&quot;P2631&quot;:&quot;DEN&quot;,&quot;P0206&quot;:&quot;DEN&quot;,&quot;P0203&quot;:&quot;DEN&quot;,&quot;P0202&quot;:&quot;DEN&quot;,&quot;H3384&quot;:&quot;DEN&quot;,&quot;H3383&quot;:&quot;DEN&quot;,&quot;I0009&quot;:&quot;DEN&quot;,&quot;A1266&quot;:&quot;DEN&quot;,&quot;I0007&quot;:&quot;DEN&quot;,&quot;P3388&quot;:&quot;DEN&quot;,&quot;P3387&quot;:&quot;DEN&quot;,&quot;P3386&quot;:&quot;DEN&quot;,&quot;P3384&quot;:&quot;DEN&quot;,&quot;P3383&quot;:&quot;DEN&quot;,&quot;P3381&quot;:&quot;DEN&quot;,&quot;P4226&quot;:&quot;DEN&quot;,&quot;I0013&quot;:&quot;DEN&quot;,&quot;I0012&quot;:&quot;DEN&quot;,&quot;P5424&quot;:&quot;DEN&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="223 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;P4980&quot;,&quot;P8264&quot;,&quot;A2376&quot;,&quot;P5430&quot;,&quot;P2399&quot;,&quot;P3366&quot;,&quot;P3365&quot;,&quot;I0677&quot;,&quot;I0675&quot;,&quot;X3383&quot;,&quot;X3384&quot;,&quot;P3348&quot;,&quot;P2378&quot;,&quot;P2379&quot;,&quot;A8018&quot;,&quot;A8019&quot;,&quot;P3344&quot;,&quot;P2374&quot;,&quot;P3343&quot;,&quot;P2375&quot;,&quot;A7973&quot;,&quot;P2372&quot;,&quot;P3340&quot;,&quot;P2371&quot;,&quot;A8020&quot;,&quot;P3338&quot;,&quot;A8016&quot;,&quot;A8017&quot;,&quot;P3331&quot;,&quot;A8014&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;P4980&quot;:&quot;DEN&quot;,&quot;P8264&quot;:&quot;DEN&quot;,&quot;A2376&quot;:&quot;DEN&quot;,&quot;P5430&quot;:&quot;DEN&quot;,&quot;P2399&quot;:&quot;DEN&quot;,&quot;P3366&quot;:&quot;DEN&quot;,&quot;P3365&quot;:&quot;DEN&quot;,&quot;I0677&quot;:&quot;DEN&quot;,&quot;I0675&quot;:&quot;DEN&quot;,&quot;X3383&quot;:&quot;DEN&quot;,&quot;X3384&quot;:&quot;DEN&quot;,&quot;P3348&quot;:&quot;DEN&quot;,&quot;P2378&quot;:&quot;DEN&quot;,&quot;P2379&quot;:&quot;DEN&quot;,&quot;A8018&quot;:&quot;DEN&quot;,&quot;A8019&quot;:&quot;DEN&quot;,&quot;P3344&quot;:&quot;DEN&quot;,&quot;P2374&quot;:&quot;DEN&quot;,&quot;P3343&quot;:&quot;DEN&quot;,&quot;P2375&quot;:&quot;DEN&quot;,&quot;A7973&quot;:&quot;DEN&quot;,&quot;P2372&quot;:&quot;DEN&quot;,&quot;P3340&quot;:&quot;DEN&quot;,&quot;P2371&quot;:&quot;DEN&quot;,&quot;A8020&quot;:&quot;DEN&quot;,&quot;P3338&quot;:&quot;DEN&quot;,&quot;A8016&quot;:&quot;DEN&quot;,&quot;A8017&quot;:&quot;DEN&quot;,&quot;P3331&quot;:&quot;DEN&quot;,&quot;A8014&quot;:&quot;DEN&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="226 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;L0001&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;COINSURANCE (P&amp;D/Basic/Major/Ortho)&quot;,&quot;benefitValue&quot;:&quot;100%/0%/0%/0%&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;ANNUAL MAX /UCR&quot;,&quot;benefitValue&quot;:&quot;$0/ MAC&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;DEDUCTIBLE (Single/Family)&quot;,&quot;benefitValue&quot;:&quot;$0/ $0&quot;},{&quot;benefitId&quot;:&quot;DentalPlanCode&quot;,&quot;displayName&quot;:&quot;Plan Code&quot;,&quot;benefitValue&quot;:&quot;L0001&quot;},{&quot;benefitId&quot;:&quot;UsualCustomaryPercentile&quot;,&quot;displayName&quot;:&quot;Out Of Network Reimbursement&quot;,&quot;benefitValue&quot;:&quot;MAC&quot;},{&quot;benefitId&quot;:&quot;ProductType&quot;,&quot;displayName&quot;:&quot;Product Type&quot;,&quot;benefitValue&quot;:&quot;DPPO&quot;},{&quot;benefitId&quot;:&quot;IndividualInNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network Single Deductible&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;FamilyInNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;In-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;IndividualOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network single deductible&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;FamilyOutNetDeductibleAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network family deductible&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;PreventiveInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Preventative &amp; Diagnostic Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;MinorRestorativeInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Minor Rest Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;InnetworkEndoPerioOralSurgeryCoinsuranceCopay&quot;,&quot;displayName&quot;:&quot;In-network Endo/Perio/Oral Surgery Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;MajorServicesInNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Major Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;ImplantINPercent&quot;,&quot;displayName&quot;:&quot;In-network Implants&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;OrthodonticsInNetCoinsurancePct&quot;,&quot;displayName&quot;:&quot;In-network Ortho Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;PreventiveOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Preventative &amp; Diagnostic Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;100%&quot;},{&quot;benefitId&quot;:&quot;MinorRestorativeOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Minor Rest Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;OONEndoPerioOralSurgeryCoinsuranceCopay&quot;,&quot;displayName&quot;:&quot;Out-of-network Endo/Perio/Oral Surgery Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;MajorServicesOutNetCoInsurancePct&quot;,&quot;displayName&quot;:&quot;Out-of-network Major Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;ImplantOOOPercent&quot;,&quot;displayName&quot;:&quot;Out-of-network Implants&quot;,&quot;benefitValue&quot;:&quot;0%&quot;},{&quot;benefitId&quot;:&quot;OrthodonticsCoveredOutNetInd&quot;,&quot;displayName&quot;:&quot;Out-of-network Ortho Co-insurance/Copay&quot;,&quot;benefitValue&quot;:&quot;NO&quot;},{&quot;benefitId&quot;:&quot;InNetAnnualMaxBenefitAmount&quot;,&quot;displayName&quot;:&quot;Annual Max&quot;,&quot;benefitValue&quot;:&quot;$0&quot;},{&quot;benefitId&quot;:&quot;PlanFundingDescription&quot;,&quot;displayName&quot;:&quot;Plan Funding&quot;,&quot;benefitValue&quot;:&quot;CONTRIBUTORY&quot;},{&quot;benefitId&quot;:&quot;RolloverMaxAccountIndicator&quot;,&quot;displayName&quot;:&quot;Consumer Max Multiplier&quot;,&quot;benefitValue&quot;:&quot;NO&quot;},{&quot;benefitId&quot;:&quot;WaitingPeriodForMajor&quot;,&quot;displayName&quot;:&quot;Waiting Period for Major&quot;,&quot;benefitValue&quot;:&quot;0 Months&quot;},{&quot;benefitId&quot;:&quot;WaitingPeriodForOrtho&quot;,&quot;displayName&quot;:&quot;Waiting Period for Ortho&quot;,&quot;benefitValue&quot;:&quot;0 Months&quot;},{&quot;benefitId&quot;:&quot;DeductibleWaiverInd&quot;,&quot;displayName&quot;:&quot;Annual Deductible and Annual Maximum Benefit Applies to Preventive and Diagnostic Services&quot;,&quot;benefitValue&quot;:&quot;YES&quot;}],&quot;productLineCode&quot;:&quot;DEN&quot;,&quot;locationId&quot;:149385,&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Dental&quot;,&quot;planName&quot;:&quot;L0001&quot;,&quot;metalTier&quot;:&quot;&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;L0001&quot;,&quot;actualBenefits&quot;:[],&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;DiscountDentalPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;DentalInoAreaInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;dentalDhmoPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;L0001&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:79.30999999999999,&quot;planRate&quot;:79.30999999999999,&quot;riderRate&quot;:0,&quot;totalRate&quot;:79.30999999999999},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:14.55,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:7.21,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:14.42,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:22.43,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:7.21,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:14.42,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:14.55,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:22.43,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:null,&quot;custom&quot;:{&quot;prodLineKey&quot;:&quot;DEN&quot;,&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:14.55,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:7.21,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:14.42,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:22.43,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:7.21,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:14.42,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:14.55,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:22.43,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:79.30999999999999,&quot;planRate&quot;:79.30999999999999,&quot;riderRate&quot;:0,&quot;totalRate&quot;:79.30999999999999},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:7.21,&quot;planRate&quot;:7.21,&quot;riderRate&quot;:0,&quot;totalRate&quot;:7.21},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;tierRateExtData&quot;:[{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE + SPOUSE&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE + CHILD&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;FAMILY&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null}],&quot;ageRatedPlanInfo&quot;:null,&quot;DentalCompositeRateFormatTypeName&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;DiscountDentalPlanAvailableInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;DentalInoAreaInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;dentalDhmoPlan&quot;,&quot;indicatorValue&quot;:&quot;N&quot;}],&quot;planIdSuffix&quot;:&quot;DPPO&quot;,&quot;defaultRxPlanCode&quot;:null,&quot;planType&quot;:null,&quot;planStatus&quot;:null,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;preferredPlanInd&quot;:false,&quot;SA&quot;:&quot;00&quot;,&quot;productInsuranceLicenseType&quot;:null,&quot;rateId&quot;:null,&quot;platformIdentifier&quot;:null,&quot;otAreaIndicator&quot;:&quot;N&quot;,&quot;oisabitId&quot;:277465,&quot;outOfAreaAttr&quot;:&quot;N&quot;,&quot;dentalDhmoPlan&quot;:false,&quot;dentalPlanCode&quot;:&quot;L0001&quot;,&quot;OI&quot;:&quot;01&quot;,&quot;id&quot;:null,&quot;productType&quot;:&quot;DEN&quot;,&quot;planFundingDescription&quot;:&quot;CONTRIBUTORY&quot;}}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="227 /exemplar/sgquoting/Plans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lazyRate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lazyRate</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dualProductsEnabled" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">dualProductsEnabled</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">productType</stringProp>
                <stringProp name="Argument.value">VIS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258493</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Plans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="229 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;L001V&quot;,&quot;VH106&quot;,&quot;L002C&quot;,&quot;VH107&quot;,&quot;VH362&quot;,&quot;VH361&quot;,&quot;V1043&quot;,&quot;V1049&quot;,&quot;V1048&quot;,&quot;L002V&quot;,&quot;L003C&quot;,&quot;V1371&quot;,&quot;V1372&quot;,&quot;V1012&quot;,&quot;VL012&quot;,&quot;V1010&quot;,&quot;VL010&quot;,&quot;V1011&quot;,&quot;V1258&quot;,&quot;V1256&quot;,&quot;V1257&quot;,&quot;V1018&quot;,&quot;L007V&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;L001V&quot;:&quot;VIS&quot;,&quot;VH106&quot;:&quot;VIS&quot;,&quot;L002C&quot;:&quot;VIS&quot;,&quot;VH107&quot;:&quot;VIS&quot;,&quot;VH362&quot;:&quot;VIS&quot;,&quot;VH361&quot;:&quot;VIS&quot;,&quot;V1043&quot;:&quot;VIS&quot;,&quot;V1049&quot;:&quot;VIS&quot;,&quot;V1048&quot;:&quot;VIS&quot;,&quot;L002V&quot;:&quot;VIS&quot;,&quot;L003C&quot;:&quot;VIS&quot;,&quot;V1371&quot;:&quot;VIS&quot;,&quot;V1372&quot;:&quot;VIS&quot;,&quot;V1012&quot;:&quot;VIS&quot;,&quot;VL012&quot;:&quot;VIS&quot;,&quot;V1010&quot;:&quot;VIS&quot;,&quot;VL010&quot;:&quot;VIS&quot;,&quot;V1011&quot;:&quot;VIS&quot;,&quot;V1258&quot;:&quot;VIS&quot;,&quot;V1256&quot;:&quot;VIS&quot;,&quot;V1257&quot;:&quot;VIS&quot;,&quot;V1018&quot;:&quot;VIS&quot;,&quot;L007V&quot;:&quot;VIS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="231 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;V1368&quot;,&quot;V1005&quot;,&quot;V1006&quot;,&quot;L006V&quot;,&quot;V1366&quot;,&quot;V1003&quot;,&quot;V1367&quot;,&quot;V1004&quot;,&quot;V1009&quot;,&quot;V1007&quot;,&quot;V1008&quot;,&quot;L007C&quot;,&quot;VH403&quot;,&quot;VH402&quot;,&quot;V1105&quot;,&quot;V1102&quot;,&quot;V1106&quot;,&quot;V1107&quot;,&quot;L009V&quot;,&quot;VH089&quot;,&quot;VH088&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;V1368&quot;:&quot;VIS&quot;,&quot;V1005&quot;:&quot;VIS&quot;,&quot;V1006&quot;:&quot;VIS&quot;,&quot;L006V&quot;:&quot;VIS&quot;,&quot;V1366&quot;:&quot;VIS&quot;,&quot;V1003&quot;:&quot;VIS&quot;,&quot;V1367&quot;:&quot;VIS&quot;,&quot;V1004&quot;:&quot;VIS&quot;,&quot;V1009&quot;:&quot;VIS&quot;,&quot;V1007&quot;:&quot;VIS&quot;,&quot;V1008&quot;:&quot;VIS&quot;,&quot;L007C&quot;:&quot;VIS&quot;,&quot;VH403&quot;:&quot;VIS&quot;,&quot;VH402&quot;:&quot;VIS&quot;,&quot;V1105&quot;:&quot;VIS&quot;,&quot;V1102&quot;:&quot;VIS&quot;,&quot;V1106&quot;:&quot;VIS&quot;,&quot;V1107&quot;:&quot;VIS&quot;,&quot;L009V&quot;:&quot;VIS&quot;,&quot;VH089&quot;:&quot;VIS&quot;,&quot;VH088&quot;:&quot;VIS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="230 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;L008C&quot;,&quot;VL008&quot;,&quot;V1020&quot;,&quot;V1387&quot;,&quot;V1266&quot;,&quot;VL022&quot;,&quot;V1022&quot;,&quot;V1267&quot;,&quot;V1025&quot;,&quot;V1268&quot;,&quot;V1026&quot;,&quot;L008V&quot;,&quot;L009C&quot;,&quot;L005V&quot;,&quot;V1359&quot;,&quot;L006C&quot;,&quot;V1360&quot;,&quot;V1361&quot;,&quot;VL004&quot;,&quot;V1001&quot;,&quot;V1365&quot;,&quot;V1002&quot;,&quot;V1362&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;L008C&quot;:&quot;VIS&quot;,&quot;VL008&quot;:&quot;VIS&quot;,&quot;V1020&quot;:&quot;VIS&quot;,&quot;V1387&quot;:&quot;VIS&quot;,&quot;V1266&quot;:&quot;VIS&quot;,&quot;VL022&quot;:&quot;VIS&quot;,&quot;V1022&quot;:&quot;VIS&quot;,&quot;V1267&quot;:&quot;VIS&quot;,&quot;V1025&quot;:&quot;VIS&quot;,&quot;V1268&quot;:&quot;VIS&quot;,&quot;V1026&quot;:&quot;VIS&quot;,&quot;L008V&quot;:&quot;VIS&quot;,&quot;L009C&quot;:&quot;VIS&quot;,&quot;L005V&quot;:&quot;VIS&quot;,&quot;V1359&quot;:&quot;VIS&quot;,&quot;L006C&quot;:&quot;VIS&quot;,&quot;V1360&quot;:&quot;VIS&quot;,&quot;V1361&quot;:&quot;VIS&quot;,&quot;VL004&quot;:&quot;VIS&quot;,&quot;V1001&quot;:&quot;VIS&quot;,&quot;V1365&quot;:&quot;VIS&quot;,&quot;V1002&quot;:&quot;VIS&quot;,&quot;V1362&quot;:&quot;VIS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="228 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;L001C&quot;,&quot;V1074&quot;,&quot;V1075&quot;,&quot;V1072&quot;,&quot;V1076&quot;,&quot;V1077&quot;,&quot;V1089&quot;,&quot;L010C&quot;,&quot;L010V&quot;,&quot;VH010&quot;,&quot;VH012&quot;,&quot;VH370&quot;,&quot;L003V&quot;,&quot;VH369&quot;,&quot;VH008&quot;,&quot;L004C&quot;,&quot;L004V&quot;,&quot;L005C&quot;,&quot;V1272&quot;,&quot;V1273&quot;,&quot;V1031&quot;,&quot;V1271&quot;,&quot;V1037&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;L001C&quot;:&quot;VIS&quot;,&quot;V1074&quot;:&quot;VIS&quot;,&quot;V1075&quot;:&quot;VIS&quot;,&quot;V1072&quot;:&quot;VIS&quot;,&quot;V1076&quot;:&quot;VIS&quot;,&quot;V1077&quot;:&quot;VIS&quot;,&quot;V1089&quot;:&quot;VIS&quot;,&quot;L010C&quot;:&quot;VIS&quot;,&quot;L010V&quot;:&quot;VIS&quot;,&quot;VH010&quot;:&quot;VIS&quot;,&quot;VH012&quot;:&quot;VIS&quot;,&quot;VH370&quot;:&quot;VIS&quot;,&quot;L003V&quot;:&quot;VIS&quot;,&quot;VH369&quot;:&quot;VIS&quot;,&quot;VH008&quot;:&quot;VIS&quot;,&quot;L004C&quot;:&quot;VIS&quot;,&quot;L004V&quot;:&quot;VIS&quot;,&quot;L005C&quot;:&quot;VIS&quot;,&quot;V1272&quot;:&quot;VIS&quot;,&quot;V1273&quot;:&quot;VIS&quot;,&quot;V1031&quot;:&quot;VIS&quot;,&quot;V1271&quot;:&quot;VIS&quot;,&quot;V1037&quot;:&quot;VIS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="232 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;V1273&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;COPAY (Exam/Materials)&quot;,&quot;benefitValue&quot;:&quot;$15/$30&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;FREQUENCY (Exam/Lens/Frame)&quot;,&quot;benefitValue&quot;:&quot;24/24/24&quot;},{&quot;benefitId&quot;:&quot;VisionPlanCode&quot;,&quot;displayName&quot;:&quot;Vision Plan Code&quot;,&quot;benefitValue&quot;:&quot;V1273&quot;},{&quot;benefitId&quot;:&quot;VisionPlanTypeCode&quot;,&quot;displayName&quot;:&quot;Vision Plan Type Code&quot;,&quot;benefitValue&quot;:&quot;E&quot;},{&quot;benefitId&quot;:&quot;PlanTypeDescription&quot;,&quot;displayName&quot;:&quot;Vision Plan Type Description&quot;,&quot;benefitValue&quot;:&quot;50% EMPLOYER PAID&quot;},{&quot;benefitId&quot;:&quot;NumofMonthsBetweenCoveredExam&quot;,&quot;displayName&quot;:&quot;Frequency for Exam (months)&quot;,&quot;benefitValue&quot;:&quot;24&quot;},{&quot;benefitId&quot;:&quot;NumofMonthsBetweenCoveredLensPurchase&quot;,&quot;displayName&quot;:&quot;Frequency for Lenses (months)&quot;,&quot;benefitValue&quot;:&quot;24&quot;},{&quot;benefitId&quot;:&quot;NumofMonthsBetweenCoveredFramePurchase&quot;,&quot;displayName&quot;:&quot;Frequency for Frames (months)&quot;,&quot;benefitValue&quot;:&quot;24&quot;},{&quot;benefitId&quot;:&quot;InNetExamCopayAmount&quot;,&quot;displayName&quot;:&quot;In-network Copays for Exam&quot;,&quot;benefitValue&quot;:&quot;$15&quot;},{&quot;benefitId&quot;:&quot;InNetMaterialCopayAmount&quot;,&quot;displayName&quot;:&quot;In-network Copays for Materials&quot;,&quot;benefitValue&quot;:&quot;$30&quot;},{&quot;benefitId&quot;:&quot;InNetMaterialCopayAmount&quot;,&quot;displayName&quot;:&quot;In-network Copays for Frames&quot;,&quot;benefitValue&quot;:&quot;$30&quot;},{&quot;benefitId&quot;:&quot;InnetworkContactLensAllowance&quot;,&quot;displayName&quot;:&quot;In-network Contact Lens Allowance&quot;,&quot;benefitValue&quot;:&quot;$105&quot;},{&quot;benefitId&quot;:&quot;OutNetExamMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network allowance for Exam&quot;,&quot;benefitValue&quot;:&quot;$40&quot;},{&quot;benefitId&quot;:&quot;OutNetSingleVisionLensesMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network allowance for Single Vision Lenses&quot;,&quot;benefitValue&quot;:&quot;$40&quot;},{&quot;benefitId&quot;:&quot;OutNetFramesMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network allowance for Frames&quot;,&quot;benefitValue&quot;:&quot;$45&quot;},{&quot;benefitId&quot;:&quot;OutNetContactLensesMaxAmount&quot;,&quot;displayName&quot;:&quot;Out-of-network allowance for Contact Lenses&quot;,&quot;benefitValue&quot;:&quot;$105&quot;},{&quot;benefitId&quot;:&quot;RetailFrameAllowance&quot;,&quot;displayName&quot;:&quot;Retail Frame Benefit Allowance&quot;,&quot;benefitValue&quot;:&quot;$130&quot;}],&quot;productLineCode&quot;:&quot;VIS&quot;,&quot;locationId&quot;:149385,&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Vision&quot;,&quot;planName&quot;:&quot;V1273&quot;,&quot;metalTier&quot;:&quot;&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;V1273&quot;,&quot;actualBenefits&quot;:[],&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PlanTypeDescription&quot;,&quot;indicatorValue&quot;:&quot;E&quot;},{&quot;indicatorName&quot;:&quot;VisionPlanTypeCode&quot;,&quot;indicatorValue&quot;:&quot;50% EMPLOYER PAID&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PlanTypeDescription&quot;,&quot;indicatorValue&quot;:&quot;E&quot;},{&quot;indicatorName&quot;:&quot;VisionPlanTypeCode&quot;,&quot;indicatorValue&quot;:&quot;50% EMPLOYER PAID&quot;}],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;V1273&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:27.609999999999992,&quot;planRate&quot;:27.609999999999992,&quot;riderRate&quot;:0,&quot;totalRate&quot;:27.609999999999992},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:5.57,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:2.51,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:4.77,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:7.85,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:2.51,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:4.77,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:5.57,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:7.85,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:null,&quot;custom&quot;:{&quot;prodLineKey&quot;:&quot;VIS&quot;,&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:5.57,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:11,&quot;eeRate&quot;:2.51,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:4.77,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:7.85,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:[{&quot;description&quot;:&quot;EMPLOYEE&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:2.51,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+SP&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:4.77,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+CH&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:5.57,&quot;tierStructureKey&quot;:null},{&quot;description&quot;:&quot;EE+FAM&quot;,&quot;employeeCost&quot;:0,&quot;tierRate&quot;:7.85,&quot;tierStructureKey&quot;:null}],&quot;totalPremium&quot;:0},&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:27.609999999999992,&quot;planRate&quot;:27.609999999999992,&quot;riderRate&quot;:0,&quot;totalRate&quot;:27.609999999999992},&quot;VisionCompositeRateFormatName&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:null,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:2.51,&quot;planRate&quot;:2.51,&quot;riderRate&quot;:0,&quot;totalRate&quot;:2.51},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;tierRateExtData&quot;:[{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE + SPOUSE&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;EMPLOYEE + CHILD&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:null,&quot;tierName&quot;:&quot;FAMILY&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null}],&quot;ageRatedPlanInfo&quot;:null,&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;indicatorOptions&quot;:[{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PlanTypeDescription&quot;,&quot;indicatorValue&quot;:&quot;E&quot;},{&quot;indicatorName&quot;:&quot;VisionPlanTypeCode&quot;,&quot;indicatorValue&quot;:&quot;50% EMPLOYER PAID&quot;},{&quot;indicatorName&quot;:&quot;PreferredPlanInd&quot;,&quot;indicatorValue&quot;:&quot;N&quot;},{&quot;indicatorName&quot;:&quot;PlanTypeDescription&quot;,&quot;indicatorValue&quot;:&quot;E&quot;},{&quot;indicatorName&quot;:&quot;VisionPlanTypeCode&quot;,&quot;indicatorValue&quot;:&quot;50% EMPLOYER PAID&quot;}],&quot;Plan Type Description&quot;:&quot;50% EMPLOYER PAID&quot;,&quot;planIdSuffix&quot;:&quot;50% EMPLOYER PAID&quot;,&quot;Play Type Code&quot;:&quot;E&quot;,&quot;defaultRxPlanCode&quot;:null,&quot;planType&quot;:null,&quot;planStatus&quot;:null,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;preferredPlanInd&quot;:false,&quot;SA&quot;:&quot;00&quot;,&quot;productInsuranceLicenseType&quot;:null,&quot;rateId&quot;:null,&quot;platformIdentifier&quot;:null,&quot;otAreaIndicator&quot;:null,&quot;oisabitId&quot;:277465,&quot;Plan Code&quot;:&quot;V1273&quot;,&quot;OI&quot;:&quot;01&quot;,&quot;copay&quot;:15,&quot;id&quot;:null,&quot;visionPlanTypeCode&quot;:&quot;E&quot;,&quot;productType&quot;:&quot;VIS&quot;,&quot;planFundingDescription&quot;:null}}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="233 /exemplar/sgquoting/Plans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lazyRate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lazyRate</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dualProductsEnabled" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">dualProductsEnabled</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">productType</stringProp>
                <stringProp name="Argument.value">LFE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Plans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="234 /exemplar/quoting/RateProducts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">productIds</stringProp>
                <stringProp name="Argument.value">[&quot;F125K&quot;,&quot;F100K&quot;,&quot;F25K&quot;,&quot;F75K&quot;,&quot;F50K&quot;,&quot;F175K&quot;,&quot;M1X&quot;,&quot;F40K&quot;,&quot;M2X&quot;,&quot;F150K&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">customStr</stringProp>
                <stringProp name="Argument.value">{&quot;F125K&quot;:&quot;LFE&quot;,&quot;F100K&quot;:&quot;LFE&quot;,&quot;F25K&quot;:&quot;LFE&quot;,&quot;F75K&quot;:&quot;LFE&quot;,&quot;F50K&quot;:&quot;LFE&quot;,&quot;F175K&quot;:&quot;LFE&quot;,&quot;M1X&quot;:&quot;LFE&quot;,&quot;F40K&quot;:&quot;LFE&quot;,&quot;M2X&quot;:&quot;LFE&quot;,&quot;F150K&quot;:&quot;LFE&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/quoting/RateProducts.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="235 /exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;productKey&quot;:&quot;F25K&quot;,&quot;nickName&quot;:null,&quot;subgroupKey&quot;:&quot;104656&quot;,&quot;benefitOptions&quot;:[{&quot;benefitId&quot;:&quot;LifePlanCode&quot;,&quot;displayName&quot;:&quot;Life Plan Code&quot;,&quot;benefitValue&quot;:&quot;F25K&quot;},{&quot;benefitId&quot;:&quot;LifeProductTypeDesc&quot;,&quot;displayName&quot;:&quot;Life Product Type Description&quot;,&quot;benefitValue&quot;:&quot;EMP LIFE&quot;},{&quot;benefitId&quot;:&quot;LifePlanType&quot;,&quot;displayName&quot;:&quot;Life Plan Type&quot;,&quot;benefitValue&quot;:&quot;DOLLAR&quot;},{&quot;benefitId&quot;:&quot;LifeBenefitType&quot;,&quot;displayName&quot;:&quot;Life Benefit Type&quot;,&quot;benefitValue&quot;:&quot;Employee&quot;},{&quot;benefitId&quot;:&quot;BasicLifeBenefit&quot;,&quot;displayName&quot;:&quot;Basic Life Benefit&quot;,&quot;benefitValue&quot;:&quot;$25,000&quot;},{&quot;benefitId&quot;:&quot;AD_D&quot;,&quot;displayName&quot;:&quot;AD&amp;D&quot;,&quot;benefitValue&quot;:&quot;Benefit amount same as Life Benefit&quot;},{&quot;benefitId&quot;:&quot;Reduction_Age&quot;,&quot;displayName&quot;:&quot;Reduction in Benefit Amount due to Age&quot;,&quot;benefitValue&quot;:&quot;65% @ age 65 and 50% @ age 70 Applies to Life and AD&amp;D Employee only&quot;},{&quot;benefitId&quot;:&quot;Acc_Death_Bft&quot;,&quot;displayName&quot;:&quot;Accelerated Death Benefit&quot;,&quot;benefitValue&quot;:&quot;50% to $50,000 Employee only&quot;},{&quot;benefitId&quot;:&quot;Conversion&quot;,&quot;displayName&quot;:&quot;Conversion&quot;,&quot;benefitValue&quot;:&quot;Employee &amp; Dependent&quot;},{&quot;benefitId&quot;:&quot;Portability&quot;,&quot;displayName&quot;:&quot;Portability&quot;,&quot;benefitValue&quot;:&quot;Not Available&quot;},{&quot;benefitId&quot;:&quot;LIFE/AD&amp;DBENEFIT&quot;,&quot;displayName&quot;:&quot;LIFE/AD&amp;DBENEFIT&quot;,&quot;benefitValue&quot;:&quot;$25,000&quot;},{&quot;benefitId&quot;:&quot;NutritionLabel&quot;,&quot;displayName&quot;:&quot;LIFE/AD&amp;D BENEFIT&quot;,&quot;benefitValue&quot;:&quot;$25,000&quot;}],&quot;productLineCode&quot;:&quot;LFE&quot;,&quot;locationId&quot;:149385,&quot;ratingMethod&quot;:&quot;4 TIER COMPOSITE ACR&quot;,&quot;productLineKey&quot;:&quot;Basic Life &amp; AD&amp;D&quot;,&quot;planName&quot;:&quot;F25K&quot;,&quot;metalTier&quot;:&quot;&quot;,&quot;productType&quot;:null,&quot;planXref&quot;:&quot;F25K&quot;,&quot;actualBenefits&quot;:[],&quot;planRateDetails&quot;:{&quot;planCode&quot;:&quot;F25K&quot;,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:90.75,&quot;planRate&quot;:90.75,&quot;riderRate&quot;:0,&quot;totalRate&quot;:90.75},&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:0,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:0,&quot;eeRate&quot;:0,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:0,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:0,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:null,&quot;totalPremium&quot;:0},&quot;ageRatedPlanInfo&quot;:null,&quot;custom&quot;:{&quot;TotalRatePerEE&quot;:8.25,&quot;BasicLifeMonthlyPremium&quot;:85.25,&quot;DependentTotalRatePerEmployee&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:90.75,&quot;planRate&quot;:90.75,&quot;riderRate&quot;:0,&quot;totalRate&quot;:90.75},&quot;TotalRatePer1000Volume&quot;:0.33,&quot;memberRateDetails&quot;:[{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:1,&quot;memberId&quot;:&quot;1&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:2,&quot;memberId&quot;:&quot;2&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:3,&quot;memberId&quot;:&quot;3&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:4,&quot;memberId&quot;:&quot;4&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:5,&quot;memberId&quot;:&quot;5&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:6,&quot;memberId&quot;:&quot;6&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:7,&quot;memberId&quot;:&quot;7&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:8,&quot;memberId&quot;:&quot;8&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:9,&quot;memberId&quot;:&quot;9&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:10,&quot;memberId&quot;:&quot;10&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null},{&quot;age&quot;:46,&quot;excluded&quot;:false,&quot;gender&quot;:&quot;Male&quot;,&quot;householdId&quot;:11,&quot;memberId&quot;:&quot;11&quot;,&quot;memberRateId&quot;:0,&quot;quotePlanId&quot;:0,&quot;quotedPremium&quot;:0,&quot;rateSummary&quot;:{&quot;adjustedRate&quot;:8.25,&quot;planRate&quot;:8.25,&quot;riderRate&quot;:0,&quot;totalRate&quot;:8.25},&quot;relationship&quot;:null,&quot;tobacco&quot;:null}],&quot;BasicLifeRatePer1000Volume&quot;:0.31,&quot;prodLineKey&quot;:&quot;LFE&quot;,&quot;ADNDRatePer1000Volume&quot;:0.02,&quot;compositeRatedPlanInfo&quot;:{&quot;ageRated&quot;:false,&quot;dateRated&quot;:null,&quot;e1ChildCt&quot;:0,&quot;e1ChildRate&quot;:0,&quot;e1ChildTotal&quot;:0,&quot;e2ChildCt&quot;:0,&quot;e2ChildRate&quot;:0,&quot;e2ChildTotal&quot;:0,&quot;e3ChildCt&quot;:0,&quot;e3ChildRate&quot;:0,&quot;e3ChildTotal&quot;:0,&quot;eeCt&quot;:0,&quot;eeRate&quot;:0,&quot;eeTotal&quot;:0,&quot;esCt&quot;:0,&quot;esRate&quot;:0,&quot;esTotal&quot;:0,&quot;fam1ChildCt&quot;:0,&quot;fam1ChildRate&quot;:0,&quot;fam1ChildTotal&quot;:0,&quot;fam2ChildCt&quot;:0,&quot;fam2ChildRate&quot;:0,&quot;fam2ChildTotal&quot;:0,&quot;fam3ChildCt&quot;:0,&quot;fam3ChildRate&quot;:0,&quot;fam3ChildTotal&quot;:0,&quot;quotePlanId&quot;:0,&quot;ratedRiders&quot;:null,&quot;tierStructure&quot;:null,&quot;tiers&quot;:null,&quot;tiersInfo&quot;:null,&quot;totalPremium&quot;:0},&quot;TotalLifeVolume&quot;:275000,&quot;ZipCodeMarketName&quot;:&quot;DAYTON&quot;,&quot;DependentTotalMonthlyPremium&quot;:90.75,&quot;tierRateExtData&quot;:[{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:0.31,&quot;tierName&quot;:&quot;Basic Life Rate/1000 Volume&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:85.25,&quot;tierName&quot;:&quot;Basic Life Monthly Premium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:5.5,&quot;tierName&quot;:&quot;AD&amp;D Monthly Premium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:90.75,&quot;tierName&quot;:&quot;Total Monthly Premium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:0.02,&quot;tierName&quot;:&quot;AD&amp;D Rate /1000 Volume&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:0.33,&quot;tierName&quot;:&quot;Total Rate / 1000 Volume&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:8.25,&quot;tierName&quot;:&quot;Total Rate per Employee&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:1089,&quot;tierName&quot;:&quot;Total Annual Premium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:275000,&quot;tierName&quot;:&quot;Total Life Volume&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:0,&quot;tierName&quot;:&quot;DependentTotalRatePerEmployee&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:90.75,&quot;tierName&quot;:&quot;DependentTotalMonthlyPremium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:1089,&quot;tierName&quot;:&quot;DependentTotalAnnualPremium&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null},{&quot;adjustedRate&quot;:null,&quot;adjustedRatePresent&quot;:false,&quot;adjustmentPer&quot;:null,&quot;ageBandRateId&quot;:null,&quot;originalRateAD_D&quot;:null,&quot;originalRateLfeStd&quot;:90.75,&quot;tierName&quot;:&quot;Er contribution EE Life Coverage&quot;,&quot;tierRatesExtId&quot;:null,&quot;tierRatesId&quot;:null}],&quot;ADNDMonthlyPremium&quot;:5.5,&quot;TotalMonthlyPremium&quot;:90.75,&quot;ageRatedPlanInfo&quot;:null,&quot;quoteStatus&quot;:&quot;Quoting&quot;,&quot;productCustom&quot;:{&quot;planIdSuffix&quot;:&quot;Employee&quot;,&quot;defaultRxPlanCode&quot;:null,&quot;planType&quot;:null,&quot;planStatus&quot;:null,&quot;actualBenefits&quot;:[],&quot;BIT&quot;:&quot;CG&quot;,&quot;DUNSInd&quot;:&quot;U&quot;,&quot;SA&quot;:&quot;00&quot;,&quot;productInsuranceLicenseType&quot;:null,&quot;rateId&quot;:null,&quot;platformIdentifier&quot;:null,&quot;BasicLifeBenefit&quot;:&quot;25000&quot;,&quot;otAreaIndicator&quot;:null,&quot;oisabitId&quot;:277465,&quot;LifePlanCode&quot;:&quot;F25K&quot;,&quot;LifeBenefitType&quot;:&quot;Employee&quot;,&quot;LifePlanType&quot;:&quot;DOLLAR&quot;,&quot;OI&quot;:&quot;01&quot;,&quot;id&quot;:null,&quot;productType&quot;:&quot;LFE&quot;,&quot;LifeProductTypeDesc&quot;:&quot;EMP LIFE&quot;,&quot;planFundingDescription&quot;:null}}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlan.action?quoteId=72839&amp;subgroupId=104656</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="238 /exemplar/sgquoting/QuotePlanGroups.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258497</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlanGroups.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="237 /exemplar/sgquoting/QuotePlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258496</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="236 /exemplar/sgquoting/SubgroupPlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258495</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SubgroupPlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="240 /exemplar/sgquoting/BasicResource.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subgroupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subgroupId</stringProp>
                <stringProp name="Argument.value">104656</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258498</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/BasicResource.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="241 /exemplar/sgquoting/uhgSaveRateIds.action?quoteId=72839" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgSaveRateIds.action?quoteId=72839</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="242 /exemplar/sgquoting/EmailProposal.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="proposalSettings" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">proposalSettings</stringProp>
                <stringProp name="Argument.value">coverLetter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="proposalSettings" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">proposalSettings</stringProp>
                <stringProp name="Argument.value">sbc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="documentType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">documentType</stringProp>
                <stringProp name="Argument.value">pdf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="recipients" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">recipients</stringProp>
                <stringProp name="Argument.value">otherPeople</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="otherPeople" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">otherPeople</stringProp>
                <stringProp name="Argument.value">noreply@connecture.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="subject" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">subject</stringProp>
                <stringProp name="Argument.value">Your Quote From UnitedHealthcare</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">message</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">detailedCensusInformation</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">medicalPlanSummary</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">medicalCompositeTable</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">medicalRiders</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">specialtyPlanSummaryRates</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">predicationPages</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="standardProposalSetting" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">standardProposalSetting</stringProp>
                <stringProp name="Argument.value">disclosures</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/EmailProposal.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="243 /exemplar/sgquoting/profile.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258499</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/profile.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="246 /exemplar/sgquoting/QuotePlanGroups.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258502</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlanGroups.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="246 /exemplar/sgquoting/QuotePlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258501</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuotePlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="244 /exemplar/sgquoting/SubgroupPlans.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/SubgroupPlans.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="248 /exemplar/sgquoting/Employer.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258505</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/Employer.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="248 /exemplar/sgquoting/StartEnrollment.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258504</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/StartEnrollment.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="247 /exemplar/sgquoting/PlanSelectionToEnroll.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258503</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/PlanSelectionToEnroll.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="249 /exemplar/sgquoting/QuoteSummaryRulesValidation.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="selectedSinglePlans" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">selectedSinglePlans</stringProp>
                <stringProp name="Argument.value">[235705,235706,235707]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="selectedMultiChoicePackages" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">selectedMultiChoicePackages</stringProp>
                <stringProp name="Argument.value">[{&quot;packageName&quot;:&quot;OH015-104656&quot;,&quot;quotePlanIds&quot;:[&quot;235702&quot;]}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/QuoteSummaryRulesValidation.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="251 /exemplar/sgquoting/CheckEnrolling.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="groupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">groupId</stringProp>
                <stringProp name="Argument.value">64969</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432258506</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/CheckEnrolling.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="252 /exemplar/sgquoting/StartEnrollment.action?quoteId=72839" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;carrierName&quot;:&quot;UnitedHealthCare&quot;,&quot;censusVerified&quot;:false,&quot;createdBy&quot;:&quot;Bob B Broker&quot;,&quot;employer&quot;:{&quot;additionalEmailText&quot;:null,&quot;email&quot;:null,&quot;federalTaxId&quot;:null,&quot;firstName&quot;:null,&quot;lastName&quot;:null},&quot;enrollmentId&quot;:0,&quot;errors&quot;:[],&quot;groupId&quot;:64969,&quot;id&quot;:null,&quot;quoteId&quot;:72839,&quot;ratedPlansScreenBean&quot;:{&quot;benefitNames&quot;:[&quot;Deductible&quot;,&quot;Coinsurance&quot;,&quot;Office Visit Copay&quot;,&quot;Pharmacy&quot;],&quot;dentalBenefitNames&quot;:[&quot;Standard&quot;,&quot;Deductible&quot;,&quot;Maximum&quot;],&quot;medicalBenefitNames&quot;:[&quot;Deductible&quot;,&quot;Coinsurance&quot;,&quot;Office Visit Copay&quot;,&quot;Pharmacy&quot;],&quot;sections&quot;:[],&quot;subgroups&quot;:[{&quot;sections&quot;:[{&quot;planSortOrder&quot;:0,&quot;plans&quot;:[{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;F25K&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235707,&quot;planName&quot;:&quot;F25K&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;single&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183932,&quot;quotePlanId&quot;:235707,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:true,&quot;subgroupId&quot;:0}],&quot;sectionName&quot;:&quot;Basic Life &amp; AD&amp;D&quot;,&quot;selectedPackage&quot;:false,&quot;sortOrder&quot;:0},{&quot;planSortOrder&quot;:0,&quot;plans&quot;:[{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;V1273&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235706,&quot;planName&quot;:&quot;V1273&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;single&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183931,&quot;quotePlanId&quot;:235706,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:true,&quot;subgroupId&quot;:0}],&quot;sectionName&quot;:&quot;Vision&quot;,&quot;selectedPackage&quot;:false,&quot;sortOrder&quot;:0},{&quot;planSortOrder&quot;:0,&quot;plans&quot;:[{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;AC76&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235702,&quot;planName&quot;:&quot;AC76&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;group&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183927,&quot;quotePlanId&quot;:235702,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:true,&quot;subgroupId&quot;:0},{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;AC77&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235703,&quot;planName&quot;:&quot;AC77&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;group&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183928,&quot;quotePlanId&quot;:235703,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:false,&quot;subgroupId&quot;:0},{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;AC8F&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235704,&quot;planName&quot;:&quot;AC8F&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;group&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183929,&quot;quotePlanId&quot;:235704,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:false,&quot;subgroupId&quot;:0}],&quot;sectionName&quot;:&quot;Medical&quot;,&quot;selectedPackage&quot;:false,&quot;sortOrder&quot;:0},{&quot;planSortOrder&quot;:0,&quot;plans&quot;:[{&quot;ageRated&quot;:false,&quot;benefitValues&quot;:[],&quot;estimatedTotal&quot;:&quot;NA&quot;,&quot;internalCode&quot;:&quot;L0001&quot;,&quot;percentDifferential&quot;:null,&quot;planId&quot;:235705,&quot;planName&quot;:&quot;L0001&quot;,&quot;planSortOrder&quot;:0,&quot;planType&quot;:&quot;single&quot;,&quot;planTypeCode&quot;:null,&quot;planUnavailable&quot;:false,&quot;quotePackageId&quot;:183930,&quot;quotePlanId&quot;:235705,&quot;rates&quot;:[&quot;Rates Not Available&quot;],&quot;selected&quot;:true,&quot;subgroupId&quot;:0}],&quot;sectionName&quot;:&quot;Dental&quot;,&quot;selectedPackage&quot;:false,&quot;sortOrder&quot;:0}],&quot;subgroupId&quot;:104656,&quot;subgroupName&quot;:&quot;Load a Mule (All Employees)&quot;}],&quot;tierLabels&quot;:[&quot;ES&quot;,&quot;EC&quot;,&quot;Fam&quot;,&quot;EE&quot;]},&quot;selectedUser&quot;:&quot;broker&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/StartEnrollment.action?quoteId=72839</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Session-Token" elementType="Header">
                <stringProp name="Header.name">X-Session-Token</stringProp>
                <stringProp name="Header.value">SESSIONTOKEN965785909900215936</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="254 /exemplar/applicationservice/SGEREnrollmentStartBroker.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quoteId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">quoteId</stringProp>
                <stringProp name="Argument.value">72840</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">groupId</stringProp>
                <stringProp name="Argument.value">64969</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enrollmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">enrollmentId</stringProp>
                <stringProp name="Argument.value">13087</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/SGEREnrollmentStartBroker.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="255 /exemplar/applicationservice/SGEREnrollment.action" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appResponseCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">appResponseCode</stringProp>
                <stringProp name="Argument.value">4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/SGEREnrollment.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/quoting/sg_quoting.html</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="258 /exemplar/scripts/thirdparty/jquery.address-1.3.2.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="strict" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">strict</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/thirdparty/jquery.address-1.3.2.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="268 /exemplar/sgquoting/uhgKeepAliveOptions.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/sgquoting/uhgKeepAliveOptions.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="270 /uespublic/prelogin/login.jsp" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TYPE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TYPE</stringProp>
                <stringProp name="Argument.value">33554433</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="REALMOID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">REALMOID</stringProp>
                <stringProp name="Argument.value">06-a7c0c3ca-b46f-47f4-b5d3-ba31b2e6ce26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAUTHREASON" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAUTHREASON</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SMAGENTNAME" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SMAGENTNAME</stringProp>
                <stringProp name="Argument.value">-SM-apsps0121--was</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="METHOD" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">METHOD</stringProp>
                <stringProp name="Argument.value">GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RCDSTRING" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RCDSTRING</stringProp>
                <stringProp name="Argument.value">-SM-%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432713135%3frandom--no--cache%3d18ab8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TARGET</stringProp>
                <stringProp name="Argument.value">-SM-http%3a%2f%2fstage%2eunitedeservices%2ecom%2fuessecured%2fimages%2fkeepAlive%2egif%3frandomNumber%3d1463432713135%3frandom--no--cache%3d18ab8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage.unitedeservices.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uespublic/prelogin/login.jsp</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/png,image/*;q=0.8,*/*;q=0.5</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="265 /exemplar/applicationservice/ApplicationRuleLibrary.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appResponseCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">appResponseCode</stringProp>
                <stringProp name="Argument.value">4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/ApplicationRuleLibrary.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="264 /exemplar/applicationservice/LoadWidgetScripts.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/LoadWidgetScripts.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="273 /exemplar/topmenu/getMenuThemeData.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432722668</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/topmenu/getMenuThemeData.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="274 /exemplar/topmenu/findTheme.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432722954</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/topmenu/findTheme.action</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="275 /exemplar/scripts/grouppolicyadmin/jquery.faqhelper.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432722956</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/grouppolicyadmin/jquery.faqhelper.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="277 /exemplar/scripts/grouppolicyadmin/jquery.gtmmanager.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432723474</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/scripts/grouppolicyadmin/jquery.gtmmanager.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="278 /exemplar/resources/styletemplates/insureadvantage/js/applyTheme.js" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1463432724752</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/resources/styletemplates/insureadvantage/js/applyTheme.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="283 /exemplar/fonts/OpenSans-Regular-webfont.ttf" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/fonts/OpenSans-Regular-webfont.ttf</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="271 /exemplar/applicationservice/ApplicationData.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="struts.token.name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">struts.token.name</stringProp>
                <stringProp name="Argument.value">APPRUNTIME228532</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="isMobile" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">isMobile</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/ApplicationData.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="284 /exemplar/applicationservice/GetIsAppSubmitted.action" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appResponseCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">appResponseCode</stringProp>
                <stringProp name="Argument.value">4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">vuhgdev02.ct.com</stringProp>
          <stringProp name="HTTPSampler.port">8280</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/exemplar/applicationservice/GetIsAppSubmitted.action</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://vuhgdev02.ct.com:8280/exemplar/applicationservice/SGEREnrollment.action?appResponseCode=4b4c3a77-34ba-4b76-bbd2-013c98e60fd5</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
